(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[833],{3779:(t,e,i)=>{Promise.resolve().then(i.bind(i,6051))},6051:(t,e,i)=>{"use strict";i.r(e),i.d(e,{default:()=>M});var s=i(6384),r=i(6636),a=i(4582);class n{start(){this.isRunning||(this.isRunning=!0,this.lastTimestamp=performance.now(),this.accumulator=0,this.gameLoop())}stop(){this.isRunning=!1,null!==this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null)}gameLoop(){if(!this.isRunning)return;let t=performance.now(),e=t-this.lastTimestamp;for(this.lastTimestamp=t,this.accumulator+=e,this.frameCount++,this.fpsTimer+=e,this.fpsTimer>=1e3&&(this.currentFPS=this.frameCount,this.frameCount=0,this.fpsTimer=0);this.accumulator>=this.FRAME_DURATION;){let e=t-this.lastUpdateTime>=this.UPDATE_INTERVAL;this.updateCallback(this.FRAME_DURATION/1e3,e),this.accumulator-=this.FRAME_DURATION,e&&(this.lastUpdateTime=t)}this.renderCallback(),this.animationFrameId=requestAnimationFrame(()=>this.gameLoop())}getCurrentFPS(){return this.currentFPS}getTargetFPS(){return this.TARGET_FPS}getGameTime(){return performance.now()}constructor(t,e){this.isRunning=!1,this.lastTimestamp=0,this.animationFrameId=null,this.TARGET_FPS=60,this.FRAME_DURATION=1e3/this.TARGET_FPS,this.accumulator=0,this.frameCount=0,this.fpsTimer=0,this.currentFPS=0,this.lastUpdateTime=0,this.UPDATE_INTERVAL=16.67,this.updateCallback=t,this.renderCallback=e}}class o{setCanvas(t){this.canvas=t,this.setupMouseListeners(t)}setupEventListeners(){window.addEventListener("keydown",t=>{var e;let i=null!=(e=o.keyMap[t.key])?e:t.key.toLowerCase();!this.keyState[i]&&(this.justPressed[i]=!0,(i in o.keyMap||["attack","interact","inventory"].includes(i)||i.startsWith("slot"))&&console.log("Key pressed: ".concat(t.key," â†’ ").concat(i))),this.keyState[i]=!0,this.keys.add(i)}),window.addEventListener("keyup",t=>{var e;let i=null!=(e=o.keyMap[t.key])?e:t.key.toLowerCase();this.keyState[i]=!1,this.keys.delete(i),this.justPressed[i]=!1})}setupMouseListeners(t){t.addEventListener("mousedown",t=>{this.isDragging=!0,this.dragStart={x:t.clientX,y:t.clientY},this.lastMouse={x:t.clientX,y:t.clientY},this.dragDelta={x:0,y:0}}),t.addEventListener("mousemove",t=>{if(this.isDragging&&this.lastMouse){let e=t.clientX-this.lastMouse.x,i=t.clientY-this.lastMouse.y;this.dragDelta.x+=e,this.dragDelta.y+=i,this.lastMouse={x:t.clientX,y:t.clientY}}}),t.addEventListener("mouseup",t=>{this.isDragging=!1,this.dragStart=null,this.lastMouse=null}),t.addEventListener("mouseleave",t=>{this.isDragging=!1,this.dragStart=null,this.lastMouse=null})}update(){this.justPressed={}}isKeyPressed(t){var e;return null!=(e=this.keyState[t])&&e}wasKeyJustPressed(t){var e;return null!=(e=this.justPressed[t])&&e}getMovementDirection(){let t=0,e=0;return this.isKeyPressed("up")&&(e-=1),this.isKeyPressed("down")&&(e+=1),this.isKeyPressed("left")&&(t-=1),this.isKeyPressed("right")&&(t+=1),{x:t,y:e}}constructor(t){this.canvas=t,this.isDragging=!1,this.dragStart=null,this.lastMouse=null,this.dragDelta={x:0,y:0},this.keys=new Set,this.keyState={},this.justPressed={},this.setupEventListeners(),t&&this.setupMouseListeners(t)}}o.keyMap={w:"up",ArrowUp:"up",s:"down",ArrowDown:"down",a:"left",ArrowLeft:"left",d:"right",ArrowRight:"right",q:"attack",f:"interact",e:"inventory",1:"slot1",2:"slot2",3:"slot3",4:"slot4",5:"slot5",6:"slot6",7:"slot7",8:"slot8",9:"slot9"};var h=i(5955),l=i(1623),c=i.n(l),u=i(7013);class d{async loadImage(){try{this.image=new Image,this.image.src=(0,u.O)(this.config.imagePath),await new Promise((t,e)=>{if(!this.image)return void e(Error("Image is null"));this.image.onload=()=>{this.processFrames(),this.isLoaded=!0,t()},this.image.onerror=()=>{e(Error("Failed to load sprite: ".concat(this.config.imagePath)))}})}catch(t){console.error("Failed to load sprite: ".concat(this.config.imagePath),t)}}processFrames(){if(this.image){this.frames=[];for(let t=0;t<this.totalFrames;t++){let e=Math.floor(t/this.framesPerRow),i=t%this.framesPerRow;this.frames.push({image:this.image,x:i*this.frameWidth,y:e*this.frameHeight,width:this.frameWidth,height:this.frameHeight})}}}update(t){if(!this.isLoaded||this.frames.length<=1)return;this.lastFrameTime+=1e3*t;let e=this.animationDuration/this.totalFrames;this.lastFrameTime>=e&&(this.lastFrameTime=0,this.loop?this.currentFrame=(this.currentFrame+1)%this.totalFrames:this.currentFrame<this.totalFrames-1&&this.currentFrame++)}render(t,e,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if(!this.isLoaded||!this.frames[this.currentFrame])return;let r=this.frames[this.currentFrame];r&&t.drawImage(r.image,r.x,r.y,r.width,r.height,e,i,r.width*s,r.height*s)}setFrame(t){t>=0&&t<this.totalFrames&&(this.currentFrame=t)}getCurrentFrame(){return this.currentFrame}getFrameCount(){return this.totalFrames}isAnimationComplete(){return!this.loop&&this.currentFrame===this.totalFrames-1}reset(){this.currentFrame=0,this.lastFrameTime=0}isImageLoaded(){return this.isLoaded}canAdvanceFrame(){return!!this.loop||this.currentFrame<this.totalFrames-1}getNextFrame(){return this.loop?(this.currentFrame+1)%this.totalFrames:Math.min(this.currentFrame+1,this.totalFrames-1)}constructor(t){var e,i;this.config=t,this.image=null,this.frames=[],this.currentFrame=0,this.lastFrameTime=0,this.isLoaded=!1,this.animationDuration=null!=(e=t.animationDuration)?e:1e3,this.loop=!1!==t.loop,this.totalFrames=t.totalFrames,this.frameWidth=t.frameWidth,this.frameHeight=t.frameHeight,this.framesPerRow=null!=(i=t.framesPerRow)?i:this.totalFrames,this.loadImage()}}class g{render(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.isDestroyed||this.sprite.render(t,this.x,this.y,e)}renderAtScreenPosition(t,e,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.isDestroyed||this.sprite.render(t,e,i,s)}takeDamage(t){return this.isDestroyed?{destroyed:!1,dropValue:0,dropType:""}:(this.health-=t,this.health<=0)?(this.isDestroyed=!0,{destroyed:!0,dropValue:this.dropValue,dropType:this.dropType}):{destroyed:!1,dropValue:0,dropType:""}}getHealth(){return this.health}getMaxHealth(){return this.maxHealth}getHealthPercentage(){return this.health/this.maxHealth}isStructureDestroyed(){return this.isDestroyed}getDropInfo(){return{dropValue:this.dropValue,dropType:this.dropType}}constructor(t){this.isDestroyed=!1,this.x=t.x,this.y=t.y,this.health=t.health,this.maxHealth=t.health,this.dropValue=t.dropValue,this.dropType=t.dropType,this.sprite=this.createSprite()}}var m=function(t){return t[t.CUT_DOWN=0]="CUT_DOWN",t[t.YOUNG=1]="YOUNG",t[t.TALL=2]="TALL",t[t.FULL=3]="FULL",t}({});class p extends g{createSprite(){var t;return new d({imagePath:"/sprites/Nature/Trees.png",frameWidth:16,frameHeight:16,totalFrames:4,framesPerRow:4,animationDuration:4*(null!=(t=this.growthTimePerStage)?t:36e5),loop:!1})}update(t){this.isGrowthComplete||(this.timeSinceLastGrowth+=1e3*t,this.timeSinceLastGrowth>=this.growthTimePerStage&&this.canGrow()&&(this.grow(),this.timeSinceLastGrowth=0),this.sprite.update(t))}render(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.sprite.render(t,this.x,this.y,e)}renderAtScreenPosition(t,e,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.sprite.render(t,e,i,s)}grow(){this.currentStage<3&&(this.currentStage++,this.sprite.setFrame(this.currentStage),3===this.currentStage&&(this.isGrowthComplete=!0))}canGrow(){return this.currentStage<3}cutDown(){this.currentStage=0,this.sprite.setFrame(this.currentStage),this.isGrowthComplete=!1,this.timeSinceLastGrowth=0}plant(){0===this.currentStage&&(this.currentStage=1,this.sprite.setFrame(this.currentStage),this.isGrowthComplete=!1,this.timeSinceLastGrowth=0)}getCurrentStage(){return this.currentStage}getGrowthProgress(){return this.isGrowthComplete?1:this.timeSinceLastGrowth/this.growthTimePerStage}isFullyGrown(){return 3===this.currentStage}isCutDown(){return 0===this.currentStage}forceGrowthStage(t){this.currentStage=t,this.sprite.setFrame(t),this.isGrowthComplete=3===t,this.timeSinceLastGrowth=0}takeDamage(t){let e=super.takeDamage(t);return e.destroyed&&this.cutDown(),e}constructor(t){var e,i;super({...t,health:50,dropValue:5,dropType:"wood"}),this.timeSinceLastGrowth=0,this.isGrowthComplete=!1,this.currentStage=null!=(e=t.initialStage)?e:1,this.growthTimePerStage=null!=(i=t.growthTimePerStage)?i:36e5,this.sprite=this.createSprite(),this.sprite.setFrame(this.currentStage)}}var S=function(t){return t[t.VARIANT_1=1]="VARIANT_1",t[t.VARIANT_2=2]="VARIANT_2",t[t.VARIANT_3=3]="VARIANT_3",t}({});class y extends g{createSprite(){var t,e,i;let s=null!=(e=null==(t=this.frameSequence)?void 0:t.length)?e:2;return new d({imagePath:"/sprites/Nature/Cactus.png",frameWidth:16,frameHeight:16,totalFrames:8,framesPerRow:8,animationDuration:(null!=(i=this.growthTimePerStage)?i:6e5)*s,loop:!1})}getRandomVariant(){var t;let e=[1,2,3];return null!=(t=e[Math.floor(Math.random()*e.length)])?t:1}getFrameSequence(t){switch(t){case 1:default:return[4,3];case 2:return[5,6,7];case 3:return[1,0]}}update(t){this.isGrowthComplete||(this.timeSinceLastGrowth+=1e3*t,this.timeSinceLastGrowth>=this.growthTimePerStage&&this.canGrow()&&(this.grow(),this.timeSinceLastGrowth=0),this.sprite.update(t))}render(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.sprite.render(t,this.x,this.y,e)}renderAtScreenPosition(t,e,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.sprite.render(t,e,i,s)}grow(){if(this.currentStage<this.frameSequence.length-1){var t;this.currentStage++,this.sprite.setFrame(null!=(t=this.frameSequence[this.currentStage])?t:0),this.currentStage===this.frameSequence.length-1&&(this.isGrowthComplete=!0)}}canGrow(){return this.currentStage<this.frameSequence.length-1}getCurrentStage(){return this.currentStage}getVariant(){return this.variant}getGrowthProgress(){return this.isGrowthComplete?1:this.timeSinceLastGrowth/this.growthTimePerStage}isFullyGrown(){return this.currentStage===this.frameSequence.length-1}forceGrowthStage(t){if(t>=0&&t<this.frameSequence.length){var e;this.currentStage=t,this.sprite.setFrame(null!=(e=this.frameSequence[t])?e:0),this.isGrowthComplete=t===this.frameSequence.length-1,this.timeSinceLastGrowth=0}}constructor(t){var e,i,s,r;super({...t,health:15,dropValue:1,dropType:"cactus"}),this.timeSinceLastGrowth=0,this.isGrowthComplete=!1,this.variant=null!=(e=t.variant)?e:this.getRandomVariant(),this.currentStage=null!=(i=t.initialStage)?i:0,this.growthTimePerStage=null!=(s=t.growthTimePerStage)?s:6e5,this.frameSequence=this.getFrameSequence(this.variant),this.sprite=this.createSprite(),this.sprite.setFrame(null!=(r=this.frameSequence[this.currentStage])?r:0)}}class T{generateChunk(t,e,i){let s=[];for(let r=0;r<i;r++){let a=[];for(let s=0;s<i;s++){let n=t*i+s,o=e*i+r,h=this.generateHeight(n,o),l=this.generateTemperature(n,o),c=this.generateHumidity(n,o),{value:u,flowDirection:d}=this.generateRiver(n,o,h),g=this.getTileTypeFromClimate(h,l,c,u,d),m={x:n,y:o,value:g,height:h,temperature:l,humidity:c,riverValue:u,flowDirection:d};"FOREST"===g?m.trees=this.generateTrees(n,o,1):"GRASS"===g&&(m.trees=this.generateTrees(n,o,.05)),"SAND"===g&&(m.cactus=this.generateCactus(n,o,.05));let p=this.getSpriteIdForTile(g);p&&(m.spriteId=p),a.push(m)}s.push(a)}return s}generateHeight(t,e){let i=.02*t,s=.02*e,r=.5*this.heightNoise(i,s);return r+=.25*this.heightNoise(2*i,2*s),r+=.125*this.heightNoise(4*i,4*s),r+=.0625*this.heightNoise(8*i,8*s),r=Math.pow(r=(r+1)/2,1.2)}generateTemperature(t,e){let i=.01*t,s=.01*e,r=.5*this.temperatureNoise(i,s);return r+=.25*this.temperatureNoise(2*i,2*s)+.125*this.temperatureNoise(4*i,4*s),r=(r+1)/2}generateHumidity(t,e){let i=.015*t,s=.015*e,r=.5*this.humidityNoise(i,s);return r+=.25*this.humidityNoise(2*i,2*s)+.125*this.humidityNoise(4*i,4*s),r=(r+1)/2}generateRiver(t,e,i){let s=.03*t,r=.03*e,a=.5*this.riverNoise(s,r);a+=.25*this.riverNoise(2*s,2*r)+.125*this.riverNoise(4*s,4*r);let n=.5*this.riverPathNoise(.05*t,.05*e);n+=.25*this.riverPathNoise(.05*t*2,.05*e*2)+.125*this.riverPathNoise(.05*t*4,.05*e*4),n=(n+1)/2;let o=this.calculateFlowDirection(t,e,i);return a*=Math.pow(1-Math.abs(i-.3),2)*(.5+.5*n),{value:a+=(Math.random()-.5)*.05,flowDirection:o}}calculateFlowDirection(t,e,i){let s=i,r=0;return[{dx:1,dy:0},{dx:1,dy:1},{dx:0,dy:1},{dx:-1,dy:1},{dx:-1,dy:0},{dx:-1,dy:-1},{dx:0,dy:-1},{dx:1,dy:-1}].forEach((i,a)=>{let n=this.generateHeight(t+i.dx,e+i.dy);n<s&&(s=n,r=Math.PI/4*a)}),r}getTileTypeFromClimate(t,e,i,s,r){if(s>.75&&t>.2&&t<.8){let t=.1*Math.sin(2*r);if(Math.abs(s-.75)<.1+t)return"RIVER";if(Math.abs(s-.75)<.1+t+.05)return"SAND"}return t<.35?t<.3?"DEEP_WATER":"SHALLOW_WATER":e<.2?t>.8?"SNOW":t>.7?"STONE":t>.65?"COBBLESTONE":i>.6?"FOREST":i>.3?"GRASS":"STONE":e<.4?t>.7?"SNOW":t>.65?"STONE":t>.6?"COBBLESTONE":i>.7?"FOREST":i>.4?"GRASS":i>.2?"SAND":"STONE":e<.7?t>.6?"STONE":t>.55?"COBBLESTONE":i>.7?"FOREST":i>.4?"GRASS":t<.25&&i>.3?.7>Math.random()?"CLAY":"MUD":t<.25||i<.3?"SAND":"GRASS":t>.5?"STONE":t>.45?"COBBLESTONE":i>.6?"GRASS":t<.25?i>.3?.8>Math.random()?"CLAY":"MUD":"SAND":i<.5||.7>Math.random()?"SAND":"GRASS"}generateTile(t,e){let i=this.generateHeight(t,e),s=this.generateTemperature(t,e),r=this.generateHumidity(t,e),{value:a,flowDirection:n}=this.generateRiver(t,e,i),o=this.getTileTypeFromClimate(i,s,r,a,n),h={x:t,y:e,value:o,height:i,temperature:s,humidity:r,riverValue:a,flowDirection:n};"FOREST"===o?h.trees=this.generateTrees(t,e,1):"GRASS"===o&&(h.trees=this.generateTrees(t,e,.05)),"SAND"===o&&(h.cactus=this.generateCactus(t,e,.05));let l=this.getSpriteIdForTile(o);return l&&(h.spriteId=l),h}generateTrees(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=[];if(Math.random()>i)return s;let r=t*T.TILE_SIZE+T.TILE_SIZE/2,a=e*T.TILE_SIZE+T.TILE_SIZE/2,n=Math.random(),o=m.YOUNG;return n<.1?o=m.FULL:n<.3&&(o=m.TALL),s.push(new p({x:r,y:a,initialStage:o,growthTimePerStage:36e5})),s}generateCactus(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=[];if(Math.random()>i)return s;let r=t*T.TILE_SIZE+T.TILE_SIZE/2,a=e*T.TILE_SIZE+T.TILE_SIZE/2,n=[S.VARIANT_1,S.VARIANT_2,S.VARIANT_3],o=n[Math.floor(Math.random()*n.length)],h=Math.random(),l=0;return h<.2&&(l=1,o===S.VARIANT_2&&h<.1&&(l=2)),s.push(new y({x:r,y:a,variant:o,initialStage:l,growthTimePerStage:6e5})),s}getSpriteIdForTile(t){}constructor(t){this.seed=null!=t?t:Math.random().toString(36).substring(2);let e=c()(this.seed);this.heightNoise=(0,h.fu)(e),this.temperatureNoise=(0,h.fu)(e),this.humidityNoise=(0,h.fu)(e),this.riverNoise=(0,h.fu)(e),this.riverPathNoise=(0,h.fu)(e)}}T.TILE_SIZE=16;class v{setMoveCallback(t){this.onMoveCallback=t}setDirectionChangeCallback(t){this.onDirectionChangeCallback=t}canMoveToTile(t){return!(!t||"DEEP_WATER"===t.value||"STONE"===t.value||t.trees&&t.trees.length>0&&t.trees.some(t=>t.getHealth()>0)||t.cactus&&t.cactus.length>0&&t.cactus.some(t=>t.getHealth()>0))&&!0}canMoveFromMud(){return Math.random()<1/3}canMoveFromSnow(){return Math.random()<1/4}update(t,e){if(this.moveCooldown>0&&(this.moveCooldown-=16,this.moveCooldown>0))return;let i=this.world.getTile(t.position.x/this.TILE_SIZE,t.position.y/this.TILE_SIZE);if((null==i?void 0:i.value)==="MUD"&&!this.canMoveFromMud()||(null==i?void 0:i.value)==="SNOW"&&!this.canMoveFromSnow())return;let s=!1,r=!1,a=null,n={...t.position};if(e.wasKeyJustPressed("up")||e.isKeyPressed("up")?(n.y-=this.TILE_SIZE,s=!0,a="up"):e.wasKeyJustPressed("down")||e.isKeyPressed("down")?(n.y+=this.TILE_SIZE,s=!0,a="down"):e.wasKeyJustPressed("left")||e.isKeyPressed("left")?(n.x-=this.TILE_SIZE,s=!0,a="left"):(e.wasKeyJustPressed("right")||e.isKeyPressed("right"))&&(n.x+=this.TILE_SIZE,s=!0,a="right"),s){let e=this.world.getTile(n.x/this.TILE_SIZE,n.y/this.TILE_SIZE);this.canMoveToTile(e)?(t.position=n,r=!0):console.log("Movement blocked - cannot move to ".concat((null==e?void 0:e.value)||"UNKNOWN"," tile")),a&&this.onDirectionChangeCallback&&this.onDirectionChangeCallback(a,r)}if(r){t.position.x=Math.round(t.position.x/this.TILE_SIZE)*this.TILE_SIZE,t.position.y=Math.round(t.position.y/this.TILE_SIZE)*this.TILE_SIZE,this.moveCooldown=this.moveDelay;let e=this.world.getTile(t.position.x/this.TILE_SIZE,t.position.y/this.TILE_SIZE),i=(null==e?void 0:e.value)||"UNKNOWN";if((null==e?void 0:e.trees)&&e.trees.length>0){let t=e.trees[0];i+=" (Tree: ".concat(null==t?void 0:t.getHealth(),"/").concat(null==t?void 0:t.getMaxHealth()," HP)")}if((null==e?void 0:e.cactus)&&e.cactus.length>0){let t=e.cactus[0];i+=" (Cactus: ".concat(null==t?void 0:t.getHealth(),"/").concat(null==t?void 0:t.getMaxHealth()," HP)")}console.log("Current tile:",i),this.onMoveCallback&&a&&this.onMoveCallback(a)}}constructor(t){this.TILE_SIZE=T.TILE_SIZE,this.moveCooldown=0,this.moveDelay=120,this.world=t}}class f{getTile(t,e){var i,s;if(!(t<0)&&!(e<0)&&!(t>=this.size)&&!(e>=this.size)){if(null!=(i=this.tiles)[e]||(i[e]=[]),!this.tiles[e][t]){let i=this.chunkX*this.size+t,s=this.chunkY*this.size+e;this.tiles[e][t]=this.generator.generateTile(i,s)}return this.tiles[e][t]}}setTile(t,e,i){var s,r;if(t<0||e<0||t>=this.size||e>=this.size)return;null!=(s=this.tiles)[e]||(s[e]=[]),this.tiles[e][t]=i;let a="".concat(t,",").concat(e);this.entityData.modifiedTiles.set(a,i)}addTree(t,e,i){let s="".concat(t,",").concat(e);this.entityData.trees.set(s,i)}removeTree(t,e){let i="".concat(t,",").concat(e);this.entityData.trees.delete(i)}getTree(t,e){let i="".concat(t,",").concat(e);return this.entityData.trees.get(i)}addCactus(t,e,i){let s="".concat(t,",").concat(e);this.entityData.cactus.set(s,i)}removeCactus(t,e){let i="".concat(t,",").concat(e);this.entityData.cactus.delete(i)}getCactus(t,e){let i="".concat(t,",").concat(e);return this.entityData.cactus.get(i)}getAllTrees(){return this.entityData.trees}getAllCactus(){return this.entityData.cactus}getModifiedTiles(){return this.entityData.modifiedTiles}hasModifications(){return this.entityData.modifiedTiles.size>0||this.entityData.trees.size>0||this.entityData.cactus.size>0}constructor(t,e,i,s,r){this.chunkX=t,this.chunkY=e,this.size=i,this.tiles=s,this.generator=r,this.entityData={trees:new Map,cactus:new Map,modifiedTiles:new Map}}}var w=i(6311);class E{setAnimationSystem(t){this.animationSystem=t}invalidateCache(){this.cacheValid=!1}update(t){this.updateDirtRegeneration(t)}updateDirtRegeneration(t){for(let[i,s]of this.visibleTileCache)if("DIRT"===s.value){var e;null!=s.dirtTimer||(s.dirtTimer=0),s.dirtTimer+=1e3*t,s.dirtTimer>=3e4&&(s.value="GRASS",s.dirtTimer=void 0,this.invalidateCache(),console.log("DIRT tile regenerated to GRASS at (".concat(s.x,", ").concat(s.y,")")))}}render(t,e){for(let[i,s]of(this.lastCameraX===e.position.x&&this.lastCameraY===e.position.y&&this.lastViewWidth===e.viewWidth&&this.lastViewHeight===e.viewHeight&&this.cacheValid||(this.updateVisibleTileCache(e,t),this.lastCameraX=e.position.x,this.lastCameraY=e.position.y,this.lastViewWidth=e.viewWidth,this.lastViewHeight=e.viewHeight,this.cacheValid=!0),this.visibleTileCache)){let r=i.split(",").map(Number);if(2!==r.length||void 0===r[0]||void 0===r[1])continue;let a=r[0],n=r[1],o=e.worldToScreen(a*this.TILE_SIZE,n*this.TILE_SIZE);this.renderTile(t,s,o.x,o.y)}}updateVisibleTileCache(t,e){this.visibleTileCache.clear();let i=Math.floor(t.position.x/this.TILE_SIZE)-2,s=Math.floor(t.position.y/this.TILE_SIZE)-2,r=Math.ceil(e.canvas.width/this.TILE_SIZE)+4,a=Math.ceil(e.canvas.height/this.TILE_SIZE)+4;for(let t=0;t<=a;t++)for(let e=0;e<=r;e++){let r=i+e,a=s+t,n=this.getTile(r,a),o="".concat(r,",").concat(a);this.visibleTileCache.set(o,n)}}renderTile(t,e,i,s){let r=i-this.TILE_SIZE/2,a=s-this.TILE_SIZE/2;t.fillStyle=this.getTileColor(e.value),t.fillRect(r+1,a+1,this.TILE_SIZE-2,this.TILE_SIZE-2),e.spriteId&&this.spriteGenerator.renderSprite(t,e.spriteId,r+1,a+1)}getTileColor(t){switch(t){case"DEEP_WATER":return"#00008B";case"SHALLOW_WATER":return"#4169E1";case"RIVER":return"#1E90FF";case"SAND":return"#F4A460";case"GRASS":return"#90EE90";case"MUD":return"#8B4513";case"DIRT":return"#CD853F";case"CLAY":return"#CD7F32";case"FOREST":return"#006400";case"GRAVEL":return"#B8B8B8";case"COBBLESTONE":return"#A9A9A9";case"STONE":return"#808080";case"SNOW":return"#FFFFFF";case"PLAYER":return"red";default:return"#000000"}}chunkKey(t,e){return"".concat(t,",").concat(e)}getOrCreateChunk(t,e){let i=this.chunkKey(t,e),s=this.chunks.get(i);if(!s){let r=this.generator.generateChunk(t,e,E.CHUNK_SIZE);s=new f(t,e,E.CHUNK_SIZE,r,this.generator),this.chunks.set(i,s),this.animationSystem&&(this.registerChunkTrees(s,r),this.registerChunkCactus(s,r))}return s}registerChunkTrees(t,e){if(this.animationSystem){for(let t of e)for(let e of t)if(e.trees)for(let t of e.trees){let i="".concat(e.x,",").concat(e.y);this.animationSystem.addTree(i,t)}}}registerChunkCactus(t,e){if(this.animationSystem){for(let t of e)for(let e of t)if(e.cactus)for(let t of e.cactus){let i="".concat(e.x,",").concat(e.y);this.animationSystem.addCactus(i,t)}}}getTile(t,e){let i=Math.floor(t/E.CHUNK_SIZE),s=Math.floor(e/E.CHUNK_SIZE),r=(t%E.CHUNK_SIZE+E.CHUNK_SIZE)%E.CHUNK_SIZE,a=(e%E.CHUNK_SIZE+E.CHUNK_SIZE)%E.CHUNK_SIZE,n=this.getOrCreateChunk(i,s),o=n.getTile(r,a);return o||(o=this.generator.generateTile(t,e),n.setTile(r,a,o)),o}setTile(t,e,i){let s=Math.floor(t/E.CHUNK_SIZE),r=Math.floor(e/E.CHUNK_SIZE),a=(t%E.CHUNK_SIZE+E.CHUNK_SIZE)%E.CHUNK_SIZE,n=(e%E.CHUNK_SIZE+E.CHUNK_SIZE)%E.CHUNK_SIZE,o=this.getOrCreateChunk(s,r),h=o.getTile(a,n);h&&(h.prevValue=h.value,h.value=i,h.interacted=!0,o.setTile(a,n,h),this.invalidateCache())}setPlayerPosition(t,e,i,s){let r=this.getTile(t,e);if(r){var a;r.value=null!=(a=r.prevValue)?a:this.generator.generateTile(t,e).value,r.interacted=!1}let n=this.getTile(i,s);n&&(n.prevValue=n.value,n.value="PLAYER",n.interacted=!0),this.invalidateCache()}getVisibleChunks(t,e,i,s){let r=T.TILE_SIZE,a=Math.floor(t/r),n=Math.floor(e/r),o=Math.ceil((t+i)/r),h=Math.ceil((e+s)/r),l=[];for(let t=Math.floor(n/E.CHUNK_SIZE);t<=Math.floor(h/E.CHUNK_SIZE);t++)for(let e=Math.floor(a/E.CHUNK_SIZE);e<=Math.floor(o/E.CHUNK_SIZE);e++)l.push(this.getOrCreateChunk(e,t));return l}constructor(t){this.TILE_SIZE=T.TILE_SIZE,this.chunks=new Map,this.visibleTileCache=new Map,this.lastCameraX=0,this.lastCameraY=0,this.lastViewWidth=0,this.lastViewHeight=0,this.cacheValid=!1,this.generator=null!=t?t:new T,this.spriteGenerator=new w.N}}E.CHUNK_SIZE=16;class I{update(t){let e=T.TILE_SIZE,i=Math.round(t.x/e)*e,s=Math.round(t.y/e)*e;this.playerPosition={x:i,y:s},this.position={x:i-this.canvas.width/2,y:s-this.canvas.height/2},this.viewWidth=this.canvas.width,this.viewHeight=this.canvas.height}worldToScreen(t,e){return{x:t-this.position.x,y:e-this.position.y}}screenToWorld(t,e){return{x:t+this.position.x,y:e+this.position.y}}constructor(t){this.playerPosition={x:0,y:0},this.TILE_SIZE=T.TILE_SIZE,this.canvas=t,this.position={x:0,y:0},this.viewWidth=t.width,this.viewHeight=t.height}}class C{addTree(t,e){this.trees.set("".concat(t,"_").concat(e.x,"_").concat(e.y),e),this.animatedEntities.add(e)}removeTree(t,e){let i="".concat(t,"_").concat(e.x,"_").concat(e.y);this.trees.delete(i),this.animatedEntities.delete(e)}addCactus(t,e){this.cactus.set("".concat(t,"_").concat(e.x,"_").concat(e.y),e),this.animatedEntities.add(e)}removeCactus(t,e){let i="".concat(t,"_").concat(e.x,"_").concat(e.y);this.cactus.delete(i),this.animatedEntities.delete(e)}addAnimatedEntity(t){this.animatedEntities.add(t)}removeAnimatedEntity(t){this.animatedEntities.delete(t)}update(t){for(let e of this.animatedEntities)e.update(t)}render(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;for(let s of this.getVisibleTrees(e)){let r=Math.floor(s.x/16),a=Math.floor(s.y/16),n=16*r,o=16*a,h=e.worldToScreen(n,o),l=h.x-8+1,c=h.y-8+1;l>=-16&&l<=t.canvas.width+16&&c>=-16&&c<=t.canvas.height+16&&s.renderAtScreenPosition(t,l,c,i)}for(let s of this.getVisibleCactus(e)){let r=Math.floor(s.x/16),a=Math.floor(s.y/16),n=16*r,o=16*a,h=e.worldToScreen(n,o),l=h.x-8+1,c=h.y-8+1;l>=-16&&l<=t.canvas.width+16&&c>=-16&&c<=t.canvas.height+16&&s.renderAtScreenPosition(t,l,c,i)}}getVisibleTrees(t){let e=t.position.x-32,i=t.position.y-32,s=t.position.x+t.viewWidth+32,r=t.position.y+t.viewHeight+32;return this.getTreesInArea(e,i,s,r)}getVisibleCactus(t){let e=t.position.x-32,i=t.position.y-32,s=t.position.x+t.viewWidth+32,r=t.position.y+t.viewHeight+32;return this.getCactusInArea(e,i,s,r)}getTreesInArea(t,e,i,s){let r=[];for(let a of this.trees.values())a.x>=t&&a.x<=i&&a.y>=e&&a.y<=s&&r.push(a);return r}getCactusInArea(t,e,i,s){let r=[];for(let a of this.cactus.values())a.x>=t&&a.x<=i&&a.y>=e&&a.y<=s&&r.push(a);return r}getAllTrees(){return Array.from(this.trees.values())}getAllCactus(){return Array.from(this.cactus.values())}getTreeCount(){return this.trees.size}getCactusCount(){return this.cactus.size}getAnimatedEntityCount(){return this.animatedEntities.size}clear(){this.trees.clear(),this.cactus.clear(),this.animatedEntities.clear()}constructor(){this.trees=new Map,this.cactus=new Map,this.animatedEntities=new Set}}class x{addItem(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;for(let s=0;s<this.maxSlots;s++){let r=this.items[s];if(r&&r.type===t){var i;let a=(null!=(i=r.maxStack)?i:64)-r.quantity;if(a>0){let i=Math.min(e,a);if(r.quantity+=i,e-=i,console.log("Added ".concat(i," ").concat(t," to slot ").concat(s+1,". New quantity: ").concat(r.quantity)),e<=0)return this.logInventoryState(),!0}}}for(;e>0;){let i=this.items.findIndex(t=>null===t);if(-1===i)return console.log("Inventory full! Could not add ".concat(e," ").concat(t)),!1;let s=this.getMaxStackSize(t),r=Math.min(e,s);this.items[i]={id:this.generateItemId(),type:t,quantity:r,maxStack:s},e-=r,console.log("Added ".concat(r," ").concat(t," to slot ").concat(i+1))}return this.logInventoryState(),!0}removeItem(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=e;for(let s=0;s<this.maxSlots;s++){let r=this.items[s];if(r&&r.type===t){let a=Math.min(i,r.quantity);if(r.quantity-=a,i-=a,r.quantity<=0&&(this.items[s]=null),i<=0)return console.log("Removed ".concat(e," ").concat(t," from inventory")),this.logInventoryState(),!0}}return console.log("Could not remove ".concat(e," ").concat(t,". Only removed ").concat(e-i)),this.logInventoryState(),!1}selectSlot(t){if(t>=0&&t<this.maxSlots){this.selectedSlot=t;let e=this.items[t];e?console.log("Selected slot ".concat(t+1,": ").concat(e.quantity,"x ").concat(e.type)):console.log("Selected slot ".concat(t+1,": Empty"))}}getSelectedItem(){var t;return null!=(t=this.items[this.selectedSlot])?t:null}getSelectedSlot(){return this.selectedSlot}getItem(t){if(t>=0&&t<this.maxSlots){var e;return null!=(e=this.items[t])?e:null}return null}isEmpty(){return this.items.every(t=>null===t)}getItemCount(t){return this.items.filter(e=>(null==e?void 0:e.type)===t).reduce((t,e)=>{var i;return t+(null!=(i=null==e?void 0:e.quantity)?i:0)},0)}logInventoryState(){console.log("=== INVENTORY STATE ==="),this.items.forEach((t,e)=>{let i=e===this.selectedSlot?"â†’":" ";t?console.log("".concat(i," Slot ").concat(e+1,": ").concat(t.quantity,"x ").concat(t.type)):console.log("".concat(i," Slot ").concat(e+1,": Empty"))}),console.log("=====================")}generateItemId(){return"item_".concat(Date.now(),"_").concat(Math.random().toString(36).substring(2,9))}getMaxStackSize(t){var e;return null!=(e=({wood:64,cactus:64,stone:64})[t])?e:64}constructor(){this.selectedSlot=0,this.maxSlots=9,this.items=Array(9).fill(null)}}class L{setPosition(t){this.position={...t}}setDirection(t){this.lastDirection=t}getFacingPosition(t){switch(this.lastDirection){case"up":return{x:this.position.x,y:this.position.y-t};case"down":default:return{x:this.position.x,y:this.position.y+t};case"left":return{x:this.position.x-t,y:this.position.y};case"right":return{x:this.position.x+t,y:this.position.y}}}takeDamage(t){this.health=Math.max(0,this.health-t),console.log("Player took ".concat(t," damage. Health: ").concat(this.health,"/").concat(this.maxHealth))}heal(t){this.health=Math.min(this.maxHealth,this.health+t),console.log("Player healed ".concat(t,". Health: ").concat(this.health,"/").concat(this.maxHealth))}addToInventory(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this.inventory.addItem(t,e)}removeFromInventory(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this.inventory.removeItem(t,e)}selectInventorySlot(t){this.inventory.selectSlot(t)}getSelectedItem(){return this.inventory.getSelectedItem()}openInventory(){console.log("=== PLAYER INVENTORY ==="),this.inventory.logInventoryState()}getHealthPercentage(){return this.health/this.maxHealth}isDead(){return this.health<=0}constructor(t){var e,i;this.lastDirection="down",this.position={...t.position},this.health=null!=(e=t.health)?e:100,this.maxHealth=this.health,this.attackDamage=null!=(i=t.attackDamage)?i:5,this.inventory=new x}}class A{initializeGame(t){this.player=new L({position:{x:0,y:0},health:100,attackDamage:5}),this.gameState={player:{position:{x:0,y:0},inventory:[],health:100},world:{tiles:[],npcs:[],pois:[]},timestamp:Date.now()},this.camera=new I(this.canvas),this.world=new E(new T(t)),this.movement=new v(this.world),this.animationSystem=new C,this.world.setAnimationSystem(this.animationSystem),this.movement.setDirectionChangeCallback((t,e)=>{e&&this.player.setPosition(this.gameState.player.position),this.player.setDirection(t),this.logFacingTile()}),this.gameLoop=new n(this.update.bind(this),this.render.bind(this))}start(){this.gameLoop.start()}stop(){this.gameLoop.stop()}update(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.handlePlayerActions(),this.controls.update();let i=!1;(0!==this.controls.dragDelta.x||0!==this.controls.dragDelta.y)&&(this.camera.position.x-=this.controls.dragDelta.x,this.camera.position.y-=this.controls.dragDelta.y,this.controls.dragDelta={x:0,y:0},i=!0);let s=this.gameState.player;if((s.position.x!==this.lastPlayerPos.x||s.position.y!==this.lastPlayerPos.y)&&(this.lastPlayerPos={...s.position},i=!0),this.movement.update(s,this.controls),this.camera.update(s.position),this.player.setPosition(s.position),e||i){let e=JSON.stringify(this.gameState.world.npcs);e!==this.lastNPCs&&(this.lastNPCs=e,i=!0);let s=JSON.stringify(this.gameState.world.pois);s!==this.lastPOIs&&(this.lastPOIs=s,i=!0),this.world.update(t)}this.animationSystem.update(t)}render(){let t=this.canvas.getContext("2d");t&&(t.fillStyle="#000000",t.fillRect(0,0,this.canvas.width,this.canvas.height),this.world.render(t,this.camera),this.renderPlayer(t),this.animationSystem.render(t,this.camera))}renderPlayer(t){let e=this.canvas.width/2,i=this.canvas.height/2;t.fillStyle="red",t.fillRect(e-5,i-5,10,10)}handlePlayerActions(){for(let t=1;t<=9;t++)this.controls.wasKeyJustPressed("slot".concat(t))&&this.player.selectInventorySlot(t-1);this.controls.wasKeyJustPressed("inventory")&&this.player.openInventory(),this.controls.wasKeyJustPressed("attack")&&(console.log("Attack key detected - executing attack"),this.logFacingTile(),this.handleAttack()),this.controls.wasKeyJustPressed("interact")&&(this.logFacingTile(),this.handleInteract())}handleAttack(){let t=this.player.getFacingPosition(T.TILE_SIZE),e=Math.floor(t.x/T.TILE_SIZE),i=Math.floor(t.y/T.TILE_SIZE),s=this.world.getTile(e,i);if(console.log("Player attack damage: ".concat(this.player.attackDamage)),console.log("Attacking tile at (".concat(e,", ").concat(i,"): ").concat(null==s?void 0:s.value)),(null==s?void 0:s.trees)&&s.trees.length>0){let t=s.trees[0];if(t){console.log("Tree health before attack: ".concat(t.getHealth(),"/").concat(t.getMaxHealth()));let s=t.takeDamage(this.player.attackDamage);s.destroyed?(console.log("\uD83C\uDF33 Tree destroyed! Dropped ".concat(s.dropValue," ").concat(s.dropType)),this.player.addToInventory(s.dropType,s.dropValue)&&console.log("âœ… Added ".concat(s.dropValue," ").concat(s.dropType," to inventory")),console.log("Tree cut down - now showing broken tree stump at (".concat(e,", ").concat(i,")"))):console.log("Tree took ".concat(this.player.attackDamage," damage. Health: ").concat(t.getHealth(),"/").concat(t.getMaxHealth()))}}else if((null==s?void 0:s.cactus)&&s.cactus.length>0){let t=s.cactus[0];if(t){console.log("Cactus health before attack: ".concat(t.getHealth(),"/").concat(t.getMaxHealth()));let r=t.takeDamage(this.player.attackDamage);if(r.destroyed){console.log("\uD83C\uDF35 Cactus destroyed! Dropped ".concat(r.dropValue," ").concat(r.dropType)),this.player.addToInventory(r.dropType,r.dropValue)&&console.log("âœ… Added ".concat(r.dropValue," ").concat(r.dropType," to inventory"));let a="".concat(e,",").concat(i);this.animationSystem.removeCactus(a,t),s.cactus=s.cactus.filter(e=>e!==t),0===s.cactus.length&&(delete s.cactus,s.value="SAND",this.world.invalidateCache(),console.log("Cactus completely removed - tile converted to SAND at (".concat(e,", ").concat(i,")")))}else console.log("Cactus took ".concat(this.player.attackDamage," damage. Health: ").concat(t.getHealth(),"/").concat(t.getMaxHealth()))}}else console.log("Nothing to attack in that direction")}handleInteract(){let t=this.player.getFacingPosition(T.TILE_SIZE),e=Math.floor(t.x/T.TILE_SIZE),i=Math.floor(t.y/T.TILE_SIZE),s=this.world.getTile(e,i);console.log("Interacting with tile at (".concat(e,", ").concat(i,"):"),null==s?void 0:s.value),(null==s?void 0:s.trees)&&s.trees.length>0?console.log("Interacting with tree - could harvest fruit, check growth, etc."):(null==s?void 0:s.cactus)&&s.cactus.length>0?console.log("Interacting with cactus - could harvest water, check growth, etc."):console.log("Nothing to interact with in that direction")}logFacingTile(){let t=this.player.getFacingPosition(T.TILE_SIZE),e=Math.floor(t.x/T.TILE_SIZE),i=Math.floor(t.y/T.TILE_SIZE),s=this.world.getTile(e,i),r=(null==s?void 0:s.value)||"UNKNOWN";if((null==s?void 0:s.trees)&&s.trees.length>0){let t=s.trees[0];r+=" (Tree: ".concat(null==t?void 0:t.getHealth(),"/").concat(null==t?void 0:t.getMaxHealth()," HP)")}if((null==s?void 0:s.cactus)&&s.cactus.length>0){let t=s.cactus[0];r+=" (Cactus: ".concat(null==t?void 0:t.getHealth(),"/").concat(null==t?void 0:t.getMaxHealth()," HP)")}console.log("Facing tile: ".concat(r))}saveGame(){let t=JSON.stringify(this.gameState);localStorage.setItem("gameState",t)}loadGame(){let t=localStorage.getItem("gameState");t&&(this.gameState=JSON.parse(t))}constructor(t,e){this.lastPlayerPos={x:0,y:0},this.lastNPCs="",this.lastPOIs="",this.canvas=t,this.controls=new o(t),this.initializeGame(e)}}function N(){let t=(0,r.useRef)(null),e=(0,r.useRef)(null),i=(0,a.useSearchParams)();return(0,r.useEffect)(()=>{let s=()=>{t.current&&(t.current.width=window.innerWidth,t.current.height=window.innerHeight)};if(s(),window.addEventListener("resize",s),t.current){var r;let s=null!=(r=null==i?void 0:i.get("seed"))?r:void 0;e.current=new A(t.current,s),e.current.start()}return()=>{window.removeEventListener("resize",s),e.current&&e.current.stop()}},[i]),(0,s.jsx)("div",{className:"fixed inset-0 bg-gray-900",children:(0,s.jsx)("canvas",{ref:t,className:"w-full h-full block border-2 border-gray-700",style:{display:"block"}})})}function M(){return(0,s.jsx)(r.Suspense,{fallback:(0,s.jsx)("div",{className:"fixed inset-0 bg-gray-900 flex items-center justify-center",children:(0,s.jsx)("div",{className:"text-white text-xl",children:"Loading World Simulator..."})}),children:(0,s.jsx)(N,{})})}},6311:(t,e,i)=>{"use strict";i.d(e,{N:()=>r});var s=i(7013);class r{async loadSprites(){for(let t of r.SPRITE_FILES)try{let e=new Image;e.src=(0,s.O)(t),await new Promise((i,s)=>{e.onload=()=>i(),e.onerror=()=>{let e=Error("Failed to load sprite: ".concat(t));console.error(e.message),s(e)}}),this.spriteImages.set(t,e),this.processSprite(t,e)}catch(e){console.error("Failed to load sprite: ".concat(t),e)}console.log("Loaded sprites:",Array.from(this.sprites.keys()))}processSprite(t,e){let i=Math.floor(e.width/r.TILE_SIZE),s=Math.floor(e.height/r.TILE_SIZE);for(let a=0;a<s;a++)for(let s=0;s<i;s++){let i="".concat(t,"#").concat(s,",").concat(a),n={image:e,x:s*r.TILE_SIZE,y:a*r.TILE_SIZE,width:r.TILE_SIZE,height:r.TILE_SIZE};this.sprites.set(i,{id:i,path:t,frames:[n],category:this.getCategoryFromPath(t),tags:this.getTagsFromPath(t)})}}getCategoryFromPath(t){var e;let i=t.split("/");if(i.length<3)return"Unknown";let s=null!=(e=i[1])?e:"";return s.charAt(0).toUpperCase()+s.slice(1)}getTagsFromPath(t){let e=t.split("/"),i=[];if(e[1]&&i.push(e[1].toLowerCase()),e[2]){var s;let t=null!=(s=e[2].split(".")[0])?s:"";t&&i.push(t.toLowerCase())}return i}getSprite(t){return this.sprites.get(t)}getAllSprites(){return Array.from(this.sprites.values())}getSpritesByCategory(t){return this.getAllSprites().filter(e=>e.category===t)}getSpritesByTag(t){return this.getAllSprites().filter(e=>{var i;return null==(i=e.tags)?void 0:i.includes(t)})}renderSprite(t,e,i,s){let r=this.getSprite(e);if(!(null==r?void 0:r.frames[0]))return;let a=r.frames[0];t.drawImage(a.image,a.x,a.y,a.width,a.height,i,s,a.width,a.height)}constructor(){this.sprites=new Map,this.spriteImages=new Map,this.loadSprites()}}r.TILE_SIZE=16,r.SPRITE_FILES=["/sprites/Characters/champions/Okomo.png","/sprites/Objects/SwordShort.png","/sprites/Objects/Spear.png","/sprites/Objects/ShortBig.png","/sprites/Objects/FireballProjectile.png","/sprites/Objects/Bullet.png","/sprites/Objects/BallistaBolt.png","/sprites/Objects/Axe.png","/sprites/Objects/ArrowShort.png","/sprites/Objects/ArrowLong.png","/sprites/Animals/Sheep.png","/sprites/Animals/Pig.png","/sprites/Animals/MarineAnimals.png","/sprites/Animals/Horse(32x32).png","/sprites/Animals/HornedSheep.png","/sprites/Animals/Chicken.png","/sprites/Animals/Chick.png","/sprites/Animals/Boar.png","/sprites/Buildings/wood/Barracks.png","/sprites/Buildings/wood/CaveV2.png","/sprites/Buildings/wood/Docks.png","/sprites/Buildings/wood/Houses.png","/sprites/Ground/TexturedGrass.png","/sprites/Ground/Shore.png","/sprites/Ground/Grass.png","/sprites/Ground/Cliff.png","/sprites/Ground/Winter.png","/sprites/Miscellaneous/Boat.png","/sprites/Miscellaneous/Chests.png","/sprites/Miscellaneous/Tombstones.png","/sprites/Miscellaneous/StreetSigns.png","/sprites/Miscellaneous/Signs.png","/sprites/Miscellaneous/QuestBoard.png","/sprites/Miscellaneous/Portal.png","/sprites/Miscellaneous/PirateShip.png","/sprites/Miscellaneous/Bridge.png","/sprites/Nature/Cactus.png","/sprites/Nature/Rocks.png","/sprites/Nature/Wheatfield.png","/sprites/Nature/WinterTrees.png","/sprites/Nature/Tumbleweed.png","/sprites/Nature/Trees.png","/sprites/Nature/PineTrees.png"]},7013:(t,e,i)=>{"use strict";function s(t){let e=t.startsWith("/")?t.slice(1):t;return"".concat("/world-sim","/").concat(e)}i.d(e,{O:()=>s})}},t=>{var e=e=>t(t.s=e);t.O(0,[966,309,951,358],()=>e(3779)),_N_E=t.O()}]);