(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[833],{3779:(t,e,i)=>{Promise.resolve().then(i.bind(i,4538))},4538:(t,e,i)=>{"use strict";i.r(e),i.d(e,{default:()=>L});var a=i(6384),r=i(6636),s=i(4582);class n{start(){this.isRunning||(this.isRunning=!0,this.lastTimestamp=performance.now(),this.accumulator=0,this.gameLoop())}stop(){this.isRunning=!1,null!==this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null)}gameLoop(){if(!this.isRunning)return;let t=performance.now(),e=t-this.lastTimestamp;for(this.lastTimestamp=t,this.accumulator+=e,this.frameCount++,this.fpsTimer+=e,this.fpsTimer>=1e3&&(this.currentFPS=this.frameCount,this.frameCount=0,this.fpsTimer=0);this.accumulator>=this.FRAME_DURATION;){let e=t-this.lastUpdateTime>=this.UPDATE_INTERVAL;this.updateCallback(this.FRAME_DURATION/1e3,e),this.accumulator-=this.FRAME_DURATION,e&&(this.lastUpdateTime=t)}this.renderCallback(),this.animationFrameId=requestAnimationFrame(()=>this.gameLoop())}getCurrentFPS(){return this.currentFPS}getTargetFPS(){return this.TARGET_FPS}getGameTime(){return performance.now()}constructor(t,e){this.isRunning=!1,this.lastTimestamp=0,this.animationFrameId=null,this.TARGET_FPS=60,this.FRAME_DURATION=1e3/this.TARGET_FPS,this.accumulator=0,this.frameCount=0,this.fpsTimer=0,this.currentFPS=0,this.lastUpdateTime=0,this.UPDATE_INTERVAL=16.67,this.updateCallback=t,this.renderCallback=e}}class o{setCanvas(t){this.canvas=t,this.setupMouseListeners(t)}setupEventListeners(){window.addEventListener("keydown",t=>{var e;let i=null!=(e=o.keyMap[t.key])?e:t.key.toLowerCase();!this.keyState[i]&&(this.justPressed[i]=!0,(i in o.keyMap||["attack","interact","inventory"].includes(i)||i.startsWith("slot"))&&console.log("Key pressed: ".concat(t.key," → ").concat(i))),this.keyState[i]=!0,this.keys.add(i)}),window.addEventListener("keyup",t=>{var e;let i=null!=(e=o.keyMap[t.key])?e:t.key.toLowerCase();this.keyState[i]=!1,this.keys.delete(i),this.justPressed[i]=!1})}setupMouseListeners(t){t.addEventListener("mousedown",t=>{this.isDragging=!0,this.dragStart={x:t.clientX,y:t.clientY},this.lastMouse={x:t.clientX,y:t.clientY},this.dragDelta={x:0,y:0}}),t.addEventListener("mousemove",t=>{if(this.isDragging&&this.lastMouse){let e=t.clientX-this.lastMouse.x,i=t.clientY-this.lastMouse.y;this.dragDelta.x+=e,this.dragDelta.y+=i,this.lastMouse={x:t.clientX,y:t.clientY}}}),t.addEventListener("mouseup",t=>{this.dragStart&&5>Math.sqrt(Math.pow(t.clientX-this.dragStart.x,2)+Math.pow(t.clientY-this.dragStart.y,2))&&(this.mouseClick={x:t.clientX,y:t.clientY}),this.isDragging=!1,this.dragStart=null,this.lastMouse=null}),t.addEventListener("mouseleave",t=>{this.isDragging=!1,this.dragStart=null,this.lastMouse=null})}update(){}clearJustPressed(){this.justPressed={}}getMouseClick(){let t=this.mouseClick;return this.mouseClick=null,t}isKeyPressed(t){var e;return null!=(e=this.keyState[t])&&e}wasKeyJustPressed(t){var e;return null!=(e=this.justPressed[t])&&e}wasAnyKeyPressed(){return Object.values(this.justPressed).some(t=>t)}getMovementDirection(){let t=0,e=0;return this.isKeyPressed("up")&&(e-=1),this.isKeyPressed("down")&&(e+=1),this.isKeyPressed("left")&&(t-=1),this.isKeyPressed("right")&&(t+=1),{x:t,y:e}}constructor(t){this.canvas=t,this.isDragging=!1,this.dragStart=null,this.lastMouse=null,this.dragDelta={x:0,y:0},this.mouseClick=null,this.keys=new Set,this.keyState={},this.justPressed={},this.setupEventListeners(),t&&this.setupMouseListeners(t)}}o.keyMap={w:"up",ArrowUp:"up",s:"down",ArrowDown:"down",a:"left",ArrowLeft:"left",d:"right",ArrowRight:"right",q:"attack",f:"interact",e:"inventory",1:"slot1",2:"slot2",3:"slot3",4:"slot4",5:"slot5",6:"slot6",7:"slot7",8:"slot8",9:"slot9"};var l=i(5955),c=i(1623),h=i.n(c),u=i(7013);class d{async loadImage(){try{this.image=new Image,this.image.src=(0,u.O)(this.config.imagePath),await new Promise((t,e)=>{if(!this.image)return void e(Error("Image is null"));this.image.onload=()=>{this.processFrames(),this.isLoaded=!0,t()},this.image.onerror=()=>{e(Error("Failed to load sprite: ".concat(this.config.imagePath)))}})}catch(t){console.error("Failed to load sprite: ".concat(this.config.imagePath),t)}}processFrames(){if(this.image){this.frames=[];for(let t=0;t<this.totalFrames;t++){let e=Math.floor(t/this.framesPerRow),i=t%this.framesPerRow;this.frames.push({image:this.image,x:i*this.frameWidth,y:e*this.frameHeight,width:this.frameWidth,height:this.frameHeight})}}}update(t){if(!this.isLoaded||this.frames.length<=1)return;this.lastFrameTime+=1e3*t;let e=this.animationDuration/this.totalFrames;this.lastFrameTime>=e&&(this.lastFrameTime=0,this.loop?this.currentFrame=(this.currentFrame+1)%this.totalFrames:this.currentFrame<this.totalFrames-1&&this.currentFrame++)}render(t,e,i){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if(!this.isLoaded||!this.frames[this.currentFrame])return;let r=this.frames[this.currentFrame];r&&t.drawImage(r.image,r.x,r.y,r.width,r.height,e,i,r.width*a,r.height*a)}setFrame(t){t>=0&&t<this.totalFrames&&(this.currentFrame=t)}getCurrentFrame(){return this.currentFrame}getFrameCount(){return this.totalFrames}isAnimationComplete(){return!this.loop&&this.currentFrame===this.totalFrames-1}reset(){this.currentFrame=0,this.lastFrameTime=0}isImageLoaded(){return this.isLoaded}canAdvanceFrame(){return!!this.loop||this.currentFrame<this.totalFrames-1}getNextFrame(){return this.loop?(this.currentFrame+1)%this.totalFrames:Math.min(this.currentFrame+1,this.totalFrames-1)}constructor(t){var e,i;this.config=t,this.image=null,this.frames=[],this.currentFrame=0,this.lastFrameTime=0,this.isLoaded=!1,this.animationDuration=null!=(e=t.animationDuration)?e:1e3,this.loop=!1!==t.loop,this.totalFrames=t.totalFrames,this.frameWidth=t.frameWidth,this.frameHeight=t.frameHeight,this.framesPerRow=null!=(i=t.framesPerRow)?i:this.totalFrames,this.loadImage()}}class p{render(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.isDestroyed||this.sprite.render(t,this.x,this.y,e)}renderAtScreenPosition(t,e,i){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;!this.isDestroyed&&(this.sprite.render(t,e,i,a),this.health<this.maxHealth&&this.renderHealthBar(t,e,i))}renderHealthBar(t,e,i){let a=this.health/this.maxHealth;t.fillStyle="red",t.fillRect(e+1,i-4,14,2),t.fillStyle="green",t.fillRect(e+1,i-4,14*a,2)}takeDamage(t){return this.isDestroyed?{destroyed:!1,dropValue:0,dropType:""}:(this.health-=t,this.health<=0)?(this.isDestroyed=!0,{destroyed:!0,dropValue:this.dropValue,dropType:this.dropType}):{destroyed:!1,dropValue:0,dropType:""}}getHealth(){return this.health}getMaxHealth(){return this.maxHealth}getHealthPercentage(){return this.health/this.maxHealth}isStructureDestroyed(){return this.isDestroyed}getDropInfo(){return{dropValue:this.dropValue,dropType:this.dropType}}constructor(t){this.isDestroyed=!1,this.x=t.x,this.y=t.y,this.health=t.health,this.maxHealth=t.health,this.dropValue=t.dropValue,this.dropType=t.dropType,this.sprite=this.createSprite()}}var g=function(t){return t[t.CUT_DOWN=0]="CUT_DOWN",t[t.YOUNG=1]="YOUNG",t[t.TALL=2]="TALL",t[t.FULL=3]="FULL",t}({});class m extends p{createSprite(){var t;return new d({imagePath:"/sprites/Nature/Trees.png",frameWidth:16,frameHeight:16,totalFrames:4,framesPerRow:4,animationDuration:4*(null!=(t=this.growthTimePerStage)?t:36e5),loop:!1})}update(t){this.isGrowthComplete||(this.timeSinceLastGrowth+=1e3*t,this.timeSinceLastGrowth>=this.growthTimePerStage&&this.canGrow()&&(this.grow(),this.timeSinceLastGrowth=0),this.sprite.update(t))}render(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.sprite.render(t,this.x,this.y,e)}renderAtScreenPosition(t,e,i){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;super.renderAtScreenPosition(t,e,i,a)}grow(){this.currentStage<3&&(this.currentStage++,this.sprite.setFrame(this.currentStage),3===this.currentStage&&(this.isGrowthComplete=!0))}canGrow(){return this.currentStage<3}cutDown(){this.currentStage=0,this.sprite.setFrame(this.currentStage),this.isGrowthComplete=!1,this.timeSinceLastGrowth=0}plant(){0===this.currentStage&&(this.currentStage=1,this.sprite.setFrame(this.currentStage),this.isGrowthComplete=!1,this.timeSinceLastGrowth=0)}getCurrentStage(){return this.currentStage}getGrowthProgress(){return this.isGrowthComplete?1:this.timeSinceLastGrowth/this.growthTimePerStage}isFullyGrown(){return 3===this.currentStage}isCutDown(){return 0===this.currentStage}forceGrowthStage(t){this.currentStage=t,this.sprite.setFrame(t),this.isGrowthComplete=3===t,this.timeSinceLastGrowth=0}takeDamage(t){let e=super.takeDamage(t);return e.destroyed&&this.cutDown(),e}constructor(t){var e,i;super({...t,health:50,dropValue:5,dropType:"wood"}),this.timeSinceLastGrowth=0,this.isGrowthComplete=!1,this.currentStage=null!=(e=t.initialStage)?e:1,this.growthTimePerStage=null!=(i=t.growthTimePerStage)?i:36e5,this.sprite=this.createSprite(),this.sprite.setFrame(this.currentStage)}}var f=function(t){return t[t.VARIANT_1=1]="VARIANT_1",t[t.VARIANT_2=2]="VARIANT_2",t[t.VARIANT_3=3]="VARIANT_3",t}({});class y extends p{createSprite(){var t,e,i;let a=null!=(e=null==(t=this.frameSequence)?void 0:t.length)?e:2;return new d({imagePath:"/sprites/Nature/Cactus.png",frameWidth:16,frameHeight:16,totalFrames:8,framesPerRow:4,animationDuration:(null!=(i=this.growthTimePerStage)?i:6e5)*a,loop:!1})}getRandomVariant(){var t;let e=[1,2,3];return null!=(t=e[Math.floor(Math.random()*e.length)])?t:1}getFrameSequence(t){switch(t){case 1:default:return[4,3];case 2:return[5,6,7];case 3:return[1,0]}}update(t){this.isGrowthComplete||(this.timeSinceLastGrowth+=1e3*t,this.timeSinceLastGrowth>=this.growthTimePerStage&&this.canGrow()&&(this.grow(),this.timeSinceLastGrowth=0),this.sprite.update(t))}render(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.sprite.render(t,this.x,this.y,e)}renderAtScreenPosition(t,e,i){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;super.renderAtScreenPosition(t,e,i,a)}grow(){if(this.currentStage<this.frameSequence.length-1){var t;this.currentStage++,this.sprite.setFrame(null!=(t=this.frameSequence[this.currentStage])?t:0),this.currentStage===this.frameSequence.length-1&&(this.isGrowthComplete=!0)}}canGrow(){return this.currentStage<this.frameSequence.length-1}getCurrentStage(){return this.currentStage}getVariant(){return this.variant}getGrowthProgress(){return this.isGrowthComplete?1:this.timeSinceLastGrowth/this.growthTimePerStage}isFullyGrown(){return this.currentStage===this.frameSequence.length-1}forceGrowthStage(t){if(t>=0&&t<this.frameSequence.length){var e;this.currentStage=t,this.sprite.setFrame(null!=(e=this.frameSequence[t])?e:0),this.isGrowthComplete=t===this.frameSequence.length-1,this.timeSinceLastGrowth=0}}isSpriteLoaded(){return this.sprite.isImageLoaded()}getCurrentFrame(){return this.sprite.getCurrentFrame()}constructor(t){var e,i,a,r;super({...t,health:15,dropValue:1,dropType:"cactus"}),this.timeSinceLastGrowth=0,this.isGrowthComplete=!1,this.variant=null!=(e=t.variant)?e:this.getRandomVariant(),this.currentStage=null!=(i=t.initialStage)?i:0,this.growthTimePerStage=null!=(a=t.growthTimePerStage)?a:6e5,this.frameSequence=this.getFrameSequence(this.variant),this.sprite=this.createSprite(),this.sprite.setFrame(null!=(r=this.frameSequence[this.currentStage])?r:0)}}let S={health_potion:{name:"Health Potion",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:4,category:"inventory",properties:{maxStack:16}},poison_potion:{name:"Poison Potion",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:5,category:"inventory",properties:{maxStack:16}},magic_potion:{name:"Magic Potion",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:6,category:"inventory",properties:{maxStack:16}},stamina_potion:{name:"Stamina Potion",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:7,category:"inventory",properties:{maxStack:16}},wheat:{name:"Wheat",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:8,category:"inventory",properties:{maxStack:64}},health_heart:{name:"Health Heart",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:9,category:"inventory",properties:{maxStack:1}},wood:{name:"Wood",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:10,category:"inventory",properties:{maxStack:64}},cactus:{name:"Cactus",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:11,category:"inventory",properties:{maxStack:64}},hammer:{name:"Hammer",spritePath:"/sprites/User Interface/UiIcons.png",index:0,category:"inventory",properties:{maxStack:1,damage:15}},sword:{name:"Sword",spritePath:"/sprites/User Interface/UiIcons.png",index:1,category:"inventory",properties:{maxStack:1,damage:20}},shield:{name:"Shield",spritePath:"/sprites/User Interface/UiIcons.png",index:2,category:"inventory",properties:{maxStack:1}},dagger:{name:"Dagger",spritePath:"/sprites/User Interface/UiIcons.png",index:44,category:"inventory",properties:{maxStack:1,damage:10}},arrow_horizontal:{name:"Arrow (Horizontal)",spritePath:"/sprites/User Interface/UiIcons.png",index:45,category:"projectile",properties:{damage:15}},arrow_vertical:{name:"Arrow (Vertical)",spritePath:"/sprites/User Interface/UiIcons.png",index:3,category:"projectile",properties:{damage:15}},settings_icon:{name:"Settings",spritePath:"/sprites/User Interface/UiIcons.png",index:42,category:"ui"},chat_icon:{name:"Chat",spritePath:"/sprites/User Interface/UiIcons.png",index:41,category:"ui"},notification_icon:{name:"Notification",spritePath:"/sprites/User Interface/UiIcons.png",index:40,category:"ui"},warning_icon:{name:"Warning",spritePath:"/sprites/User Interface/UiIcons.png",index:31,category:"ui"},confirm_icon:{name:"Confirm",spritePath:"/sprites/User Interface/UiIcons.png",index:30,category:"ui"},question_icon:{name:"Question",spritePath:"/sprites/User Interface/UiIcons.png",index:29,category:"ui"},reject_icon:{name:"Reject",spritePath:"/sprites/User Interface/UiIcons.png",index:28,category:"ui"},default_item_box:{name:"Default Item Box",spritePath:"/sprites/User Interface/Highlighted-Boxes.png",index:0,category:"ui"},broken_item_box:{name:"Broken Item Box",spritePath:"/sprites/User Interface/Highlighted-Boxes.png",index:3,category:"ui"},highlighted_item_box:{name:"Highlighted Item Box",spritePath:"/sprites/User Interface/Highlighted-Boxes.png",index:4,category:"ui"},box_selector:{name:"Box Selector",spritePath:"/sprites/User Interface/BoxSelector.png",index:0,category:"ui"},pressed_box_selector:{name:"Pressed Box Selector",spritePath:"/sprites/User Interface/BoxSelector.png",index:1,category:"ui"},rock:{name:"Rock",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:12,category:"inventory",properties:{maxStack:64,interactable:!0,passable:!1}},gold_ore:{name:"Gold Ore",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:13,category:"inventory",properties:{maxStack:64,rarity:"very_rare",dropItems:[{type:"gold_ingot",quantity:1}]}},iron_ore:{name:"Iron Ore",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:14,category:"inventory",properties:{maxStack:64,rarity:"rare",dropItems:[{type:"iron_ingot",quantity:1}]}},copper_ore:{name:"Copper Ore",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:15,category:"inventory",properties:{maxStack:64,rarity:"common",dropItems:[{type:"copper_ingot",quantity:1}]}},gold_ingot:{name:"Gold Ingot",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:0,category:"inventory",properties:{maxStack:64}},iron_ingot:{name:"Iron Ingot",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:1,category:"inventory",properties:{maxStack:64}},copper_ingot:{name:"Copper Ingot",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:2,category:"inventory",properties:{maxStack:64}},fireball_frame_0:{name:"Fireball",spritePath:"/sprites/Objects/FireballProjectile.png",index:0,category:"poi",properties:{damage:25,animated:!0,animationFrames:[0,1]}},magic_fire_frame_0:{name:"Magic Fire",spritePath:"/sprites/Objects/FireballProjectile.png",index:3,category:"poi",properties:{damage:35,animated:!0,animationFrames:[3,2]}},wheat_field_0:{name:"Wheat Field (Young)",spritePath:"/sprites/Nature/Wheatfield.png",index:0,category:"poi",properties:{animated:!0,animationFrames:[0,1,2,3],interactable:!0,dropItems:[{type:"wheat",quantity:3}]}},boat_vertical:{name:"Boat (Vertical)",spritePath:"/sprites/Miscellaneous/Boat.png",index:0,category:"poi",properties:{interactable:!0,passable:!0,tileTypeRequired:["SHALLOW_WATER","DEEP_WATER"]}},boat_horizontal:{name:"Boat (Horizontal)",spritePath:"/sprites/Miscellaneous/Boat.png",index:2,category:"poi",properties:{interactable:!0,passable:!0,tileTypeRequired:["SHALLOW_WATER","DEEP_WATER"]}},normal_chest:{name:"Normal Chest",spritePath:"/sprites/Miscellaneous/Chests.png",index:0,category:"poi",properties:{interactable:!0,passable:!1}},rare_chest:{name:"Rare Chest",spritePath:"/sprites/Miscellaneous/Chests.png",index:1,category:"poi",properties:{interactable:!0,passable:!1,rarity:"rare"}},portal:{name:"Portal",spritePath:"/sprites/Miscellaneous/Portal.png",index:3,category:"poi",properties:{interactable:!0,passable:!0}},empty_notice_board:{name:"Empty Notice Board",spritePath:"/sprites/Miscellaneous/QuestBoard.png",index:0,category:"poi",properties:{interactable:!0,passable:!1}},notice_board:{name:"Notice Board",spritePath:"/sprites/Miscellaneous/QuestBoard.png",index:1,category:"poi",properties:{interactable:!0,passable:!1}},tombstone:{name:"Tombstone",spritePath:"/sprites/Miscellaneous/Tombstones.png",index:6,category:"poi",properties:{interactable:!0,passable:!1}},water_well:{name:"Water Well",spritePath:"/sprites/Miscellaneous/Well.png",index:3,category:"poi",properties:{interactable:!0,passable:!1}},sand_tile:{name:"Sand Tile",spritePath:"/sprites/Ground/Shore.png",index:0,category:"background"},shallow_water_tile:{name:"Shallow Water Tile",spritePath:"/sprites/Ground/Shore.png",index:2,category:"background"},deep_water_tile:{name:"Deep Water Tile",spritePath:"/sprites/Ground/Shore.png",index:4,category:"background"},grass_tile_0:{name:"Grass Tile (Variant 0)",spritePath:"/sprites/Ground/TexturedGrass.png",index:0,category:"background"},grass_tile_1:{name:"Grass Tile (Variant 1)",spritePath:"/sprites/Ground/TexturedGrass.png",index:1,category:"background"},grass_tile_2:{name:"Grass Tile (Variant 2)",spritePath:"/sprites/Ground/TexturedGrass.png",index:2,category:"background"},grass_tile_3:{name:"Grass Tile (Variant 3)",spritePath:"/sprites/Ground/TexturedGrass.png",index:3,category:"background"},grass_tile_4:{name:"Grass Tile (Variant 4)",spritePath:"/sprites/Ground/TexturedGrass.png",index:4,category:"background"},grass_tile_5:{name:"Grass Tile (Variant 5)",spritePath:"/sprites/Ground/TexturedGrass.png",index:5,category:"background"},mine_entrance:{name:"Mine Entrance",spritePath:"/sprites/Buildings/Wood/Resources.png",index:10,category:"structure",properties:{interactable:!0,passable:!0,tileTypeRequired:["STONE"],spawning:{chance:.001,biomes:["STONE"]}}},windmill_frame_0:{name:"Windmill",spritePath:"/sprites/Buildings/Wood/Resources.png",index:3,category:"structure",properties:{animated:!0,animationFrames:[3,4,5],passable:!1,tileTypeRequired:["GRASS"],spawning:{chance:1e-4,biomes:["GRASS"]}}},food_market:{name:"Food Market",spritePath:"/sprites/Buildings/Wood/Market.png",index:4,category:"structure",properties:{interactable:!0,passable:!1,tileTypeRequired:["GRASS"],spawning:{chance:1e-4,biomes:["GRASS"]}}},butcher_market:{name:"Butcher Market",spritePath:"/sprites/Buildings/Wood/Market.png",index:11,category:"structure",properties:{interactable:!0,passable:!1,tileTypeRequired:["GRASS"],spawning:{chance:1e-4,biomes:["GRASS"]}}},armory_market:{name:"Armory Market",spritePath:"/sprites/Buildings/Wood/Market.png",index:5,category:"structure",properties:{interactable:!0,passable:!1,tileTypeRequired:["GRASS"],spawning:{chance:1e-4,biomes:["GRASS"]}}},cloth_market:{name:"Cloth Market",spritePath:"/sprites/Buildings/Wood/Market.png",index:7,category:"structure",properties:{interactable:!0,passable:!1,tileTypeRequired:["GRASS"],spawning:{chance:1e-4,biomes:["GRASS"]}}},market_stall:{name:"Market Stall",spritePath:"/sprites/Buildings/Wood/Market.png",index:1,category:"structure",properties:{interactable:!0,passable:!1,tileTypeRequired:["GRASS"],spawning:{chance:1e-4,biomes:["GRASS"]}}},dungeon_entrance:{name:"Dungeon Entrance",spritePath:"/sprites/Buildings/Wood/Resources.png",index:9,category:"structure",properties:{interactable:!0,passable:!0,tileTypeRequired:["STONE"],spawning:{chance:5e-4,biomes:["STONE"]}}},chicken_meat:{name:"Chicken Meat",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:16,category:"inventory",properties:{maxStack:64}},pork:{name:"Pork",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:17,category:"inventory",properties:{maxStack:64}},wool:{name:"Wool",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:18,category:"inventory",properties:{maxStack:64}},mutton:{name:"Mutton",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:19,category:"inventory",properties:{maxStack:64}},chicken:{name:"Chicken",spritePath:"/sprites/Animals/Chicken.png",index:0,category:"animal",properties:{health:20,animated:!0,animationFrames:[0,1,2,3],spawning:{chance:.001,biomes:["GRASS"]},dropItems:[{type:"chicken_meat",quantity:1}]}},pig:{name:"Pig",spritePath:"/sprites/Animals/Pig.png",index:0,category:"animal",properties:{health:35,animated:!0,animationFrames:[0,1,2,3],spawning:{chance:8e-4,biomes:["GRASS"]},dropItems:[{type:"pork",quantity:2}]}},sheep:{name:"Sheep",spritePath:"/sprites/Animals/Sheep.png",index:0,category:"animal",properties:{health:25,animated:!0,animationFrames:[0,1,2,3],spawning:{chance:.0012,biomes:["GRASS"]},dropItems:[{type:"wool",quantity:1},{type:"mutton",quantity:1}]}},archer_goblin:{name:"Archer Goblin",spritePath:"/sprites/Characters/Monsters/Orcs/ArcherGoblin.png",index:0,category:"animal",properties:{health:60,animated:!0,animationFrames:[0,1,2,3,4],spawning:{chance:1e-4,biomes:["FOREST","STONE","GRAVEL"]},dropItems:[{type:"monster_drop",quantity:1}]}},club_goblin:{name:"Club Goblin",spritePath:"/sprites/Characters/Monsters/Orcs/ClubGoblin.png",index:0,category:"animal",properties:{health:80,animated:!0,animationFrames:[0,1,2,3,4],spawning:{chance:1e-4,biomes:["FOREST","STONE","GRAVEL"]},dropItems:[{type:"monster_drop",quantity:1}]}},farmer_goblin:{name:"Farmer Goblin",spritePath:"/sprites/Characters/Monsters/Orcs/FarmerGoblin.png",index:0,category:"animal",properties:{health:70,animated:!0,animationFrames:[0,1,2,3,4],spawning:{chance:1e-4,biomes:["FOREST","STONE","GRAVEL"]},dropItems:[{type:"monster_drop",quantity:1}]}},orc:{name:"Orc",spritePath:"/sprites/Characters/Monsters/Orcs/Orc.png",index:0,category:"animal",properties:{health:120,animated:!0,animationFrames:[0,1,2,3,4],spawning:{chance:5e-5,biomes:["FOREST","STONE","GRAVEL"]},dropItems:[{type:"monster_drop",quantity:2}]}},orc_shaman:{name:"Orc Shaman",spritePath:"/sprites/Characters/Monsters/Orcs/OrcShaman.png",index:0,category:"animal",properties:{health:100,animated:!0,animationFrames:[0,1,2,3,4],spawning:{chance:5e-5,biomes:["FOREST","STONE","GRAVEL"]},dropItems:[{type:"monster_drop",quantity:2}]}},spear_goblin:{name:"Spear Goblin",spritePath:"/sprites/Characters/Monsters/Orcs/SpearGoblin.png",index:0,category:"animal",properties:{health:90,animated:!0,animationFrames:[0,1,2,3,4],spawning:{chance:1e-4,biomes:["FOREST","STONE","GRAVEL"]},dropItems:[{type:"monster_drop",quantity:1}]}},mega_slime_blue:{name:"Mega Slime",spritePath:"/sprites/Characters/Monsters/Slimes/MegaSlimeBlue.png",index:0,category:"animal",properties:{health:150,animated:!0,animationFrames:[0,1,2,3,4,5],spawning:{chance:2e-5,biomes:["MUD"]},dropItems:[{type:"monster_drop",quantity:3}]}},slime:{name:"Slime",spritePath:"/sprites/Characters/Monsters/Slimes/Slime.png",index:0,category:"animal",properties:{health:40,animated:!0,animationFrames:[0,1,2,3,4,5],spawning:{chance:2e-4,biomes:["MUD"]},dropItems:[{type:"monster_drop",quantity:1}]}},axeman_trader:{name:"Axeman Trader",spritePath:"/sprites/Characters/Soldiers/Melee/AxemanTemplate.png",index:0,category:"animal",properties:{health:50,animated:!0,animationFrames:[0,1,2,3,4],spawning:{chance:5e-4,biomes:["GRASS"]},dropItems:[{type:"gold_ingot",quantity:1}]}},swordsman_trader:{name:"Swordsman Trader",spritePath:"/sprites/Characters/Soldiers/Melee/SwordsmanTemplate.png",index:0,category:"animal",properties:{health:50,animated:!0,animationFrames:[0,1,2,3,4],spawning:{chance:5e-4,biomes:["GRASS"]},dropItems:[{type:"gold_ingot",quantity:1}]}},spearman_trader:{name:"Spearman Trader",spritePath:"/sprites/Characters/Soldiers/Melee/SpearmanTemplate.png",index:0,category:"animal",properties:{health:50,animated:!0,animationFrames:[0,1,2,3,4],spawning:{chance:5e-4,biomes:["GRASS"]},dropItems:[{type:"gold_ingot",quantity:1}]}},farmer_trader:{name:"Farmer Trader",spritePath:"/sprites/Characters/Workers/FarmerTemplate.png",index:20,category:"animal",properties:{health:50,animated:!0,animationFrames:[20,21,22,23,24],spawning:{chance:5e-4,biomes:["GRASS"]},dropItems:[{type:"gold_ingot",quantity:1}]}},monster_drop:{name:"Monster Essence",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:20,category:"inventory",properties:{maxStack:64}}};class v{loadAsset(){let t=Object.values(S).find(t=>{if(!t||"string"!=typeof t.name)return!1;let e=t.name.toLowerCase().replace(/\s+/g,"_");return e===this.type||this.type.includes(e)});t&&"string"==typeof t.spritePath?(this.asset=t,this.loadSprite(t.spritePath)):console.warn("No asset found for POI type: ".concat(this.type))}async loadSprite(t){try{this.sprite=new Image,this.sprite.src=(0,u.O)(t),await new Promise((e,i)=>{if(!this.sprite)return void i(Error("Sprite is null"));this.sprite.onload=()=>{this.isLoaded=!0,e()},this.sprite.onerror=()=>{i(Error("Failed to load POI sprite: ".concat(t)))}})}catch(t){console.error("Failed to load POI sprite for ".concat(this.type,":"),t)}}update(t){if(this.animated&&this.animationFrames.length>1){this.lastFrameTime+=1e3*t;let e=this.animationDuration/this.animationFrames.length;this.lastFrameTime>=e&&(this.lastFrameTime=0,this.currentFrame=(this.currentFrame+1)%this.animationFrames.length)}this.damage>0&&(this.type.includes("fire")||this.type.includes("flame"))}interact(t){if(!this.interactable)return{success:!1,message:"Cannot interact with ".concat(this.type)};switch(this.type){case"normal_chest":case"rare_chest":return this.handleChestInteraction();case"water_well":return this.handleWellInteraction();case"portal":return this.handlePortalInteraction();case"empty_notice_board":case"notice_board":return this.handleNoticeBoardInteraction();case"tombstone":return this.handleTombstoneInteraction();case"wheat_field_0":return this.handleWheatFieldInteraction();case"boat_vertical":case"boat_horizontal":return this.handleBoatInteraction();case"food_market":case"butcher_market":case"armory_market":case"cloth_market":return this.handleMarketInteraction();case"mine_entrance":case"dungeon_entrance":return this.handleEntranceInteraction();default:return{success:!1,message:"Unknown interaction type: ".concat(this.type)}}}handleChestInteraction(){let t="rare_chest"===this.type,e=[];return t?e.push({id:"item_".concat(Date.now(),"_1"),type:"gold_ingot",quantity:3},{id:"item_".concat(Date.now(),"_2"),type:"magic_potion",quantity:1},{id:"item_".concat(Date.now(),"_3"),type:"sword",quantity:1}):e.push({id:"item_".concat(Date.now(),"_1"),type:"copper_ingot",quantity:2},{id:"item_".concat(Date.now(),"_2"),type:"health_potion",quantity:2}),{success:!0,message:"Opened ".concat(t?"rare":"normal"," chest!"),items:e,openUI:"chest"}}handleWellInteraction(){return{success:!0,message:"You drink fresh water from the well. Health restored!",healthChange:25}}handlePortalInteraction(){return{success:!0,message:"You step through the portal...",teleportTo:{x:16*Math.floor(1e3*Math.random()),y:16*Math.floor(1e3*Math.random())}}}handleNoticeBoardInteraction(){return"empty_notice_board"===this.type?{success:!0,message:"The notice board is empty. You could post a message here.",openUI:"notice_board"}:{success:!0,message:"Reading the notices on the board...",openUI:"notice_board"}}handleTombstoneInteraction(){var t;return{success:!0,message:"You retrieve items from the grave...",items:null!=(t=this.customData.deathInventory)?t:[]}}handleWheatFieldInteraction(){return this.currentFrame>=3||!this.animated?{success:!0,message:"You harvest the wheat field!",items:[{id:"item_".concat(Date.now(),"_wheat"),type:"wheat",quantity:3}]}:{success:!1,message:"The wheat is not ready for harvest yet."}}handleBoatInteraction(){return{success:!0,message:"You board the boat. You can now travel on water!"}}handleMarketInteraction(){let t="Welcome to the market!";switch(this.type){case"food_market":t="Welcome to the food market!";break;case"butcher_market":t="Welcome to the butcher!";break;case"armory_market":t="Welcome to the armory!";break;case"cloth_market":t="Welcome to the cloth market!"}return{success:!0,message:t,openUI:"market"}}handleEntranceInteraction(){let t="mine_entrance"===this.type;return{success:!0,message:"You enter the ".concat(t?"mine":"dungeon","..."),teleportTo:{x:this.position.x,y:this.position.y+100}}}takeDamage(t){return this.health-=t,this.health<=0}getDropItems(){return this.dropItems.map(t=>({id:"item_".concat(Date.now(),"_").concat(Math.random().toString(36).substring(2,9)),type:t.type,quantity:t.quantity}))}render(t,e,i){var a;let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if(!this.isLoaded||!this.sprite||!this.asset)return;let s=this.animated?null!=(a=this.animationFrames[this.currentFrame])?a:0:"number"==typeof this.asset.index?this.asset.index:0,n=Math.floor(this.sprite.width/16),o=16*Math.floor(s/n);t.drawImage(this.sprite,s%n*16,o,16,16,e,i,16*r,16*r)}isAt(t){return this.position.x===t.x&&this.position.y===t.y}isDangerous(){return this.damage>0}constructor(t){var e,i,a,r,s,n;this.currentFrame=0,this.lastFrameTime=0,this.animationDuration=2e3,this.sprite=null,this.asset=null,this.isLoaded=!1,this.type=t.type,this.position=t.position,this.health=null!=(e=t.health)?e:100,this.interactable=t.interactable,this.passable=t.passable,this.damage=null!=(i=t.damage)?i:0,this.animated=null!=(a=t.animated)&&a,this.animationFrames=null!=(r=t.animationFrames)?r:[0],this.dropItems=null!=(s=t.dropItems)?s:[],this.customData=null!=(n=t.customData)?n:{},this.loadAsset()}}class T{async loadAsset(){let t=S[this.type];if(t){this.asset=t;let e=new Image;e.src=(0,u.O)(t.spritePath);try{await new Promise((i,a)=>{e.onload=()=>i(),e.onerror=()=>a(Error("Failed to load ".concat(t.spritePath)))}),this.sprite=e,this.isLoaded=!0}catch(t){console.warn("Failed to load NPC sprite for ".concat(this.type,":"),t)}}}setTileCollisionCallback(t){this.tileCollisionCallback=t}setSpeculativeMovementCallback(t){this.speculativeMovementCallback=t}update(t,e,i){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[],r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];"dead"!==this.state&&(this.updateAnimation(t),this.updateAttackAnimation(t),this.updateTileBasedMovement(t,e,i,a,r))}updateTileBasedMovement(t,e,i,a){var r;let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[];if(this.moveCooldown>0){this.moveCooldown-=1e3*t;return}let n=this.getDistanceToPosition(e),o=i.some(t=>(null==t?void 0:t.type)==="wheat");if(this.handlePlayerInteraction(n,o,e),"monster"===this.category&&this.handleMonsterBehavior(t,e,a),"friendly"===this.category&&this.handleTraderBehavior(s,a),"animal"===this.category&&this.canBreed()){let t=this.findBreedingPartner(a);if(t)return void this.attemptBreeding(t)}let l=null!=(r=this.calculateMovementDecision(e,i,a,s).targetPosition)?r:null;if(l&&this.canMoveTo(l)){let t=Math.floor(this.position.x/16),e=Math.floor(this.position.y/16),i=Math.floor(l.x/16),a=Math.floor(l.y/16);(t!==i||e!==a)&&(this.updateDirectionFromMovement(i-t,a-e),this.position={x:16*i,y:16*a},this.lastMovementTime=Date.now()),this.moveCooldown=this.moveDelay}else{this.moveCooldown=.25*this.moveDelay;let t=Date.now();if(t-this.lastMovementTime>this.maxIdleTime){let e=this.getBasicAdjacentTile(a);if(e&&this.canMoveTo(e)){let i=Math.floor(e.x/16),a=Math.floor(e.y/16);this.position={x:16*i,y:16*a},this.lastMovementTime=t}}}}updateDirectionFromMovement(t,e){Math.abs(t)>Math.abs(e)?this.direction=t>0?"right":"left":this.direction=e>0?"down":"up"}getAdjacentTileTowards(t){let e=Math.floor(this.position.x/16),i=Math.floor(this.position.y/16),a=Math.floor(t.x/16),r=Math.floor(t.y/16),s=a-e,n=r-i,o=0,l=0;return Math.abs(s)>Math.abs(n)?o=s>0?1:-1:0!==n&&(l=n>0?1:-1),{x:(e+o)*16,y:(i+l)*16}}getAdjacentTileAway(t){let e=Math.floor(this.position.x/16),i=Math.floor(this.position.y/16),a=Math.floor(t.x/16),r=Math.floor(t.y/16),s=e-a,n=i-r,o=0,l=0;return Math.abs(s)>Math.abs(n)?o=s>0?1:-1:0!==n?l=n>0?1:-1:o=Math.random()>.5?1:-1,{x:(e+o)*16,y:(i+l)*16}}getRandomAdjacentTileWithSpacing(t){let e=Math.floor(this.position.x/16),i=Math.floor(this.position.y/16);if(this.getDistanceToPosition(this.originalPosition)>5)return this.getAdjacentTileTowards(this.originalPosition);let a=[{x:(e+1)*16,y:16*i},{x:(e-1)*16,y:16*i},{x:16*e,y:(i+1)*16},{x:16*e,y:(i-1)*16}].filter(e=>{let i=Math.floor(e.x/16),a=Math.floor(e.y/16);for(let e of t){if(e===this)continue;let r=Math.abs(Math.floor(e.position.x/16)-i)+Math.abs(Math.floor(e.position.y/16)-a);if(("animal"===this.category||"friendly"===this.category)&&("animal"===e.category||"friendly"===e.category)){if(0===r||1===r&&t.filter(t=>t!==this&&"animal"===t.category&&1===Math.abs(Math.floor(t.position.x/16)-i)+Math.abs(Math.floor(t.position.y/16)-a)).length>=2&&.3>Math.random())return!1}else if(0===r)return!1}return!0});return 0===a.length?this.getBasicAdjacentTile(t):a[Math.floor(Math.random()*a.length)]}getBasicAdjacentTile(t){let e=Math.floor(this.position.x/16),i=Math.floor(this.position.y/16),a=[{x:(e+1)*16,y:16*i},{x:(e-1)*16,y:16*i},{x:16*e,y:(i+1)*16},{x:16*e,y:(i-1)*16}].filter(e=>{let i=Math.floor(e.x/16),a=Math.floor(e.y/16);for(let e of t){if(e===this)continue;let t=Math.floor(e.position.x/16),r=Math.floor(e.position.y/16);if(t===i&&r===a)return!1}return!0});return a.length>0?a[Math.floor(Math.random()*a.length)]:null}handlePlayerInteraction(t,e,i){if("dead"!==this.state){if("animal"===this.category&&e&&t<=5){this.state="following";return}if(this.health<this.maxHealth&&"monster"!==this.category){this.state="fleeing";return}if("monster"===this.category&&t<=3){this.state="attacking";return}"following"===this.state&&(!e||t>5)&&(this.state="idle"),"fleeing"===this.state&&t>8&&(this.state="idle"),"attacking"===this.state&&t>5&&(this.state="idle")}}handleMonsterBehavior(t,e,i){if("monster"!==this.category)return;let a=Date.now(),r=[{position:e,priority:2},...i.filter(t=>"monster"!==t.category&&!t.isDead()).map(t=>({position:t.position,priority:1}))];if(r.length>0&&!this.isAttacking){let t=null,e=1/0;for(let i of r){let a=this.getDistanceToPosition(i.position);a<e&&(e=a,t=i.position)}if(t&&e>1.5){let e=this.getAdjacentTileTowards(t);if(e&&this.canMoveTo(e)){this.moveToPosition(e),this.moveCooldown=this.moveDelay;return}}}if(a-this.lastAttackTime>=this.attackCooldown){if(1>=this.getDistanceToPosition(e)){this.startAttack(e),this.lastAttackTime=a;return}for(let t of i)if("monster"!==t.category&&!t.isDead()&&1>=this.getDistanceToNPC(t)){this.startAttack(t.position),t.takeDamage(5),this.lastAttackTime=a;break}}}handleTraderBehavior(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];if("friendly"!==this.category||this.isAttacking)return;let i=e.filter(t=>"monster"===t.category&&!t.isDead()&&this.getDistanceToNPC(t)<=this.detectionRange);if(i.length>0){let t=i.reduce((t,e)=>this.getDistanceToNPC(e)<this.getDistanceToNPC(t)?e:t);this.state="fleeing";let e=this.getAdjacentTileAway(t.position);if(e&&this.canMoveTo(e)){this.moveToPosition(e),this.moveCooldown=this.moveDelay;return}}if("fleeing"===this.state&&0===i.length&&(this.state="idle"),"fleeing"!==this.state&&t.length>0){let i=null,a=1/0;for(let r of t){let t=this.getDistanceToPosition(r);t>=3&&t<=5&&t<a&&e.filter(t=>"friendly"===t.category&&t!==this&&3>=this.getDistanceToPosition(r)).length<2&&(a=t,i=r)}if(i){let t=this.getAdjacentTileTowards(i);if(t&&this.canMoveTo(t)&&this.checkTraderSpacing(t,e)){this.moveToPosition(t),this.moveCooldown=this.moveDelay;return}}if(.3>Math.random()){let t=this.getRandomAdjacentTileWithSpacing(e);t&&this.canMoveTo(t)&&(this.moveToPosition(t),this.moveCooldown=this.moveDelay)}}}checkTraderSpacing(t,e){let i=Math.floor(t.x/16),a=Math.floor(t.y/16);for(let t of e){if(t===this)continue;let e=Math.abs(Math.floor(t.position.x/16)-i)+Math.abs(Math.floor(t.position.y/16)-a);if(("friendly"===t.category||"animal"===t.category)&&e<2||0===e)return!1}return!0}getTraderMovementTarget(t,e){let i=t.filter(t=>"monster"===t.category&&!t.isDead()&&this.getDistanceToNPC(t)<=this.detectionRange);if(i.length>0){let t=i.reduce((t,e)=>this.getDistanceToNPC(e)<this.getDistanceToNPC(t)?e:t);return this.getAdjacentTileAway(t.position)}if(e.length>0)for(let i of e){let e=this.getDistanceToPosition(i);if(e>=3&&e<=5&&t.filter(t=>"friendly"===t.category&&t!==this&&Math.sqrt(Math.pow(t.position.x-i.x,2)+Math.pow(t.position.y-i.y,2))/16<=3).length<2){let e=this.getAdjacentTileTowards(i);if(e&&this.checkTraderSpacing(e,t))return e}}return .3>Math.random()?this.getRandomAdjacentTileWithSpacing(t):null}startAttack(t){this.isAttacking=!0,this.attackAnimationTimer=0,this.attackTarget=t,this.currentFrame=0;let e=t.x-this.position.x,i=t.y-this.position.y;Math.abs(e)>Math.abs(i)?this.direction=e>0?"right":"left":this.direction=i>0?"down":"up"}updateAnimation(t){var e;if(!this.isLoaded||!this.asset)return;let i=this.getSpriteMapping(),a=null!=(e=null==i?void 0:i.frames)?e:4;this.lastFrameTime+=1e3*t,"wandering"===this.state||"following"===this.state||"fleeing"===this.state||this.isAttacking?this.lastFrameTime>=this.animationDuration/a&&(this.currentFrame=(this.currentFrame+1)%a,this.lastFrameTime=0):(this.currentFrame=0,this.lastFrameTime=0)}updateAttackAnimation(t){this.isAttacking&&(this.attackAnimationTimer+=1e3*t,this.attackAnimationTimer>=this.attackAnimationDuration&&(this.isAttacking=!1,this.attackAnimationTimer=0,this.attackTarget=null,this.currentFrame=0))}getDistanceToNPC(t){let e=t.position.x-this.position.x,i=t.position.y-this.position.y;return Math.sqrt(e*e+i*i)/16}getDistanceToPosition(t){let e=t.x-this.position.x,i=t.y-this.position.y;return Math.sqrt(e*e+i*i)/16}canMoveTo(t){if(Math.sqrt(Math.pow(t.x-this.originalPosition.x,2)+Math.pow(t.y-this.originalPosition.y,2))>160)return!1;if(this.tileCollisionCallback){let e=this.tileCollisionCallback(t);return!!(e&&this.speculativeMovementCallback&&this.speculativeMovementCallback(t,this))||!e}return!0}render(t,e,i){if(!this.isLoaded||!this.sprite||!this.asset)return;let a=0;a=this.isAttacking?this.getAttackDirectionOffset()+this.currentFrame:this.getDirectionOffset()+this.currentFrame;let r="farmer_goblin"===this.type&&"left"===this.direction,s=this.sprite.width/16,n=a%s*16,o=16*Math.floor(a/s);r?(t.save(),t.scale(-1,1),t.drawImage(this.sprite,n,o,16,16,-(e+16),i,16,16),t.restore()):t.drawImage(this.sprite,n,o,16,16,e,i,16,16),this.health<this.maxHealth&&!this.isDead()&&this.renderHealthBar(t,e,i),this.isAttacking&&"spear_goblin"===this.type&&this.attackTarget&&this.renderWideAttack(t,e,i)}getDirectionOffset(){let t=this.getSpriteMapping();if(!t)return 0;switch(this.direction){case"down":default:return t.down;case"up":return t.up;case"left":return t.left;case"right":return t.right}}getAttackDirectionOffset(){let t=this.getAttackSpriteMapping();if(!t)return this.getDirectionOffset();switch(this.direction){case"down":default:return t.down;case"up":return t.up;case"left":return t.left;case"right":return t.right}}getAttackSpriteMapping(){switch(this.type){case"archer_goblin":return{down:25,up:30,left:35,right:40,frames:5};case"club_goblin":case"orc_shaman":case"spear_goblin":case"swordsman_trader":case"spearman_trader":return{down:25,up:30,right:35,left:40,frames:5};case"farmer_goblin":return{down:25,up:30,right:35,left:35,frames:5};case"orc":case"axeman_trader":return{down:25,up:31,right:37,left:43,frames:5};case"mega_slime_blue":case"slime":return{down:25,left:31,right:37,up:43,frames:6};case"farmer_trader":return{down:45,up:50,right:55,left:60,frames:5};default:return null}}moveToPosition(t){this.position={...t},this.lastMovementTime=Date.now()}renderWideAttack(t,e,i){if(!this.attackTarget||!this.sprite)return;let a=e+("right"===this.direction?16:"left"===this.direction?-16:0),r=i+("down"===this.direction?16:"up"===this.direction?-16:0),s=this.getWideAttackFrames();if(!s)return;let n=this.sprite.width/16,o=s.facingTileFrame%n*16,l=16*Math.floor(s.facingTileFrame/n);t.drawImage(this.sprite,o,l,16,16,a,r,16,16)}getWideAttackFrames(){if("spear_goblin"!==this.type)return null;let t=this.getAttackDirectionOffset();return{playerTileFrame:t+this.currentFrame,facingTileFrame:t+this.currentFrame+10}}getSpriteMapping(){switch(this.type){case"archer_goblin":return{down:0,up:5,left:10,right:15,frames:5};case"club_goblin":case"orc_shaman":case"spear_goblin":case"swordsman_trader":case"spearman_trader":return{down:0,up:5,right:10,left:15,frames:5};case"farmer_goblin":return{down:0,up:5,right:10,left:10,frames:5};case"orc":case"axeman_trader":return{down:0,up:6,right:12,left:18,frames:5};case"mega_slime_blue":case"slime":return{down:0,left:6,right:12,up:18,frames:6};case"farmer_trader":return{down:20,up:25,right:30,left:35,frames:5};default:return{down:0,left:4,right:8,up:12,frames:4}}}renderHealthBar(t,e,i){let a=this.health/this.maxHealth;t.fillStyle="red",t.fillRect(e+1,i-4,14,2),t.fillStyle="green",t.fillRect(e+1,i-4,14*a,2)}takeDamage(t){"dead"!==this.state&&(this.health-=t,this.health<=0?(this.health=0,this.state="dead"):"monster"!==this.category&&(this.state="fleeing"))}isDead(){return"dead"===this.state||this.health<=0}getDropItems(){return this.dropItems}getDefaultHealth(){switch(this.type){case"chicken":return 20;case"pig":return 35;case"sheep":default:return 25;case"trader":case"axeman_trader":case"swordsman_trader":case"spearman_trader":case"farmer_trader":return 50;case"orc":case"skeleton":case"goblin":case"slime":return 40;case"archer_goblin":return 60;case"club_goblin":return 80;case"farmer_goblin":return 70;case"orc":return 120;case"orc_shaman":return 100;case"spear_goblin":return 90;case"mega_slime_blue":return 150}}getDefaultAggressive(){return"monster"===this.category}getDefaultDropItems(){switch(this.type){case"chicken":return[{type:"chicken_meat",quantity:1}];case"pig":return[{type:"pork",quantity:3}];case"sheep":return[{type:"mutton",quantity:1},{type:"wool",quantity:3}];case"trader":default:return[];case"orc":case"skeleton":case"goblin":return[{type:"copper_ore",quantity:1}];case"archer_goblin":case"club_goblin":case"farmer_goblin":case"spear_goblin":case"slime":return[{type:"monster_drop",quantity:1}];case"orc_shaman":return[{type:"monster_drop",quantity:2}];case"mega_slime_blue":return[{type:"monster_drop",quantity:3}];case"axeman_trader":case"swordsman_trader":case"spearman_trader":case"farmer_trader":return[{type:"gold_ingot",quantity:1}]}}getNPCCategory(){switch(this.type){case"chicken":case"pig":case"sheep":default:return"animal";case"trader":case"axeman_trader":case"swordsman_trader":case"spearman_trader":case"farmer_trader":return"friendly";case"orc":case"skeleton":case"goblin":case"archer_goblin":case"club_goblin":case"farmer_goblin":case"orc_shaman":case"spear_goblin":case"mega_slime_blue":case"slime":return"monster"}}canBreed(){return Date.now()-this.lastBreedTime>=this.breedCooldown}findBreedingPartner(t){for(let e of t)if("animal"===e.category&&e!==this&&this.canBreedWith(e))return e;return null}canBreedWith(t){return t.type===this.type&&1===this.getDistanceToNPC(t)&&!!this.areFacingEachOther(t)&&!!t.canBreed()}areFacingEachOther(t){let e=Math.floor(this.position.x/16),i=Math.floor(this.position.y/16),a=Math.floor(t.position.x/16),r=Math.floor(t.position.y/16),s=a-e,n=r-i,o=!1;1===s&&0===n&&"right"===this.direction&&(o=!0),-1===s&&0===n&&"left"===this.direction&&(o=!0),0===s&&1===n&&"down"===this.direction&&(o=!0),0===s&&-1===n&&"up"===this.direction&&(o=!0);let l=!1;return 1===s&&0===n&&"left"===t.direction&&(l=!0),-1===s&&0===n&&"right"===t.direction&&(l=!0),0===s&&1===n&&"up"===t.direction&&(l=!0),0===s&&-1===n&&"down"===t.direction&&(l=!0),o&&l}attemptBreeding(t){this.lastBreedTime=Date.now(),t.lastBreedTime=Date.now();let e=this.findOffspringPosition(t);e&&(console.log("\uD83D\uDC23 [BREEDING] ".concat(this.type," at (").concat(Math.floor(this.position.x/16),",").concat(Math.floor(this.position.y/16),") and ").concat(t.type," at (").concat(Math.floor(t.position.x/16),",").concat(Math.floor(t.position.y/16),") are attempting to breed!")),this.breedingRequest={partner:t,offspringType:this.type,offspringPosition:e,timestamp:Date.now()})}findOffspringPosition(t){let e=Math.floor(this.position.x/16),i=Math.floor(this.position.y/16),a=Math.floor(t.position.x/16),r=Math.floor(t.position.y/16);for(let t of[{x:(e+1)*16,y:16*i},{x:(e-1)*16,y:16*i},{x:16*e,y:(i+1)*16},{x:16*e,y:(i-1)*16},{x:(a+1)*16,y:16*r},{x:(a-1)*16,y:16*r},{x:16*a,y:(r+1)*16},{x:16*a,y:(r-1)*16}])if(this.canMoveTo(t))return t;return null}findSameTypeAttraction(t){let e=null,i=1/0;for(let a of t)if("animal"===a.category&&a!==this&&a.type===this.type){let t=this.getDistanceToNPC(a);t>=2&&t<=4&&t<i&&(e=a,i=t)}return e?e.position:null}checkCrowdedRepulsion(t){let e=t.filter(t=>"animal"===t.category&&t!==this&&t.type===this.type);if(e.filter(t=>2>=this.getDistanceToNPC(t)).length>=3){let t=0,i=0,a=0;for(let r of e)2>=this.getDistanceToNPC(r)&&(t+=r.position.x,i+=r.position.y,a++);if(a>0)return{x:t/a,y:i/a}}return null}calculateAttractionChance(t){let e=.2,i=t.filter(t=>"animal"===t.category&&t!==this&&t.type===this.type&&3>=this.getDistanceToNPC(t)).length;return i>=2?e*=.5:1===i&&(e*=.8),t.some(t=>"animal"===t.category&&t!==this&&t.type===this.type&&4>=this.getDistanceToNPC(t))||(e*=1.5),Math.min(e,.4)}findNearestAnimal(t){let e=null,i=1/0;for(let a of t)if("animal"===a.category&&a!==this){let t=this.getDistanceToNPC(a);t<=2&&t<i&&(e=a,i=t)}return e}calculateMovementDecision(t,e,i){var a,r,s;let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[],o=Date.now();if(this.currentMovementDecision&&o-this.currentMovementDecision.timestamp<100)return this.currentMovementDecision;let l=this.getDistanceToPosition(t),c=e.some(t=>(null==t?void 0:t.type)==="wheat");if("friendly"===this.category){let t=this.getTraderMovementTarget(i,n),e={shouldMove:null!==t,behaviorType:"trader_behavior",targetPosition:null!=t?t:void 0};return this.currentMovementDecision={timestamp:o,...e},e}if("following"===this.state&&"animal"===this.category&&c&&l<=5){let e={shouldMove:!0,behaviorType:"basic_wander",targetPosition:null!=(a=this.getAdjacentTileTowards(t))?a:void 0};return this.currentMovementDecision={timestamp:o,...e},e}if("fleeing"===this.state){let e={shouldMove:!0,behaviorType:"basic_wander",targetPosition:null!=(r=this.getAdjacentTileAway(t))?r:void 0};return this.currentMovementDecision={timestamp:o,...e},e}if("monster"===this.category&&l<=3){let e={shouldMove:!0,behaviorType:"basic_wander",targetPosition:null!=(s=this.getAdjacentTileTowards(t))?s:void 0};return this.currentMovementDecision={timestamp:o,...e},e}let h=i.filter(t=>"animal"===t.category&&t!==this&&2>=this.getDistanceToNPC(t)).length,u=o-this.lastMovementTime,d=Math.min(.95,(h>0?.9:.8)+(u>3e3?Math.min(.3,(u-3e3)/5e3):0)),p=31*Math.floor(this.originalPosition.x)+37*Math.floor(this.originalPosition.y),g=Math.floor(o/100)+Math.floor(this.position.x)+Math.floor(this.position.y)+p;if(u>8e3&&(g+=Math.floor(o/50)),Math.abs(Math.sin(g))%1<d){let t,e=Math.abs(Math.sin(g+1))%1,a=Math.abs(Math.sin(g+2))%1,r=Math.abs(Math.sin(g+3))%1,s=null,n=this.checkCrowdedRepulsion(i);if(n&&e<.4)s=this.getAdjacentTileAway(n),t="crowded_escape";else if(a<(h>0?.3:.2)){let e=this.findNearestAnimal(i);s=e?this.getAdjacentTileAway(e.position):this.getRandomAdjacentTileWithSpacing(i),t="random_avoidance"}else if(r<(h>0?.35:.25))s=this.getRandomAdjacentTileWithSpacing(i),t="exploration";else{let a=this.findSameTypeAttraction(i),r=this.calculateAttractionChance(i);a&&e<r?(s=this.getAdjacentTileTowards(a),t="attraction"):(s=this.getRandomAdjacentTileWithSpacing(i),t="basic_wander")}let l={shouldMove:!0,behaviorType:t,targetPosition:null!=s?s:void 0};return this.currentMovementDecision={timestamp:o,...l},l}let m={shouldMove:!1,behaviorType:"basic_wander"};return this.currentMovementDecision={timestamp:o,...m},m}getMovementIntention(t,e,i){var a;let r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];return null!=(a=this.calculateMovementDecision(t,e,i,r).targetPosition)?a:null}constructor(t){var e,i,a,r,s;this.state="idle",this.direction="down",this.lastMoveTime=0,this.target=null,this.moveCooldown=0,this.moveDelay=1200,this.currentFrame=0,this.lastFrameTime=0,this.animationDuration=1e3,this.sprite=null,this.asset=null,this.isLoaded=!1,this.moveTimer=0,this.moveInterval=2e3,this.lastAttackTime=0,this.attackCooldown=1e3,this.isAttacking=!1,this.attackAnimationTimer=0,this.attackAnimationDuration=600,this.attackTarget=null,this.lastBreedTime=0,this.breedCooldown=3e4,this.lastMovementTime=0,this.maxIdleTime=5e3,this.restlessnessBonus=0,this.currentMovementDecision=null,this.type=t.type,this.position={...t.position},this.originalPosition={...t.position},this.health=null!=(e=t.health)?e:this.getDefaultHealth(),this.maxHealth=this.health,this.aggressive=null!=(i=t.aggressive)?i:this.getDefaultAggressive(),this.movementSpeed=null!=(a=t.movementSpeed)?a:1,this.detectionRange=null!=(r=t.detectionRange)?r:5,this.dropItems=null!=(s=t.dropItems)?s:this.getDefaultDropItems(),this.category=this.getNPCCategory(),this.moveCooldown=Math.random()*this.moveDelay,this.lastMovementTime=Date.now(),this.loadAsset()}}class x{hashSeed(t){let e=0;for(let i=0;i<t.length;i++)e=(e<<5)-e+t.charCodeAt(i),e&=e;return Math.abs(e)}generateVillageStructures(t,e,i,a,r){let s=[],n="".concat(t,",").concat(e);if(a.has(n)||(null==r?void 0:r(t,e)))return[];let o=16*t/1e3,l=16*e/1e3,c=this.villageNoise(o,l);if(c>this.VILLAGE_THRESHOLD&&"GRASS"===i){let i=Math.floor(t/50),o=Math.floor(e/50),l="village_area_".concat(i,"_").concat(o);if(a.has(l))return[];let c=this.findBestVillageCenterInArea(50*i,50*o,50,a,r);if(c&&c.x===t&&c.y===e){let c=this.generateVillageName(i,o);console.log("\uD83C\uDFD8️ Generating village center well at designated tile (".concat(t,", ").concat(e,") in grid area (").concat(i,", ").concat(o,") - Village: ").concat(c));let h=16*t,u=16*e,d={type:"water_well",position:{x:h,y:u},poi:new v({type:"water_well",position:{x:h,y:u},interactable:!0,passable:!1,customData:{villageName:c}})};s.push(d),a.set(n,d),a.set(l,d),console.log("Generated water well at village center tile (".concat(t,", ").concat(e,") for village: ").concat(c));let p=Math.floor(3*Math.random())+2,g=["windmill","market_stall"];console.log("\uD83C\uDFD8️ About to generate ".concat(p," POI structures around well for village: ").concat(c));for(let i=0;i<p;i++){let i=g[Math.floor(Math.random()*g.length)],n=!1,o=0;for(;!n&&o<30;){let l=2*Math.random()*Math.PI,h=6+4*Math.random(),u=Math.round(t+Math.cos(l)*h),d=Math.round(e+Math.sin(l)*h),p="".concat(u,",").concat(d);if(p!=="".concat(t,",").concat(e)&&!a.has(p)&&!(null==r?void 0:r(u,d))&&this.hasAdequatePOISpacing(u,d,a)&&"GRASS"===this.getTileTypeForCoords(u,d)){let r=16*u,o=16*d,l={type:i,position:{x:r,y:o},poi:new v({type:i,position:{x:r,y:o},interactable:!1,passable:!1,animated:"windmill"===i,customData:{villageName:c}})};s.push(l),a.set(p,l),n=!0,console.log("Generated ".concat(i," at tile (").concat(u,", ").concat(d,") around well at (").concat(t,", ").concat(e,")"))}o++}n||console.warn("Failed to place ".concat(i," around well at (").concat(t,", ").concat(e,") after ").concat(30," attempts"))}console.log("\uD83C\uDFD8️ About to call generateVillageTraders for village: ".concat(c," at well (").concat(t,", ").concat(e,")")),this.generateVillageTraders(t,e,c,a,s,r)}}if(this.checkForMarketPlacement(t,e,i,a,s),this.checkForVillageAnimalPlacement(t,e,i,a,s),"STONE"===i&&this.mineNoise(3*o,3*l)>.98){let i=this.generateMineOrDungeon(t,e,a);i&&(s.push(i),"dungeon_entrance"===i.type&&this.generateDungeonMonsters(t,e,a,s,r))}if("GRASS"===i&&c<this.VILLAGE_THRESHOLD-.2){let i=this.generateAnimal(t,e,a);i&&s.push(i)}if(("FOREST"===i||"STONE"===i||"GRAVEL"===i||"MUD"===i)&&c<this.VILLAGE_THRESHOLD-.2){let r=this.generateMonster(t,e,a,i);r&&s.push(r)}return s}findBestVillageCenterInArea(t,e,i,a,r){let s=null,n=Math.min(i,20),o=t+Math.floor(i/2)-Math.floor(n/2),l=e+Math.floor(i/2)-Math.floor(n/2);for(let t=l;t<l+n;t++)for(let e=o;e<o+n;e++){let i="".concat(e,",").concat(t);if(a.has(i)||(null==r?void 0:r(e,t))||"GRASS"!==this.getTileTypeForCoords(e,t))continue;let n=16*e/1e3,o=16*t/1e3,l=this.villageNoise(n,o);l>this.VILLAGE_THRESHOLD&&(!s||l>s.value)&&(s={x:e,y:t,value:l})}return s}checkForMarketPlacement(t,e,i,a,r){for(let l=-10;l<=10;l++)for(let c=-10;c<=10;c++){let h=t+l,u=e+c,d="".concat(h,",").concat(u),p=a.get(d);if(p&&"water_well"===p.type){let d=Math.abs(l)+Math.abs(c);if(d>=6&&d<=10&&this.isValidPOITerrain(i)){if(!this.hasAdequatePOISpacing(t,e,a))return;let i=this.getRandomVillageStructureType(t,e,h,u,a);if(i){var s,n,o;let l={x:16*t,y:16*e},c=null!=(o=null==(n=p.poi)||null==(s=n.customData)?void 0:s.villageName)?o:"Unknown Village",d=this.createStructurePOI(i,l,c);if(d){r.push(d),a.set("".concat(t,",").concat(e),d),console.log("Generated ".concat(i," at tile (").concat(t,", ").concat(e,") for village centered at well (").concat(h,", ").concat(u,")"));return}}}}}}getCirclePositions(t,e,i){let a=[];for(let r=0;r<360;r+=30){let s=r*Math.PI/180,n=Math.round(t+i*Math.cos(s)),o=Math.round(e+i*Math.sin(s));a.push({x:n,y:o})}return a}getRandomVillageStructureType(t,e,i,a,r){var s;let n=Math.abs(Math.sin((t-i)*31+(e-a)*37+13*i+17*a))%1,o=["windmill_frame_0","food_market","butcher_market","armory_market","cloth_market","notice_board"],l=new Set;for(let t=-10;t<=10;t++)for(let e=-10;e<=10;e++){let s=i+t,n=a+e,c="".concat(s,",").concat(n),h=r.get(c);h&&o.includes(h.type)&&l.add(h.type)}let c=o.filter(t=>!l.has(t));if(0===c.length)return null;let h=Math.floor(n*c.length);return null!=(s=c[h])?s:null}getTileTypeForCoords(t,e){let i=16*t/1e3,a=16*e/1e3,r=this.villageNoise(2*i,2*a),s=this.structureNoise(1.5*i,1.5*a);return r<.3?r<.2?"DEEP_WATER":"SHALLOW_WATER":r>.8?s<.3?"SNOW":"STONE":r>.7?"COBBLESTONE":s>.7&&r<.4?r<.25?"MUD":"SAND":s>.6?"FOREST":"GRASS"}generateVillage(t,e,i){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:()=>"GRASS",r=arguments.length>4?arguments[4]:void 0,s=[],n="village_".concat(Math.floor(t/20),"_").concat(Math.floor(e/20));if(i.has(n))return[];let o="".concat(t,",").concat(e);if(!i.has(o)&&!(null==r?void 0:r(t,e))){let r=a(t,e);if(this.isValidPOITerrain(r)){let a=this.createStructurePOI("water_well",{x:16*t,y:16*e});a&&(s.push(a),i.set(o,a),console.log("Generated well at village center tile (".concat(t,", ").concat(e,")")))}}let l=["windmill_frame_0","food_market","butcher_market","armory_market","cloth_market"],c=0;for(let n=6;n<=10&&c<l.length;n++)for(let o of this.getCirclePositions(t,e,n)){if(c>=l.length)break;let t="".concat(o.x,",").concat(o.y);if(!i.has(t)&&!(null==r?void 0:r(o.x,o.y))){let e=a(o.x,o.y);if(this.isValidPOITerrain(e)){let e=l[c],a={x:16*o.x,y:16*o.y},r=this.createStructurePOI(e,a);r&&(s.push(r),i.set(t,r),console.log("Generated ".concat(e," at tile (").concat(o.x,", ").concat(o.y,")")),c++)}}}let h=["chicken","pig","sheep"];for(let n of[{x:t+5,y:e+5},{x:t-5,y:e+5},{x:t+5,y:e-5},{x:t-5,y:e-5},{x:t+7,y:e},{x:t-7,y:e},{x:t,y:e+7},{x:t,y:e-7},{x:t+3,y:e+7},{x:t-3,y:e+7},{x:t+7,y:e+3},{x:t-7,y:e-3}]){let t="".concat(n.x,",").concat(n.y);if(!i.has(t)&&!(null==r?void 0:r(n.x,n.y))){let e=a(n.x,n.y);if(this.isValidNPCTerrain(e)&&this.hasAdjacentPassableSpace(n.x,n.y,i,r)){let e=h[Math.floor(Math.random()*h.length)];if(e){let a={x:16*n.x,y:16*n.y},r=this.createAnimalNPC(e,a);r&&(s.push(r),i.set(t,r))}}}}let u=["food_market","butcher_market","armory_market","cloth_market"];if(.8>Math.random()){let n=null;for(let a=-15;a<=15&&!n;a++)for(let r=-15;r<=15&&!n;r++){let s=t+a,o=e+r,l="".concat(s,",").concat(o),c=i.get(l);c&&u.includes(c.type)&&(n={x:s,y:o})}if(n){let t={x:n.x+1,y:n.y+1},e="".concat(t.x,",").concat(t.y);if(!i.has(e)&&!(null==r?void 0:r(t.x,t.y))){let r=a(t.x,t.y);if(this.isValidNPCTerrain(r)){let a={x:16*t.x,y:16*t.y},r=this.createTraderNPC("trader",a);r&&(s.push(r),i.set(e,r))}}}}return i.set(n,{type:"village_marker",position:{x:16*t,y:16*e}}),s}generateMineOrDungeon(t,e,i){let a="".concat(t,",").concat(e);if(i.has(a))return null;for(let a=-15;a<=15;a++)for(let r=-15;r<=15;r++){if(0===a&&0===r)continue;let s="".concat(t+a,",").concat(e+r),n=i.get(s);if(n&&("mine_entrance"===n.type||"dungeon_entrance"===n.type))return null}if(Math.random()>.3)return null;let r=.7>Math.random()?"mine_entrance":"dungeon_entrance",s=this.createStructurePOI(r,{x:16*t,y:16*e});return s&&i.set(a,s),s}generateAnimal(t,e,i){let a="".concat(t,",").concat(e);if(i.has(a))return null;let r=16*t,s=16*e;if(.85>this.animalNoise(r/500,s/500)||!this.hasAdjacentPassableSpace(t,e,i))return null;let n=this.selectAnimalTypeWithGrouping(t,e,i);if(!n)return null;let o=this.createAnimalNPC(n,{x:r,y:s});return o&&(i.set(a,o),console.log("\uD83D\uDC3E Generated wild ".concat(n," at tile (").concat(t,", ").concat(e,")"))),o}generateMonster(t,e,i,a){let r,s="".concat(t,",").concat(e);if(i.has(s))return null;let n=16*t,o=16*e;if(.98>this.animalNoise(n/800,o/800)||Math.random()>.2)return null;if("MUD"===a)r=.2>Math.random()?"mega_slime_blue":"slime";else{let t=["archer_goblin","club_goblin","farmer_goblin","orc","orc_shaman","spear_goblin"];r=t[Math.floor(Math.random()*t.length)]}let l=this.createMonsterNPC(r,{x:n,y:o});return l&&(i.set(s,l),console.log("\uD83D\uDC79 Generated wild ".concat(r," at tile (").concat(t,", ").concat(e,") on ").concat(a))),l}createStructurePOI(t,e,i){try{let a={};i&&(a.villageName=i,"notice_board"===t&&(a.noticeTitle="".concat(i," Notice Board"),a.noticeText=this.generateNoticeText(i)));let r=new v({type:t,position:e,interactable:!0,passable:t.includes("entrance"),animated:"windmill_frame_0"===t,customData:a});return{type:t,position:e,poi:r}}catch(e){return console.warn("Failed to create POI structure ".concat(t,":"),e),null}}createAnimalNPC(t,e){try{let i=new T({type:t,position:e,aggressive:!1});return{type:t,position:e,npc:i}}catch(e){return console.warn("Failed to create animal NPC ".concat(t,":"),e),null}}createMonsterNPC(t,e){try{let i=new T({type:t,position:e,aggressive:!0});return{type:t,position:e,npc:i}}catch(e){return console.warn("Failed to create monster NPC ".concat(t,":"),e),null}}createTraderNPC(t,e){console.log("\uD83C\uDFEA Creating trader NPC of type ".concat(t," at position (").concat(e.x,", ").concat(e.y,")"));try{let i=new T({type:t,position:e,aggressive:!1});return console.log("✅ Successfully created ".concat(t," NPC at (").concat(e.x,", ").concat(e.y,")")),{type:t,position:e,npc:i}}catch(e){return console.error("❌ Failed to create trader NPC ".concat(t,":"),e),null}}generateVillageTraders(t,e,i,a,r,s){console.log("\uD83C\uDFEA Starting trader generation for village: ".concat(i," at center (").concat(t,", ").concat(e,")"));let n=["axeman_trader","swordsman_trader","spearman_trader","farmer_trader"],o=0,l=[];for(let i=-20;i<=20;i++)for(let a=-20;a<=20;a++){let r=Math.abs(i)+Math.abs(a);if(r>=5&&r<=20){let s=t+i,n=e+a;l.push({x:s,y:n,distance:r})}}l.sort((t,e)=>t.distance-e.distance);let c=0,h=0,u=0,d=0,p=0;for(let g of l){let l;if(o>=5)break;c++;let m="".concat(g.x,",").concat(g.y);if(g.x===t&&g.y===e){h++,console.log("\uD83D\uDEAB Tile (".concat(g.x,", ").concat(g.y,") blocked - this is the village well center tile"));continue}if(a.has(m)){h++;continue}let f=!1,y=a.get(m);if(y&&(y.poi&&!y.poi.passable?(f=!0,console.log("\uD83D\uDEAB Tile (".concat(g.x,", ").concat(g.y,") blocked by impassable POI: ").concat(y.type))):y.npc&&!y.npc.isDead()&&(f=!0,console.log("\uD83D\uDEAB Tile (".concat(g.x,", ").concat(g.y,") blocked by living NPC: ").concat(y.type)))),!f&&s&&s(g.x,g.y)&&(f=!0,console.log("\uD83D\uDEAB Tile (".concat(g.x,", ").concat(g.y,") blocked by tile occupancy checker (likely well or important POI)"))),f){h++;continue}try{if(l=this.getTileTypeForCoords(g.x,g.y),"GRASS"!==l&&"DIRT"!==l&&"FOREST"!==l&&"MUD"!==l&&"CLAY"!==l&&"GRAVEL"!==l&&"SAND"!==l&&"RIVER"!==l&&"SHALLOW_WATER"!==l){u++;continue}}catch(t){console.warn("Failed to get terrain for tile (".concat(g.x,", ").concat(g.y,"), assuming GRASS")),l="GRASS"}if(!this.hasAdequateTraderSpacingPermissive(g.x,g.y,a,s)){d++;continue}if(!this.hasMinimalAdjacentSpace(g.x,g.y,a,s)){p++;continue}let S=n[Math.floor(Math.random()*n.length)],v={x:16*g.x,y:16*g.y};console.log("\uD83C\uDFEA Attempting to create ".concat(S," at tile (").concat(g.x,", ").concat(g.y,") with terrain ").concat(l));let T=this.createTraderNPC(S,v);T?(r.push(T),a.set(m,T),o++,console.log("✅ Generated ".concat(S," at tile (").concat(g.x,", ").concat(g.y,") for village: ").concat(i," on ").concat(l," (distance: ").concat(g.distance,")"))):console.warn("❌ Failed to create trader NPC ".concat(S," at (").concat(g.x,", ").concat(g.y,")"))}console.log("\uD83C\uDFEA Finished trader generation for ".concat(i,": ").concat(o,"/5 traders placed")),console.log("\uD83D\uDCCA Trader generation stats: ".concat(c," tiles checked, ").concat(h," occupied, ").concat(u," bad terrain, ").concat(d," bad spacing, ").concat(p," insufficient space"))}hasAdequateTraderSpacingPermissive(t,e,i,a){let r="".concat(t,",").concat(e);if(i.has(r))return!1;for(let a of[{x:t+1,y:e},{x:t-1,y:e},{x:t,y:e+1},{x:t,y:e-1}]){let t="".concat(a.x,",").concat(a.y),e=i.get(t);if(null==e?void 0:e.npc)return!1}return!0}hasMinimalAdjacentSpace(t,e,i,a){let r="".concat(t,",").concat(e);if(i.has(r))return!1;let s=0;for(let a of[{x:t+1,y:e},{x:t-1,y:e},{x:t,y:e+1},{x:t,y:e-1}]){let t="".concat(a.x,",").concat(a.y),e=i.get(t);(null==e?void 0:e.npc)&&s++}return s<4}generateDungeonMonsters(t,e,i,a,r){let s=["archer_goblin","club_goblin","farmer_goblin","orc","orc_shaman","spear_goblin","mega_slime_blue","slime"],n=0;for(let o=0;o<50&&n<5;o++){let o=2*Math.random()*Math.PI,l=3+5*Math.random(),c=Math.round(t+Math.cos(o)*l),h=Math.round(e+Math.sin(o)*l),u="".concat(c,",").concat(h);if(!i.has(u)&&!(null==r?void 0:r(c,h))&&this.hasAdequateNPCSpacing(c,h,i,r)){let r=s[Math.floor(Math.random()*s.length)],o={x:16*c,y:16*h},l=this.createMonsterNPC(r,o);l&&(a.push(l),i.set(u,l),n++,console.log("Generated ".concat(r," at tile (").concat(c,", ").concat(h,") near dungeon (").concat(t,", ").concat(e,")")))}}console.log("✅ Generated ".concat(n,"/5 monsters near dungeon at (").concat(t,", ").concat(e,")"))}hasAdequateNPCSpacing(t,e,i,a){for(let r=-2;r<=2;r++)for(let s=-2;s<=2;s++){if(0===r&&0===s)continue;let n=t+r,o=e+s,l="".concat(n,",").concat(o),c=i.get(l);if((null==c?void 0:c.npc)||(null==a?void 0:a(n,o))&&Math.abs(r)+Math.abs(s)<=1)return!1}return!0}getVillageCenter(t,e){return this.villageNoise(t/1e3,e/1e3)>this.VILLAGE_THRESHOLD?{x:20*Math.floor(Math.floor(t/16)/20)*16,y:20*Math.floor(Math.floor(e/16)/20)*16}:null}isValidPOITerrain(t){return"DEEP_WATER"!==t&&"SHALLOW_WATER"!==t&&"STONE"!==t&&"COBBLESTONE"!==t&&"SNOW"!==t}isValidNPCTerrain(t){return"DEEP_WATER"!==t&&"STONE"!==t&&"COBBLESTONE"!==t&&"SNOW"!==t&&"SHALLOW_WATER"!==t}checkForVillageAnimalPlacement(t,e,i,a,r){for(let s=-15;s<=15;s++)for(let n=-15;n<=15;n++){let o=t+s,l=e+n,c="".concat(o,",").concat(l),h=a.get(c);if(h&&"water_well"===h.type){let c=Math.abs(s)+Math.abs(n);if(c>=12&&c<=15&&this.isValidNPCTerrain(i))if(this.hasAdjacentPassableSpace(t,e,a)){let i=Math.abs(Math.sin(31*t+37*e+13*o+17*l))%1;if(i<.15){let i=this.selectAnimalTypeWithGrouping(t,e,a);if(i){let s={x:16*t,y:16*e},n=this.createAnimalNPC(i,s);if(n){r.push(n),a.set("".concat(t,",").concat(e),n),console.log("\uD83C\uDFD8️ Generated village ".concat(i," at tile (").concat(t,", ").concat(e,") for village centered at well (").concat(o,", ").concat(l,") with species grouping"));return}console.warn("❌ Failed to create village animal ".concat(i," at tile (").concat(t,", ").concat(e,")"))}else console.log("❌ No animal type selected for village animal at tile (".concat(t,", ").concat(e,")"))}else console.log("\uD83C\uDFB2 Village animal spawn chance failed at tile (".concat(t,", ").concat(e,") - random: ").concat(i.toFixed(3)))}else console.log("❌ Village animal has insufficient adjacent passable space at tile (".concat(t,", ").concat(e,")"))}}}hasAdequateAnimalSpacing(t,e,i,a){for(let r=-2;r<=2;r++)for(let s=-2;s<=2;s++){if(0===r&&0===s)continue;let n=t+r,o=e+s,l="".concat(n,",").concat(o),c=i.get(l);if((null==c?void 0:c.npc)||(null==a?void 0:a(n,o))&&Math.abs(r)+Math.abs(s)<=1)return!1}let r=0;for(let s of[{x:t+1,y:e},{x:t-1,y:e},{x:t,y:e+1},{x:t,y:e-1}]){let t="".concat(s.x,",").concat(s.y);if(!i.has(t)&&!(null==a?void 0:a(s.x,s.y))){let t=this.getTileTypeForCoords(s.x,s.y);this.isValidNPCTerrain(t)&&r++}}return!(r<3)}hasAdjacentPassableSpace(t,e,i,a){let r="".concat(t,",").concat(e);return!i.has(r)}selectAnimalTypeWithGrouping(t,e,i){var a,r;let s=["chicken","pig","sheep"],n={chicken:0,pig:0,sheep:0};for(let r=-4;r<=4;r++)for(let o=-4;o<=4;o++){if(0===r&&0===o)continue;let l=t+r,c=e+o,h="".concat(l,",").concat(c),u=i.get(h);(null==u?void 0:u.npc)&&u.type&&s.includes(u.type)&&(n[u.type]=(null!=(a=n[u.type])?a:0)+1)}let o=[];for(let t of s)if((null!=(r=n[t])?r:0)>0)for(let e=0;e<3;e++)o.push(t);else o.push(t);let l=o[Math.floor(Math.random()*o.length)];return null!=l?l:s[0]}hasAdequatePOISpacing(t,e,i){let a=["water_well","windmill_frame_0","food_market","butcher_market","armory_market","cloth_market","notice_board"];for(let r=-2;r<=2;r++)for(let s=-2;s<=2;s++){if(0===r&&0===s)continue;let n=t+r,o=e+s,l="".concat(n,",").concat(o),c=i.get(l);if((null==c?void 0:c.poi)&&a.includes(c.type))return!1}return!0}generateVillageName(t,e){var i,a;let r="village_".concat(t,"_").concat(e);if(this.villageNamesCache.has(r))return this.villageNamesCache.get(r);let s=Math.floor(Math.random()*this.VILLAGE_NAME_PREFIXES.length),n=Math.floor(Math.random()*this.VILLAGE_NAME_SUFFIXES.length),o=null!=(i=this.VILLAGE_NAME_PREFIXES[s])?i:"Sunny",l=null!=(a=this.VILLAGE_NAME_SUFFIXES[n])?a:"ville",c="".concat(o).concat(l);return this.villageNamesCache.set(r,c),c}generateNoticeText(t){var e,i;let a=["Welcome to ".concat(t,"!"),"Greetings, traveler! You have arrived at ".concat(t,"."),"".concat(t," welcomes you, adventurer!"),"You've discovered the peaceful village of ".concat(t,".")],r=["This village is home to friendly animals and hardworking villagers.","Our markets offer fresh goods and supplies for your journey.","The windmill provides grain for the whole community.","Feel free to explore and meet our animal friends!","The village well provides clean water for all residents.","Trade with our merchants to stock up on supplies.","Our community has thrived here for many generations."],s=t.split("").reduce((t,e)=>t+e.charCodeAt(0),0),n=s%a.length,o=7*s%r.length,l=null!=(e=a[n])?e:a[0],c=null!=(i=r[o])?i:r[0];return"".concat(l,"\n\n").concat(c,"\n\nPress any key to continue...")}hasAdequateTraderSpacing(t,e,i,a){let r="".concat(t,",").concat(e);if(i.has(r))return!1;for(let r=-2;r<=2;r++)for(let s=-2;s<=2;s++){if(0===r&&0===s)continue;let n=t+r,o=e+s,l="".concat(n,",").concat(o),c=i.get(l);if((null==c?void 0:c.npc)||(null==a?void 0:a(n,o))&&Math.abs(r)+Math.abs(s)<=1)return!1}let s=0;for(let r of[{x:t+1,y:e},{x:t-1,y:e},{x:t,y:e+1},{x:t,y:e-1}]){let t="".concat(r.x,",").concat(r.y);if(!i.has(t)&&!(null==a?void 0:a(r.x,r.y))){let t=this.getTileTypeForCoords(r.x,r.y);this.isValidTraderTerrain(t)&&s++}}return s>=3}findUnoccupiedTilesInRadius(t,e,i,a,r){let s=[];for(let n=0;n<360;n+=15){let o=n*Math.PI/180,l=Math.round(t+i*Math.cos(o)),c=Math.round(e+i*Math.sin(o)),h="".concat(l,",").concat(c);a.has(h)||(null==r?void 0:r(l,c))||s.push({x:l,y:c})}return s}isValidTraderTerrain(t){return"DEEP_WATER"!==t&&"STONE"!==t&&"COBBLESTONE"!==t&&"SNOW"!==t}constructor(t){this.VILLAGE_THRESHOLD=.85,this.VILLAGE_NAME_PREFIXES=["Sunny","Happy","Green","Bright","Sweet","Peaceful","Golden","Silver","Crystal","Rainbow","Gentle","Cozy","Warm","Friendly","Cherry","Apple","Maple","Willow","Rose","Daisy","Honey","Sugar","Candy","Bubble","Sparkle","Twinkle","Star","Moon","Sun","Cloud","Blue","Purple","Pink","Orange","White","Spring","Summer","Autumn","Winter","Meadow","River","Lake","Hill","Valley","Garden","Forest","Field","Brook","Grove","Creek"],this.VILLAGE_NAME_SUFFIXES=["ville","town","burg","ham","field","wood","brook","creek","dale","glen","haven","ridge","grove","meadow","valley","hills","springs","gardens","falls","pond","bridge","crossing","hollow","cove","bay","shore","view","heights","point","bend"],this.villageNamesCache=new Map;let e=this.hashSeed(null!=t?t:"default");this.villageNoise=(0,l.fu)(()=>1.1*e),this.structureNoise=(0,l.fu)(()=>2.3*e),this.animalNoise=(0,l.fu)(()=>3.7*e),this.mineNoise=(0,l.fu)(()=>4.9*e)}}class I{generateChunk(t,e,i){let a=[],r=[],s=(r,s)=>{var n,o,l,c,h,u,d;let p=r-t*i,g=s-e*i;if(p<0||p>=i||g<0||g>=i)return!0;let m=null==(n=a[g])?void 0:n[p];if(!m)return!1;let f=(null!=(h=null==(o=m.villageStructures)?void 0:o.length)?h:0)>0,y=null!=(u=null==(l=m.trees)?void 0:l.some(t=>t.getHealth()>0))&&u,S=null!=(d=null==(c=m.cactus)?void 0:c.some(t=>t.getHealth()>0))&&d;return"DEEP_WATER"===m.value||"SHALLOW_WATER"===m.value||"STONE"===m.value||"COBBLESTONE"===m.value||"SNOW"===m.value||y||S||f},n=(t,e)=>{if(s(t,e))return!0;let i="".concat(t,",").concat(e);if(this.villageStructures.has(i)){let t=this.villageStructures.get(i);if(null==t?void 0:t.npc)return!0}for(let i of r)if(i.npc){let a=Math.floor(i.position.x/16),r=Math.floor(i.position.y/16);if(a===t&&r===e)return!0}return!1};for(let r=0;r<i;r++){let s=[];for(let a=0;a<i;a++){let n=t*i+a,o=e*i+r,l=this.generateHeight(n,o),c=this.generateTemperature(n,o),h=this.generateHumidity(n,o),{value:u,flowDirection:d}=this.generateRiver(n,o,l),p=this.getTileTypeFromClimate(l,c,h,u,d),g={x:n,y:o,value:p,height:l,temperature:c,humidity:h,riverValue:u,flowDirection:d};"FOREST"===p?g.trees=this.generateTrees(n,o,1):"GRASS"===p&&(g.trees=this.generateTrees(n,o,.05)),"SAND"===p&&(g.cactus=this.generateCactus(n,o,.05));let m=this.getSpriteIdForTile(p,n,o);m&&(g.spriteId=m),s.push(g)}a.push(s)}for(let s=0;s<i;s++)for(let l=0;l<i;l++){let c=t*i+l,h=e*i+s,u=a[s][l],d=this.villageGenerator.generateVillageStructures(c,h,u.value,this.villageStructures,n);if(d.length>0){for(let r of d){let s=Math.floor(r.position.x/I.TILE_SIZE),n=Math.floor(r.position.y/I.TILE_SIZE),l=s-t*i,c=n-e*i;if(l>=0&&l<i&&c>=0&&c<i){var o;let t=a[c][l];t.villageStructures=null!=(o=t.villageStructures)?o:[],t.villageStructures.push(r),console.log("Added ".concat(r.type," to correct tile (").concat(s,", ").concat(n,") at local (").concat(l,", ").concat(c,")"))}else console.log("Structure ".concat(r.type," at (").concat(s,", ").concat(n,") belongs to different chunk"))}r.push(...d),console.log("Generated ".concat(d.length," structures from tile (").concat(c,", ").concat(h,")"))}}return a}generateHeight(t,e){let i=.02*t,a=.02*e,r=.5*this.heightNoise(i,a);return r+=.25*this.heightNoise(2*i,2*a),r+=.125*this.heightNoise(4*i,4*a),r+=.0625*this.heightNoise(8*i,8*a),r=Math.pow(r=(r+1)/2,1.2)}generateTemperature(t,e){let i=.01*t,a=.01*e,r=.5*this.temperatureNoise(i,a);return r+=.25*this.temperatureNoise(2*i,2*a)+.125*this.temperatureNoise(4*i,4*a),r=(r+1)/2}generateHumidity(t,e){let i=.015*t,a=.015*e,r=.5*this.humidityNoise(i,a);return r+=.25*this.humidityNoise(2*i,2*a)+.125*this.humidityNoise(4*i,4*a),r=(r+1)/2}generateRiver(t,e,i){let a=.03*t,r=.03*e,s=.5*this.riverNoise(a,r);s+=.25*this.riverNoise(2*a,2*r)+.125*this.riverNoise(4*a,4*r);let n=.5*this.riverPathNoise(.05*t,.05*e);n+=.25*this.riverPathNoise(.05*t*2,.05*e*2)+.125*this.riverPathNoise(.05*t*4,.05*e*4),n=(n+1)/2;let o=this.calculateFlowDirection(t,e,i);return s*=Math.pow(1-Math.abs(i-.3),2)*(.5+.5*n),{value:s+=(Math.random()-.5)*.05,flowDirection:o}}calculateFlowDirection(t,e,i){let a=i,r=0;return[{dx:1,dy:0},{dx:1,dy:1},{dx:0,dy:1},{dx:-1,dy:1},{dx:-1,dy:0},{dx:-1,dy:-1},{dx:0,dy:-1},{dx:1,dy:-1}].forEach((i,s)=>{let n=this.generateHeight(t+i.dx,e+i.dy);n<a&&(a=n,r=Math.PI/4*s)}),r}getTileTypeFromClimate(t,e,i,a,r){if(a>.75&&t>.2&&t<.8){let t=.1*Math.sin(2*r);if(Math.abs(a-.75)<.1+t)return"RIVER";if(Math.abs(a-.75)<.1+t+.05)return"SAND"}return t<.35?t<.3?"DEEP_WATER":"SHALLOW_WATER":e<.2?t>.75?"SNOW":t>.7?"STONE":t>.65?"COBBLESTONE":i>.6?"FOREST":i>.3?"GRASS":"STONE":e<.4?t>.65?"SNOW":t>.6?"STONE":t>.55?"COBBLESTONE":i>.7?"FOREST":i>.4?"GRASS":i>.2?"SAND":"STONE":e<.7?t>.6?"STONE":t>.55?"COBBLESTONE":i>.7?"FOREST":i>.4?"GRASS":t<.25&&i>.3?.7>Math.random()?"CLAY":"MUD":t<.25||i<.3?"SAND":"GRASS":t>.5?"STONE":t>.45?"COBBLESTONE":i>.6?"GRASS":t<.25?i>.3?.8>Math.random()?"CLAY":"MUD":"SAND":i<.5||.7>Math.random()?"SAND":"GRASS"}generateTile(t,e){let i=this.generateHeight(t,e),a=this.generateTemperature(t,e),r=this.generateHumidity(t,e),{value:s,flowDirection:n}=this.generateRiver(t,e,i),o=this.getTileTypeFromClimate(i,a,r,s,n),l={x:t,y:e,value:o,height:i,temperature:a,humidity:r,riverValue:s,flowDirection:n};"FOREST"===o?l.trees=this.generateTrees(t,e,1):"GRASS"===o&&(l.trees=this.generateTrees(t,e,.05)),"SAND"===o&&(l.cactus=this.generateCactus(t,e,.05));let c=this.getSpriteIdForTile(o,t,e);return c&&(l.spriteId=c),l}generateTrees(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=[];if(Math.random()>i)return a;let r=t*I.TILE_SIZE+I.TILE_SIZE/2,s=e*I.TILE_SIZE+I.TILE_SIZE/2,n=Math.random(),o=g.YOUNG;return n<.1?o=g.FULL:n<.3&&(o=g.TALL),a.push(new m({x:r,y:s,initialStage:o,growthTimePerStage:36e5})),a}generateCactus(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,a=[];if(Math.random()>i)return a;let r=t*I.TILE_SIZE+I.TILE_SIZE/2,s=e*I.TILE_SIZE+I.TILE_SIZE/2,n=[f.VARIANT_1,f.VARIANT_2,f.VARIANT_3],o=n[Math.floor(Math.random()*n.length)],l=Math.random(),c=0;return l<.2&&(c=1,o===f.VARIANT_2&&l<.1&&(c=2)),a.push(new y({x:r,y:s,variant:o,initialStage:c,growthTimePerStage:6e5})),a}getSpriteIdForTile(t,e,i){switch(t){case"GRASS":if(void 0!==e&&void 0!==i){let t=Math.abs(31*e+17*i)%6,a=Math.floor(t/3);return"/sprites/Ground/TexturedGrass.png#".concat(t%3,",").concat(a)}return"/sprites/Ground/TexturedGrass.png#0,0";case"FOREST":if(void 0!==e&&void 0!==i){let t=Math.abs(31*e+17*i)%6,a=Math.floor(t/3);return"/sprites/Ground/TexturedGrass.png#".concat(t%3,",").concat(a)}return"/sprites/Ground/TexturedGrass.png#0,0";case"SAND":return"/sprites/Ground/Shore.png#0,0";case"SHALLOW_WATER":return"/sprites/Ground/Shore.png#2,0";case"DEEP_WATER":return"/sprites/Ground/Shore.png#4,0";default:return}}constructor(t){this.villageStructures=new Map,this.seed=null!=t?t:Math.random().toString(36).substring(2);let e=h()(this.seed);this.heightNoise=(0,l.fu)(e),this.temperatureNoise=(0,l.fu)(e),this.humidityNoise=(0,l.fu)(e),this.riverNoise=(0,l.fu)(e),this.riverPathNoise=(0,l.fu)(e),this.villageGenerator=new x(this.seed)}}I.TILE_SIZE=16;class w{setPlayer(t){this.player=t}setMoveCallback(t){this.onMoveCallback=t}setDirectionChangeCallback(t){this.onDirectionChangeCallback=t}canMoveToTile(t){if(!t||"DEEP_WATER"===t.value||"SHALLOW_WATER"===t.value||"STONE"===t.value||"COBBLESTONE"===t.value||"SNOW"===t.value||t.trees&&t.trees.length>0&&t.trees.some(t=>t.getHealth()>0))return!1;if(t.villageStructures&&t.villageStructures.length>0){for(let e of t.villageStructures)if(e.poi&&!e.poi.passable||e.npc&&!e.npc.isDead())return!1}return!0}canMoveFromMud(){return Math.random()<1/3}update(t,e){var i,a,r,s;if(this.moveCooldown>0&&(this.moveCooldown-=16,this.moveCooldown>0))return;let n=this.world.getTile(t.position.x/this.TILE_SIZE,t.position.y/this.TILE_SIZE);if((null==n?void 0:n.value)==="MUD"&&!this.canMoveFromMud())return;let o=!1,l=!1,c=null,h={...t.position};e.wasKeyJustPressed("up")||e.isKeyPressed("up")?(h.y-=this.TILE_SIZE,o=!0,c="up"):e.wasKeyJustPressed("down")||e.isKeyPressed("down")?(h.y+=this.TILE_SIZE,o=!0,c="down"):e.wasKeyJustPressed("left")||e.isKeyPressed("left")?(h.x-=this.TILE_SIZE,o=!0,c="left"):(e.wasKeyJustPressed("right")||e.isKeyPressed("right"))&&(h.x+=this.TILE_SIZE,o=!0,c="right");let u=o&&(e.isKeyPressed("up")||e.isKeyPressed("down")||e.isKeyPressed("left")||e.isKeyPressed("right"));if(this.player&&this.player.setMoving(u),o){let e=this.world.getTile(h.x/this.TILE_SIZE,h.y/this.TILE_SIZE);if(this.canMoveToTile(e))t.position=h,l=!0;else{let t="".concat(null!=(r=null==e?void 0:e.value)?r:"UNKNOWN"," tile");if(null==e||null==(i=e.trees)?void 0:i.some(t=>t.getHealth()>0))t+=" (blocked by tree)";else if(null==e||null==(a=e.cactus)?void 0:a.some(t=>t.getHealth()>0))t+=" (blocked by cactus)";else if(null==e?void 0:e.villageStructures){let i=e.villageStructures.filter(t=>{var e;return null!=(e=t.poi&&!t.poi.passable)?e:t.npc&&!t.npc.isDead()});if(i.length>0){let e=i.map(t=>t.poi?t.poi.type:t.npc?t.npc.type:"unknown").join(", ");t+=" (blocked by ".concat(e,")")}}console.log("Movement blocked - cannot move to ".concat(t))}c&&this.onDirectionChangeCallback&&this.onDirectionChangeCallback(c,l)}else this.player&&this.player.setMoving(!1);if(l){t.position.x=Math.round(t.position.x/this.TILE_SIZE)*this.TILE_SIZE,t.position.y=Math.round(t.position.y/this.TILE_SIZE)*this.TILE_SIZE,this.moveCooldown=this.moveDelay;let e=this.world.getTile(t.position.x/this.TILE_SIZE,t.position.y/this.TILE_SIZE),i=null!=(s=null==e?void 0:e.value)?s:"UNKNOWN";if((null==e?void 0:e.trees)&&e.trees.length>0){let t=e.trees[0];i+=" (Tree: ".concat(null==t?void 0:t.getHealth(),"/").concat(null==t?void 0:t.getMaxHealth()," HP)")}if((null==e?void 0:e.cactus)&&e.cactus.length>0){let t=e.cactus[0];i+=" (Cactus: ".concat(null==t?void 0:t.getHealth(),"/").concat(null==t?void 0:t.getMaxHealth()," HP)")}if((null==e?void 0:e.villageStructures)&&e.villageStructures.length>0){let t=e.villageStructures.map(t=>t.poi?t.poi.type:t.npc?"".concat(t.npc.type," NPC"):"unknown").join(", ");i+=" (Structures: ".concat(t,")")}console.log("Current tile:",i),this.onMoveCallback&&c&&this.onMoveCallback(c)}}constructor(t){this.TILE_SIZE=I.TILE_SIZE,this.moveCooldown=0,this.moveDelay=120,this.world=t}}class E{getTile(t,e){var i,a;if(!(t<0)&&!(e<0)&&!(t>=this.size)&&!(e>=this.size)){if(null!=(i=this.tiles)[e]||(i[e]=[]),!this.tiles[e][t]){let i=this.chunkX*this.size+t,a=this.chunkY*this.size+e;this.tiles[e][t]=this.generator.generateTile(i,a)}return this.tiles[e][t]}}setTile(t,e,i){var a,r;if(t<0||e<0||t>=this.size||e>=this.size)return;null!=(a=this.tiles)[e]||(a[e]=[]),this.tiles[e][t]=i;let s="".concat(t,",").concat(e);this.entityData.modifiedTiles.set(s,i)}addTree(t,e,i){let a="".concat(t,",").concat(e);this.entityData.trees.set(a,i)}removeTree(t,e){let i="".concat(t,",").concat(e);this.entityData.trees.delete(i)}getTree(t,e){let i="".concat(t,",").concat(e);return this.entityData.trees.get(i)}addCactus(t,e,i){let a="".concat(t,",").concat(e);this.entityData.cactus.set(a,i)}removeCactus(t,e){let i="".concat(t,",").concat(e);this.entityData.cactus.delete(i)}getCactus(t,e){let i="".concat(t,",").concat(e);return this.entityData.cactus.get(i)}getAllTrees(){return this.entityData.trees}getAllCactus(){return this.entityData.cactus}getModifiedTiles(){return this.entityData.modifiedTiles}addNPC(t,e,i){var a;if(t<0||e<0||t>=this.size||e>=this.size)return!1;let r="".concat(t,",").concat(e),s=this.getTile(t,e);return!(!s||this.isTileOccupied(t,e))&&(!i.npc||!!this.hasAdequateNPCSpacing(t,e))&&(this.entityData.npcStructures.set(r,i),s.villageStructures=null!=(a=s.villageStructures)?a:[],s.villageStructures.push(i),!0)}hasAdequateNPCSpacing(t,e){for(let i=-2;i<=2;i++)for(let a=-2;a<=2;a++){if(0===i&&0===a)continue;let r=t+i,s=e+a;if(r<0||r>=this.size||s<0||s>=this.size)continue;let n="".concat(r,",").concat(s),o=this.entityData.npcStructures.get(n);if(null==o?void 0:o.npc)return!1;let l=this.getTile(r,s);if(null==l?void 0:l.villageStructures){for(let t of l.villageStructures)if(t.npc)return!1}}return!0}removeNPC(t,e){if(t<0||e<0||t>=this.size||e>=this.size)return!1;let i="".concat(t,",").concat(e),a=this.getTile(t,e);if(!a)return!1;let r=this.entityData.npcStructures.get(i);return!!r&&(this.entityData.npcStructures.delete(i),a.villageStructures&&(a.villageStructures=a.villageStructures.filter(t=>t!==r),0===a.villageStructures.length&&delete a.villageStructures),!0)}moveNPC(t,e,i,a){var r,s,n;let o="".concat(t,",").concat(e),l="".concat(i,",").concat(a),c=this.entityData.npcStructures.get(o);if(!(null==c?void 0:c.npc))return!1;if(t===i&&e===a)return!0;if(i<0||i>=this.size||a<0||a>=this.size)return!1;let h=this.getTile(i,a);if(!h)return!1;let u="DEEP_WATER"===h.value||"STONE"===h.value||"COBBLESTONE"===h.value||"SNOW"===h.value||"SHALLOW_WATER"===h.value,d=null!=(s=null==(r=h.trees)?void 0:r.some(t=>t.getHealth()>0))&&s;if(u||d||this.isTileOccupied(i,a,c.npc))return!1;this.removeNPC(t,e),this.entityData.npcStructures.set(l,c),h.villageStructures=null!=(n=h.villageStructures)?n:[],h.villageStructures.push(c);let p=this.chunkX*this.size+i,g=this.chunkY*this.size+a;return c.position={x:16*p,y:16*g},c.npc.position={x:16*p,y:16*g},!0}isTileOccupied(t,e,i){var a;let r=this.getTile(t,e);if(!r||"DEEP_WATER"===r.value||"STONE"===r.value||"COBBLESTONE"===r.value||"SNOW"===r.value||"SHALLOW_WATER"===r.value||(null==(a=r.trees)?void 0:a.some(t=>t.getHealth()>0)))return!0;if(r.villageStructures){for(let t of r.villageStructures)if(t.poi&&!t.poi.passable||t.npc&&!t.npc.isDead()&&t.npc!==i)return!0}return!1}getNPC(t,e){let i="".concat(t,",").concat(e);return this.entityData.npcStructures.get(i)}getAllNPCs(){return this.entityData.npcStructures}registerExistingNPC(t,e,i){var a,r;if(t<0||e<0||t>=this.size||e>=this.size)return!1;let s="".concat(t,",").concat(e),n=this.getTile(t,e);return!!n&&!!i.npc&&(null!=(r=null==(a=n.villageStructures)?void 0:a.some(t=>t===i))&&r?(this.entityData.npcStructures.set(s,i),!0):(console.warn("NPC structure ".concat(i.type," not found in tile's village structures at (").concat(t,", ").concat(e,")")),!1))}removeDeadNPC(t,e){var i;if(t<0||e<0||t>=this.size||e>=this.size)return null;let a="".concat(t,",").concat(e),r=this.getTile(t,e);if(!r)return null;let s=this.entityData.npcStructures.get(a);return(null==s||null==(i=s.npc)?void 0:i.isDead())?(this.entityData.npcStructures.delete(a),r.villageStructures&&(r.villageStructures=r.villageStructures.filter(t=>t!==s),0===r.villageStructures.length&&delete r.villageStructures),s):null}hasModifications(){return this.entityData.modifiedTiles.size>0||this.entityData.trees.size>0||this.entityData.cactus.size>0||this.entityData.npcStructures.size>0}constructor(t,e,i,a,r){this.chunkX=t,this.chunkY=e,this.size=i,this.tiles=a,this.generator=r,this.entityData={trees:new Map,cactus:new Map,modifiedTiles:new Map,npcStructures:new Map}}}var M=i(6311);class _{setAnimationSystem(t){this.animationSystem=t}invalidateCache(){this.cacheValid=!1}moveNPCBetweenTiles(t,e,i,a,r){let s=this.getOrCreateChunk(Math.floor(e/_.CHUNK_SIZE),Math.floor(i/_.CHUNK_SIZE)),n=this.getOrCreateChunk(Math.floor(a/_.CHUNK_SIZE),Math.floor(r/_.CHUNK_SIZE)),o=(e%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,l=(i%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,c=(a%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,h=(r%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE;if(n.isTileOccupied(c,h,t.npc)){t.npc&&(t.npc.position={x:e*this.TILE_SIZE,y:i*this.TILE_SIZE},t.position={x:e*this.TILE_SIZE,y:i*this.TILE_SIZE});return}s!==n?(s.removeNPC(o,l),n.addNPC(c,h,t)||(t.npc&&(t.npc.position={x:e*this.TILE_SIZE,y:i*this.TILE_SIZE},t.position={x:e*this.TILE_SIZE,y:i*this.TILE_SIZE}),s.addNPC(o,l,t))):!s.moveNPC(o,l,c,h)&&t.npc&&(t.npc.position={x:e*this.TILE_SIZE,y:i*this.TILE_SIZE},t.position={x:e*this.TILE_SIZE,y:i*this.TILE_SIZE}),this.invalidateCache()}update(t,e,i){this.updateDirtRegeneration(t),this.updateVillageStructures(t,e,i)}updateDirtRegeneration(t){for(let[i,a]of this.visibleTileCache)if("DIRT"===a.value){var e;null!=a.dirtTimer||(a.dirtTimer=0),a.dirtTimer+=1e3*t,a.dirtTimer>=3e4&&(a.value="GRASS",a.dirtTimer=void 0,this.invalidateCache(),console.log("DIRT tile regenerated to GRASS at (".concat(a.x,", ").concat(a.y,")")))}}updateVillageStructures(t,e,i){if(!e)return;this.currentPlayerPosition=e,this.movementIntentions.clear();let a=this.camera,r=I.TILE_SIZE,s=Math.max(Math.ceil(a.viewWidth/r)+5,Math.ceil(a.viewHeight/r)+5)/2,n=[],o=[],l=[];for(let t of this.chunks.values())for(let[i,a]of t.getAllNPCs())if(a.npc&&!a.npc.isDead()&&(n.push(a.npc),Math.sqrt(Math.pow(a.npc.position.x-e.x,2)+Math.pow(a.npc.position.y-e.y,2))/this.TILE_SIZE<=s)){let e=i.split(",").map(Number);2===e.length&&l.push({npc:a.npc,structure:a,tileX:t.chunkX*_.CHUNK_SIZE+e[0],tileY:t.chunkY*_.CHUNK_SIZE+e[1]})}for(let[t,e]of this.visibleTileCache)if(e.villageStructures)for(let t of e.villageStructures)t.poi&&(t.type.includes("market")||t.type.includes("windmill"))&&o.push(t.position);for(let[e,i]of this.visibleTileCache)if(i.villageStructures)for(let e of i.villageStructures)e.poi&&e.poi.update(t);for(let t of l){let{npc:a}=t,r=null!=e?e:{x:0,y:0},s=null!=i?i:[],o=n.filter(t=>t!==a&&Math.sqrt(Math.pow(t.position.x-a.position.x,2)+Math.pow(t.position.y-a.position.y,2))/16<=10),l=a.getMovementIntention(r,s,o);if(l){let t=Math.floor(l.x/this.TILE_SIZE),e=Math.floor(l.y/this.TILE_SIZE),i="".concat(t,",").concat(e);this.movementIntentions.set(i,a)}}for(let a of l){let{npc:r,structure:s,tileX:l,tileY:c}=a,h=null!=e?e:{x:0,y:0},u=null!=i?i:[],d=n.filter(t=>t!==r&&Math.sqrt(Math.pow(t.position.x-r.position.x,2)+Math.pow(t.position.y-r.position.y,2))/16<=10),p=o.filter(t=>Math.sqrt(Math.pow(t.x-r.position.x,2)+Math.pow(t.y-r.position.y,2))/16<=15),g=Math.floor(r.position.x/this.TILE_SIZE),m=Math.floor(r.position.y/this.TILE_SIZE);r.update(t,h,u,d,p);let f=Math.floor(r.position.x/this.TILE_SIZE),y=Math.floor(r.position.y/this.TILE_SIZE);(g!==f||m!==y)&&this.moveNPCBetweenTiles(s,g,m,f,y),r.breedingRequest&&this.handleBreedingRequest(r)}}render(t,e){for(let[i,a]of(this.lastCameraX===e.position.x&&this.lastCameraY===e.position.y&&this.lastViewWidth===e.viewWidth&&this.lastViewHeight===e.viewHeight&&this.cacheValid||(this.updateVisibleTileCache(e,t),this.lastCameraX=e.position.x,this.lastCameraY=e.position.y,this.lastViewWidth=e.viewWidth,this.lastViewHeight=e.viewHeight,this.cacheValid=!0),this.visibleTileCache)){let r=i.split(",").map(Number);if(2!==r.length||void 0===r[0]||void 0===r[1])continue;let s=r[0],n=r[1],o=e.worldToScreen(s*this.TILE_SIZE,n*this.TILE_SIZE);this.renderTile(t,a,o.x,o.y)}}updateVisibleTileCache(t,e){this.visibleTileCache.clear();let i=Math.floor(t.position.x/this.TILE_SIZE)-2,a=Math.floor(t.position.y/this.TILE_SIZE)-2,r=Math.ceil(e.canvas.width/this.TILE_SIZE)+4,s=Math.ceil(e.canvas.height/this.TILE_SIZE)+4;for(let t=0;t<=s;t++)for(let e=0;e<=r;e++){let r=i+e,s=a+t,n=this.getTile(r,s),o="".concat(r,",").concat(s);this.visibleTileCache.set(o,n)}}renderTile(t,e,i,a){let r=i-this.TILE_SIZE/2,s=a-this.TILE_SIZE/2;if(t.fillStyle=this.getTileColor(e.value),t.fillRect(r+1,s+1,this.TILE_SIZE-2,this.TILE_SIZE-2),e.spriteId&&this.spriteGenerator.renderSprite(t,e.spriteId,r+1,s+1),e.villageStructures){for(let i of e.villageStructures)i.poi&&i.poi.render(t,r+1,s+1);for(let i of e.villageStructures)i.npc&&!i.npc.isDead()&&i.npc.render(t,r+1,s+1)}}getTileColor(t){switch(t){case"DEEP_WATER":return"#00008B";case"SHALLOW_WATER":return"#4169E1";case"RIVER":return"#1E90FF";case"SAND":return"#F4A460";case"GRASS":return"#90EE90";case"MUD":return"#8B4513";case"DIRT":return"#CD853F";case"CLAY":return"#CD7F32";case"FOREST":return"#006400";case"GRAVEL":return"#B8B8B8";case"COBBLESTONE":return"#A9A9A9";case"STONE":return"#808080";case"SNOW":return"#FFFFFF";case"PLAYER":return"transparent";default:return"#000000"}}chunkKey(t,e){return"".concat(t,",").concat(e)}getOrCreateChunk(t,e){let i=this.chunkKey(t,e),a=this.chunks.get(i);if(!a){let r=this.generator.generateChunk(t,e,_.CHUNK_SIZE);a=new E(t,e,_.CHUNK_SIZE,r,this.generator),this.chunks.set(i,a),this.animationSystem&&(this.registerChunkTrees(a,r),this.registerChunkCactus(a,r),this.registerChunkVillageStructures(a,r))}return a}registerChunkTrees(t,e){if(this.animationSystem){for(let t of e)for(let e of t)if(e.trees)for(let t of e.trees){let i="".concat(e.x,",").concat(e.y);this.animationSystem.addTree(i,t)}}}registerChunkCactus(t,e){if(this.animationSystem){for(let t of e)for(let e of t)if(e.cactus)for(let t of e.cactus){let i="".concat(e.x,",").concat(e.y);this.animationSystem.addCactus(i,t)}}}registerChunkVillageStructures(t,e){for(let i of e)for(let e of i)if(e.villageStructures){let i=0,a=0;for(let t of e.villageStructures)t.npc&&i++,t.poi&&a++;for(let r of(i+a>1&&(console.error("[ERROR] Tile (".concat(e.x,",").concat(e.y,") has ").concat(i," NPCs and ").concat(a," POIs - violates one-entity-per-tile rule!")),console.error("[ERROR] Structures:",e.villageStructures.map(t=>t.type))),e.villageStructures)){if(r.npc){r.npc.setTileCollisionCallback(t=>{let e=Math.floor(t.x/this.TILE_SIZE),i=Math.floor(t.y/this.TILE_SIZE);return this.isTileOccupiedByOthers(e,i,r.npc)}),r.npc.setSpeculativeMovementCallback((t,e)=>{let i=Math.floor(t.x/this.TILE_SIZE),a=Math.floor(t.y/this.TILE_SIZE);return this.checkSpeculativeMovement(i,a,e)});let e=Math.floor(r.npc.position.x/this.TILE_SIZE),i=Math.floor(r.npc.position.y/this.TILE_SIZE),a=(e%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,s=(i%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE;t.registerExistingNPC(a,s,r)?console.log("Successfully registered existing NPC ".concat(r.type," at local position (").concat(a,", ").concat(s,") in chunk (").concat(t.chunkX,", ").concat(t.chunkY,"). NPC world pos: (").concat(r.npc.position.x,", ").concat(r.npc.position.y,"), tile: (").concat(e,", ").concat(i,")")):(console.warn("Failed to register existing NPC ".concat(r.type," at local position (").concat(a,", ").concat(s,") in chunk (").concat(t.chunkX,", ").concat(t.chunkY,"). NPC world pos: (").concat(r.npc.position.x,", ").concat(r.npc.position.y,"), tile: (").concat(e,", ").concat(i,")")),t.getAllNPCs().set("".concat(a,",").concat(s),r))}r.poi&&console.log("Village POI ".concat(r.type," registered at ").concat(e.x,",").concat(e.y))}}}getTile(t,e){let i=Math.floor(t/_.CHUNK_SIZE),a=Math.floor(e/_.CHUNK_SIZE),r=(t%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,s=(e%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,n=this.getOrCreateChunk(i,a),o=n.getTile(r,s);if(!o){let i=this.generator.generateTile(t,e);return n.setTile(r,s,i),i}return o}getPOIAt(t,e){let i=this.getTile(t,e);if(null==i?void 0:i.villageStructures){for(let t of i.villageStructures)if(t.poi)return t.poi}return null}getNPCAt(t,e){let i=this.getTile(t,e);if(null==i?void 0:i.villageStructures){for(let t of i.villageStructures)if(t.npc&&!t.npc.isDead())return t.npc}return null}removeDeadNPCAt(t,e){let i=Math.floor(t/_.CHUNK_SIZE),a=Math.floor(e/_.CHUNK_SIZE),r=this.getOrCreateChunk(i,a),s=(t%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,n=(e%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,o=r.removeDeadNPC(s,n);return(null==o?void 0:o.npc)?(this.invalidateCache(),o.npc.getDropItems()):[]}setTile(t,e,i){let a=Math.floor(t/_.CHUNK_SIZE),r=Math.floor(e/_.CHUNK_SIZE),s=(t%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,n=(e%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,o=this.getOrCreateChunk(a,r),l=o.getTile(s,n);l&&(l.prevValue=l.value,l.value=i,l.interacted=!0,o.setTile(s,n,l)),this.invalidateCache()}setPlayerPosition(t,e,i,a){let r=this.getTile(t,e);if(r){var s;r.value=null!=(s=r.prevValue)?s:this.generator.generateTile(t,e).value,r.interacted=!1}let n=this.getTile(i,a);n&&(n.prevValue=n.value,n.value="PLAYER",n.interacted=!0),this.invalidateCache()}getVisibleChunks(t,e,i,a){let r=I.TILE_SIZE,s=Math.floor(t/r),n=Math.floor(e/r),o=Math.ceil((t+i)/r),l=Math.ceil((e+a)/r),c=[];for(let t=Math.floor(n/_.CHUNK_SIZE);t<=Math.floor(l/_.CHUNK_SIZE);t++)for(let e=Math.floor(s/_.CHUNK_SIZE);e<=Math.floor(o/_.CHUNK_SIZE);e++)c.push(this.getOrCreateChunk(e,t));return c}isTileOccupiedByOthers(t,e,i){var a;let r=Math.floor(t/_.CHUNK_SIZE),s=Math.floor(e/_.CHUNK_SIZE),n=(t%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,o=(e%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,l=this.chunks.get(this.chunkKey(r,s));if(!l)return!1;let c=l.getTile(n,o);if(!c||"DEEP_WATER"===c.value||"STONE"===c.value||"COBBLESTONE"===c.value||"SNOW"===c.value||"SHALLOW_WATER"===c.value||(null==(a=c.trees)?void 0:a.some(t=>t.getHealth()>0)))return!0;if(c.villageStructures){for(let t of c.villageStructures)if(t.poi&&!t.poi.passable||t.npc&&!t.npc.isDead()&&t.npc!==i)return!0}if(this.currentPlayerPosition){let i=Math.floor(this.currentPlayerPosition.x/this.TILE_SIZE),a=Math.floor(this.currentPlayerPosition.y/this.TILE_SIZE);if(i===t&&a===e)return!0}return!1}checkSpeculativeMovement(t,e,i){let a=Math.floor(t/_.CHUNK_SIZE),r=Math.floor(e/_.CHUNK_SIZE),s=(t%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,n=(e%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,o=this.chunks.get(this.chunkKey(a,r));if(!o)return!1;let l=o.getTile(s,n);if(!(null==l?void 0:l.villageStructures))return!1;let c=null;for(let t of l.villageStructures)if(t.npc&&!t.npc.isDead()&&t.npc!==i){c=t.npc;break}if(!c)return!1;let h=Math.floor(i.position.x/this.TILE_SIZE),u=Math.floor(i.position.y/this.TILE_SIZE),d="".concat(h,",").concat(u),p=Math.floor(c.position.x/this.TILE_SIZE),g=Math.floor(c.position.y/this.TILE_SIZE),m="".concat(p,",").concat(g),f=this.movementIntentions.get(d),y=this.movementIntentions.get("".concat(t,",").concat(e));if(f===c&&y===i)return!0;let S=!1;for(let[t,e]of this.movementIntentions)if(e===c&&t!==m){S=!0;break}return!!S}handleBreedingRequest(t){let e=t.breedingRequest;if(e){try{let t=new T({type:e.offspringType,position:e.offspringPosition,aggressive:!1}),a=Math.floor(e.offspringPosition.x/this.TILE_SIZE),r=Math.floor(e.offspringPosition.y/this.TILE_SIZE),s=Math.floor(a/_.CHUNK_SIZE),n=Math.floor(r/_.CHUNK_SIZE),o=(a%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,l=(r%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,c=this.getOrCreateChunk(s,n),h=c.getTile(o,l);if(h&&!this.isTileOccupiedByOthers(a,r)){var i;let a={type:e.offspringType,position:e.offspringPosition,npc:t};t.setTileCollisionCallback(e=>{let i=Math.floor(e.x/this.TILE_SIZE),a=Math.floor(e.y/this.TILE_SIZE);return this.isTileOccupiedByOthers(i,a,t)}),t.setSpeculativeMovementCallback((t,e)=>{let i=Math.floor(t.x/this.TILE_SIZE),a=Math.floor(t.y/this.TILE_SIZE);return this.checkSpeculativeMovement(i,a,e)}),h.villageStructures=null!=(i=h.villageStructures)?i:[],h.villageStructures.push(a),c.getAllNPCs().set("".concat(o,",").concat(l),a)}}catch(t){console.error("❌ [BREEDING ERROR] Failed to create offspring:",t)}t.breedingRequest=void 0}}constructor(t,e){this.TILE_SIZE=I.TILE_SIZE,this.chunks=new Map,this.visibleTileCache=new Map,this.lastCameraX=0,this.lastCameraY=0,this.lastViewWidth=0,this.lastViewHeight=0,this.cacheValid=!1,this.movementIntentions=new Map,this.generator=null!=e?e:new I,this.spriteGenerator=new M.N,this.camera=t}}_.CHUNK_SIZE=16;class C{async loadPixelFont(){try{let t=new FontFace("Press Start 2P","url(https://fonts.gstatic.com/s/pressstart2p/v14/e3t4euO8T-267oIAQAu6jDQyK3nVivM.woff2)");await t.load(),document.fonts.add(t),this.fontLoaded=!0,console.log("Press Start 2P font loaded successfully")}catch(t){console.warn("Failed to load Press Start 2P font, using fallback:",t),this.fontLoaded=!1}}setInventory(t){this.inventory=t}showTextBox(t){this.textBox={...t,visible:!0}}hideTextBox(){this.textBox.visible=!1}isTextBoxVisible(){return this.textBox.visible}toggleInventoryUI(){this.inventoryUIVisible=!this.inventoryUIVisible,console.log("Inventory UI ".concat(this.inventoryUIVisible?"opened":"closed"))}isInventoryUIVisible(){return this.inventoryUIVisible}generateNoticeText(t){let e=["Welcome to ".concat(t,"!"),"Greetings, traveler! You have arrived at ".concat(t,"."),"".concat(t," welcomes you, adventurer!"),"You've discovered the peaceful village of ".concat(t,".")],i=["This village is home to friendly animals and hardworking villagers.","Our markets offer fresh goods and supplies for your journey.","The windmill provides grain for the whole community.","Feel free to explore and meet our animal friends!","The village well provides clean water for all residents.","Trade with our merchants to stock up on supplies.","Our community has thrived here for many generations."],a=e[Math.floor(Math.random()*e.length)],r=i[Math.floor(Math.random()*i.length)];return"".concat(a,"\n\n").concat(r,"\n\nPress any key to continue...")}render(){this.renderInventory(),this.inventoryUIVisible&&this.renderInventoryUI(),this.textBox.visible&&this.renderTextBox()}renderInventory(){if(!this.inventory)return;let t=this.canvas,e=this.ctx,i=this.inventory.getSelectedSlot(),a=t.width-74-15,r=(t.height-538)/2;this.drawBubble(e,a,r,74,538,8,"#f8f9fa","#dee2e6");for(let t=0;t<9;t++){let s=a+12,n=r+12+58*t,o=this.inventory.getItem(t),l=t===i;this.renderInventorySlot(e,s,n,50,o,l,t+1)}}renderInventorySlot(t,e,i,a,r,s,n){if(this.drawBubble(t,e,i,a,a,4,s?"#e3f2fd":"#ffffff",s?"#2196f3":"#bdc3c7"),t.save(),t.fillStyle="#666666",t.font=this.fontLoaded?'6px "Press Start 2P"':"10px Arial",t.textAlign="left",t.textBaseline="top",t.fillText(n.toString(),e+2,i+2),t.restore(),r&&r.quantity>0){let s=this.getItemColor(r.type),n=e+a/2,o=i+a/2,l=.25*a;if(t.save(),t.fillStyle=s,t.beginPath(),t.arc(n,o,l,0,2*Math.PI),t.fill(),t.strokeStyle="#333333",t.lineWidth=1,t.stroke(),t.restore(),r.quantity>1){t.save(),t.fillStyle="#ffffff",t.strokeStyle="#000000",t.lineWidth=1,t.font=this.fontLoaded?'5px "Press Start 2P"':"8px Arial",t.textAlign="right",t.textBaseline="bottom";let s=r.quantity.toString(),n=e+a-2,o=i+a-2;t.strokeText(s,n,o),t.fillText(s,n,o),t.restore()}}}getItemColor(t){var e;return null!=(e=({wood:"#8d6e63",stone:"#607d8b",wheat:"#ffc107",water:"#2196f3",cactus_fruit:"#4caf50",meat:"#f44336",wool:"#ffffff",egg:"#fff9c4",milk:"#f5f5f5"})[t])?e:"#9e9e9e"}renderInventoryUI(){if(!this.inventoryUIVisible)return;let t=this.canvas,e=this.ctx,i=t.width-74-15,a=i-40,r=(i-a)/2,s=(t.height-538)/2;this.drawBubble(e,r,s,a,538,15,"#f8f9fa","#dee2e6"),e.fillStyle="#2c3e50",e.font=this.fontLoaded?'12px "Press Start 2P"':"bold 16px Arial",e.textAlign="center",e.textBaseline="middle",e.fillText("Inventory Details",r+a/2,s+30),e.fillStyle="#34495e",e.font=this.fontLoaded?'8px "Press Start 2P"':"14px Arial",e.fillText("Press E to close",r+a/2,s+538-30)}renderTextBox(){var t;if(!this.textBox.visible)return;let e=this.canvas,i=this.ctx,a=e.height-140-20,r=e.width-74-15,s=r-40,n=(r-s)/2;this.drawBubble(i,n,a,s,140,15);let o=this.fontLoaded?'12px "Press Start 2P"':"bold 16px Arial",l=this.fontLoaded?'8px "Press Start 2P"':"14px Arial",c=this.fontLoaded?'7px "Press Start 2P"':"12px Arial",h=null!=(t=this.textBox.title)?t:this.textBox.villageName?"".concat(this.textBox.villageName," Notice Board"):"Notice Board";i.fillStyle="#2c3e50",i.font=o,i.textAlign="center",i.textBaseline="middle",i.fillText(h,n+s/2,a+30);let u=this.textBox.text,d="Press any key to continue...",p=u;u.includes(d)&&(p=(p=u.replace(d,"").trim()).replace(/\n+$/,"").replace(/\.{3}$/,""));let g=this.wrapTextWithLineBreaks(p,s-40,l);i.fillStyle="#34495e",i.font=l,i.textAlign="center",i.textBaseline="top";let m=this.fontLoaded?16:18,f=a+55;g.forEach((t,e)=>{let r=f+e*m;r<a+f+50-m&&i.fillText(t,n+s/2,r)}),i.fillStyle="#7f8c8d",i.font=c,i.textAlign="center",i.textBaseline="bottom",i.fillText(d,n+s/2,a+140-15)}drawBubble(t,e,i,a,r,s){let n=arguments.length>6&&void 0!==arguments[6]?arguments[6]:"#ffffff",o=arguments.length>7&&void 0!==arguments[7]?arguments[7]:"#bdc3c7";t.save(),t.beginPath(),t.moveTo(e+s,i),t.lineTo(e+a-s,i),t.quadraticCurveTo(e+a,i,e+a,i+s),t.lineTo(e+a,i+r-s),t.quadraticCurveTo(e+a,i+r,e+a-s,i+r),t.lineTo(e+s,i+r),t.quadraticCurveTo(e,i+r,e,i+r-s),t.lineTo(e,i+s),t.quadraticCurveTo(e,i,e+s,i),t.closePath(),t.shadowColor="rgba(0, 0, 0, 0.1)",t.shadowBlur=4,t.shadowOffsetX=2,t.shadowOffsetY=2,t.fillStyle=n,t.fill(),t.shadowColor="transparent",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0,t.strokeStyle=o,t.lineWidth=2,t.stroke(),t.restore()}wrapText(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"14px Arial",a=t.split(" "),r=[],s="";for(let t of(this.ctx.font=i,a)){let i=s+(s?" ":"")+t;this.ctx.measureText(i).width>e&&s?(r.push(s),s=t):s=i}return s&&r.push(s),r}wrapTextWithLineBreaks(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"14px Arial",a=[];for(let r of(this.ctx.font=i,t.split("\n"))){if(""===r.trim()){a.push("");continue}let t=this.wrapText(r.trim(),e,i);a.push(...t)}return a}constructor(t){this.textBox={text:"",visible:!1},this.inventory=null,this.fontLoaded=!1,this.inventoryUIVisible=!1,this.canvas=t,this.ctx=t.getContext("2d"),this.loadPixelFont(),window.addEventListener("keydown",t=>{"e"===t.key.toLowerCase()&&this.toggleInventoryUI()})}}class P{update(t){(this.playerPosition.x!==t.x||this.playerPosition.y!==t.y)&&this.uiManager.isTextBoxVisible()&&this.uiManager.hideTextBox();let e=I.TILE_SIZE,i=Math.round(t.x/e)*e,a=Math.round(t.y/e)*e;this.playerPosition={x:i,y:a},this.position={x:i-this.canvas.width/2,y:a-this.canvas.height/2},this.viewWidth=this.canvas.width,this.viewHeight=this.canvas.height}worldToScreen(t,e){return{x:t-this.position.x,y:e-this.position.y}}screenToWorld(t,e){return{x:t+this.position.x,y:e+this.position.y}}renderUI(){this.uiManager.render()}constructor(t){this.playerPosition={x:0,y:0},this.TILE_SIZE=I.TILE_SIZE,this.canvas=t,this.position={x:0,y:0},this.viewWidth=t.width,this.viewHeight=t.height,this.uiManager=new C(t)}}class k{addTree(t,e){this.trees.set("".concat(t,"_").concat(e.x,"_").concat(e.y),e),this.animatedEntities.add(e)}removeTree(t,e){let i="".concat(t,"_").concat(e.x,"_").concat(e.y);this.trees.delete(i),this.animatedEntities.delete(e)}addCactus(t,e){let i="".concat(t,"_").concat(e.x,"_").concat(e.y);this.cactus.set(i,e),this.animatedEntities.add(e)}removeCactus(t,e){let i="".concat(t,"_").concat(e.x,"_").concat(e.y);this.cactus.delete(i),this.animatedEntities.delete(e)}addAnimatedEntity(t){this.animatedEntities.add(t)}removeAnimatedEntity(t){this.animatedEntities.delete(t)}update(t){for(let e of this.animatedEntities)e.update(t)}render(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;for(let a of this.getVisibleTrees(e)){let r=Math.floor(a.x/16),s=Math.floor(a.y/16),n=16*r,o=16*s,l=e.worldToScreen(n,o),c=l.x-8+1,h=l.y-8+1;c>=-16&&c<=t.canvas.width+16&&h>=-16&&h<=t.canvas.height+16&&a.renderAtScreenPosition(t,c,h,i)}for(let a of this.getVisibleCactus(e)){let r=Math.floor(a.x/16),s=Math.floor(a.y/16),n=16*r,o=16*s,l=e.worldToScreen(n,o),c=l.x-8+1,h=l.y-8+1;if(!a.isSpriteLoaded()){console.warn("\uD83C\uDF35 Cactus sprite not loaded at (".concat(r,", ").concat(s,") - world (").concat(a.x,", ").concat(a.y,")"));continue}c>=-16&&c<=t.canvas.width+16&&h>=-16&&h<=t.canvas.height+16&&a.renderAtScreenPosition(t,c,h,i)}}getVisibleTrees(t){let e=t.position.x-32,i=t.position.y-32,a=t.position.x+t.viewWidth+32,r=t.position.y+t.viewHeight+32;return this.getTreesInArea(e,i,a,r)}getVisibleCactus(t){let e=t.position.x-32,i=t.position.y-32,a=t.position.x+t.viewWidth+32,r=t.position.y+t.viewHeight+32;return this.getCactusInArea(e,i,a,r)}getTreesInArea(t,e,i,a){let r=[];for(let s of this.trees.values())s.x>=t&&s.x<=i&&s.y>=e&&s.y<=a&&r.push(s);return r}getCactusInArea(t,e,i,a){let r=[];for(let s of this.cactus.values())s.x>=t&&s.x<=i&&s.y>=e&&s.y<=a&&r.push(s);return r}getAllTrees(){return Array.from(this.trees.values())}getAllCactus(){return Array.from(this.cactus.values())}getTreeCount(){return this.trees.size}getCactusCount(){return this.cactus.size}getAnimatedEntityCount(){return this.animatedEntities.size}clear(){this.trees.clear(),this.cactus.clear(),this.animatedEntities.clear()}constructor(){this.trees=new Map,this.cactus=new Map,this.animatedEntities=new Set}}class A{addItem(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;for(let a=0;a<this.maxSlots;a++){let r=this.items[a];if(r&&r.type===t){var i;let s=(null!=(i=r.maxStack)?i:64)-r.quantity;if(s>0){let i=Math.min(e,s);if(r.quantity+=i,e-=i,console.log("Added ".concat(i," ").concat(t," to slot ").concat(a+1,". New quantity: ").concat(r.quantity)),e<=0)return this.logInventoryState(),!0}}}for(;e>0;){let i=this.items.findIndex(t=>null===t);if(-1===i)return console.log("Inventory full! Could not add ".concat(e," ").concat(t)),!1;let a=this.getMaxStackSize(t),r=Math.min(e,a);this.items[i]={id:this.generateItemId(),type:t,quantity:r,maxStack:a},e-=r,console.log("Added ".concat(r," ").concat(t," to slot ").concat(i+1))}return this.logInventoryState(),!0}removeItem(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=e;for(let a=0;a<this.maxSlots;a++){let r=this.items[a];if(r&&r.type===t){let s=Math.min(i,r.quantity);if(r.quantity-=s,i-=s,r.quantity<=0&&(this.items[a]=null),i<=0)return console.log("Removed ".concat(e," ").concat(t," from inventory")),this.logInventoryState(),!0}}return console.log("Could not remove ".concat(e," ").concat(t,". Only removed ").concat(e-i)),this.logInventoryState(),!1}selectSlot(t){if(t>=0&&t<this.maxSlots){this.selectedSlot=t;let e=this.items[t];e?console.log("Selected slot ".concat(t+1,": ").concat(e.quantity,"x ").concat(e.type)):console.log("Selected slot ".concat(t+1,": Empty"))}}getSelectedItem(){var t;return null!=(t=this.items[this.selectedSlot])?t:null}getSelectedSlot(){return this.selectedSlot}getItem(t){if(t>=0&&t<this.maxSlots){var e;return null!=(e=this.items[t])?e:null}return null}isEmpty(){return this.items.every(t=>null===t)}getItemCount(t){return this.items.filter(e=>(null==e?void 0:e.type)===t).reduce((t,e)=>{var i;return t+(null!=(i=null==e?void 0:e.quantity)?i:0)},0)}logInventoryState(){console.log("=== INVENTORY STATE ==="),this.items.forEach((t,e)=>{let i=e===this.selectedSlot?"→":" ";t?console.log("".concat(i," Slot ").concat(e+1,": ").concat(t.quantity,"x ").concat(t.type)):console.log("".concat(i," Slot ").concat(e+1,": Empty"))}),console.log("=====================")}generateItemId(){return"item_".concat(Date.now(),"_").concat(Math.random().toString(36).substring(2,9))}getMaxStackSize(t){var e;return null!=(e=({wood:64,cactus:64,stone:64,chicken_meat:64,pork:64,mutton:64,wool:64})[t])?e:64}constructor(){this.selectedSlot=0,this.maxSlots=9,this.items=Array(9).fill(null)}}class b{async loadSprite(){try{this.sprite=new Image;let t=(0,u.O)("/sprites/Characters/Monsters/Demons/RedDemon.png");console.log("Loading player sprite from:",t),this.sprite.src=t,await new Promise((e,i)=>{if(!this.sprite)return void i(Error("Sprite is null"));this.sprite.onload=()=>{console.log("Player sprite loaded successfully!"),this.isLoaded=!0,e()},this.sprite.onerror=()=>{console.error("Failed to load player sprite from:",t),this.loadingFailed=!0,i(Error("Failed to load player sprite: PurpleDemon.png"))}})}catch(t){console.error("Failed to load player sprite:",t)}}update(t){this.updateAnimation(t),this.updateAttackAnimation(t)}updateAnimation(t){if(this.isLoaded){if(this.isAttacking)return void this.updateAttackAnimationFrames(t);if(this.lastFrameTime+=1e3*t,this.isMoving){let t=this.animationDuration/4;this.lastFrameTime>=t&&(this.currentFrame=(this.currentFrame+1)%4,this.lastFrameTime=0)}else this.currentFrame=0,this.lastFrameTime=0}}updateAttackAnimationFrames(t){this.attackLastFrameTime+=1e3*t;let e=this.attackAnimationDuration/this.attackFrameCount;this.attackLastFrameTime>=e&&(this.attackCurrentFrame=(this.attackCurrentFrame+1)%this.attackFrameCount,this.attackLastFrameTime=0)}updateAttackAnimation(t){this.isAttacking&&(this.attackAnimationTimer+=1e3*t,this.attackAnimationTimer>=this.attackAnimationDuration&&(this.isAttacking=!1,this.attackAnimationTimer=0,this.attackCurrentFrame=0,this.attackLastFrameTime=0,this.currentFrame=0,console.log("Attack animation completed - returning to movement animation")))}setPosition(t){this.position={...t}}setDirection(t){this.lastDirection=t}setMoving(t){this.isMoving=t,t||(this.currentFrame=0)}startAttack(){this.isAttacking=!0,this.attackAnimationTimer=0,this.attackCurrentFrame=0,this.attackLastFrameTime=0,this.currentFrame=0,console.log("Starting attack animation")}getFacingPosition(t){switch(this.lastDirection){case"up":return{x:this.position.x,y:this.position.y-t};case"down":default:return{x:this.position.x,y:this.position.y+t};case"left":return{x:this.position.x-t,y:this.position.y};case"right":return{x:this.position.x+t,y:this.position.y}}}render(t,e,i){if(!this.isLoaded||!this.sprite){this.loadingFailed&&(t.fillStyle="red",t.fillRect(e,i,16,16));return}let a=this.getSpriteIndex(),r=Math.floor(this.sprite.width/16),s=16*Math.floor(a/r);t.drawImage(this.sprite,a%r*16,s,16,16,e,i,16,16),this.health<this.maxHealth&&this.renderHealthBar(t,e,i)}getSpriteIndex(){return this.isAttacking?this.getAttackingBaseIndex()+this.attackCurrentFrame:this.isMoving?this.getWalkingBaseIndex()+this.currentFrame:this.getWalkingBaseIndex()}getWalkingBaseIndex(){switch(this.lastDirection){case"down":default:return 0;case"up":return 6;case"right":return 12;case"left":return 18}}getAttackingBaseIndex(){switch(this.lastDirection){case"down":default:return 24;case"up":return 30;case"right":return 36;case"left":return 42}}renderHealthBar(t,e,i){let a=this.health/this.maxHealth;t.fillStyle="red",t.fillRect(e+1,i-4,14,2),t.fillStyle="green",t.fillRect(e+1,i-4,14*a,2)}takeDamage(t){this.health=Math.max(0,this.health-t),console.log("Player took ".concat(t," damage. Health: ").concat(this.health,"/").concat(this.maxHealth))}heal(t){this.health=Math.min(this.maxHealth,this.health+t),console.log("Player healed ".concat(t,". Health: ").concat(this.health,"/").concat(this.maxHealth))}addToInventory(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this.inventory.addItem(t,e)}removeFromInventory(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this.inventory.removeItem(t,e)}selectInventorySlot(t){this.inventory.selectSlot(t)}getSelectedItem(){return this.inventory.getSelectedItem()}getSelectedSlot(){return this.inventory.getSelectedSlot()}getInventoryItems(){let t=[];for(let e=0;e<9;e++)t.push(this.inventory.getItem(e));return t}openInventory(){console.log("=== PLAYER INVENTORY ==="),this.inventory.logInventoryState()}getHealthPercentage(){return this.health/this.maxHealth}isDead(){return this.health<=0}isPlayerSpriteLoaded(){return this.isLoaded}constructor(t){var e,i;this.lastDirection="down",this.sprite=null,this.isLoaded=!1,this.loadingFailed=!1,this.currentFrame=0,this.lastFrameTime=0,this.animationDuration=800,this.isMoving=!1,this.isAttacking=!1,this.attackAnimationTimer=0,this.attackCurrentFrame=0,this.attackLastFrameTime=0,this.attackAnimationDuration=600,this.attackFrameCount=4,this.position={...t.position},this.health=null!=(e=t.health)?e:100,this.maxHealth=this.health,this.attackDamage=null!=(i=t.attackDamage)?i:5,this.inventory=new A,this.loadSprite()}}class D{getVillageScore(t){var e;return null!=(e=this.villageScores.get(t))?e:null}initializeVillage(t,e){this.villageScores.has(t)||(this.villageScores.set(t,{villageId:t,villageName:e,score:0,maxScore:this.maxScorePerVillage}),console.log("\uD83C\uDFD8️ Initialized score tracking for village: ".concat(e," (").concat(t,")")))}addScore(t,e,i){let a=this.villageScores.get(t);if(!a)return void console.warn("Cannot add score to unknown village: ".concat(t));let r=a.score;a.score=Math.max(-50,Math.min(a.maxScore,a.score+e)),console.log("\uD83C\uDFC6 Score ".concat(e>0?"+":"").concat(e," for ").concat(a.villageName,": ").concat(r," → ").concat(a.score," (").concat(i,")"))}getTraderComment(t){let e=this.villageScores.get(t);if(!e)return"I don't know you, stranger.";let i=this.rpgComments.filter(t=>e.score>=t.minScore&&e.score<=t.maxScore);if(0===i.length)return"I don't know you, stranger.";let a=Math.floor(Math.random()*i.length);return i[a].text}getScoreSummary(){return Array.from(this.villageScores.values())}findNearestVillage(t){let e=Math.floor(t.x/16),i=Math.floor(t.y/16),a=Math.floor(e/50),r=Math.floor(i/50),s="village_".concat(a,"_").concat(r);return this.villageScores.has(s)?s:null}isInVillageArea(t,e){let i=/village_(-?\d+)_(-?\d+)/.exec(e);if(!i)return!1;let a=parseInt(i[1]),r=parseInt(i[2]),s=Math.floor(t.x/16),n=Math.floor(t.y/16),o=50*a,l=50*r;return s>=o&&s<o+50&&n>=l&&n<l+50}onTaskCompleted(t){this.addScore(t,5,"Task completed")}onMonsterKilled(t){this.addScore(t,1,"Monster defeated")}onAnimalAttacked(t){this.addScore(t,-3,"Attacked village animal")}onTraderAttacked(t){this.addScore(t,-5,"Attacked village trader")}onVillageDefended(t){this.addScore(t,2,"Defended village")}constructor(){this.villageScores=new Map,this.maxScorePerVillage=100,this.rpgComments=[{text:"We don't like your kind around here!",minScore:-50,maxScore:-21,game:"Skyrim"},{text:"I don't know you, and I don't care to know you.",minScore:-50,maxScore:-21,game:"Oblivion"},{text:"Move along, outsider.",minScore:-50,maxScore:-21,game:"Skyrim"},{text:"You're not welcome here, stranger.",minScore:-50,maxScore:-21,game:"Fallout"},{text:"Stay away from me, criminal scum!",minScore:-50,maxScore:-21,game:"Oblivion"},{text:"I've heard about you. Bad news travels fast.",minScore:-20,maxScore:-1,game:"Skyrim"},{text:"Not now, not later, not ever.",minScore:-20,maxScore:-1,game:"Oblivion"},{text:"I got nothing to say to you.",minScore:-20,maxScore:-1,game:"Fallout"},{text:"I don't have time for this.",minScore:-20,maxScore:-1,game:"Skyrim"},{text:"Keep walking, troublemaker.",minScore:-20,maxScore:-1,game:"Oblivion"},{text:"What do you want?",minScore:0,maxScore:19,game:"Skyrim"},{text:"I'm busy right now.",minScore:0,maxScore:19,game:"Oblivion"},{text:"Good day to you.",minScore:0,maxScore:19,game:"Skyrim"},{text:"Hello there, traveler.",minScore:0,maxScore:19,game:"Zelda"},{text:"Can I help you with something?",minScore:0,maxScore:19,game:"Fallout"},{text:"Not much happening around here.",minScore:0,maxScore:19,game:"Skyrim"},{text:"It's a pleasure to meet you!",minScore:20,maxScore:49,game:"Skyrim"},{text:"Well hello there! What can I do for you?",minScore:20,maxScore:49,game:"Oblivion"},{text:"You seem like good people.",minScore:20,maxScore:49,game:"Fallout"},{text:"Hey! Listen! You look like you could use some help.",minScore:20,maxScore:49,game:"Zelda"},{text:"What brings you here, friend?",minScore:20,maxScore:49,game:"Mario"},{text:"You're quite the traveler, aren't you?",minScore:20,maxScore:49,game:"Skyrim"},{text:"Always nice to see a friendly face!",minScore:20,maxScore:49,game:"Oblivion"},{text:"Ah, a friend of the village! Welcome!",minScore:50,maxScore:79,game:"Skyrim"},{text:"You've done good work around here.",minScore:50,maxScore:79,game:"Fallout"},{text:"The whole village speaks well of you.",minScore:50,maxScore:79,game:"Skyrim"},{text:"You're the one who's been helping everyone!",minScore:50,maxScore:79,game:"Oblivion"},{text:"Thank you for all you've done for us.",minScore:50,maxScore:79,game:"Zelda"},{text:"You're a true friend to this community.",minScore:50,maxScore:79,game:"Skyrim"},{text:"The village is lucky to have someone like you.",minScore:50,maxScore:79,game:"Fallout"},{text:"You are the hero this village needed!",minScore:80,maxScore:100,game:"Skyrim"},{text:"A true champion of the people!",minScore:80,maxScore:100,game:"Oblivion"},{text:"Legends will be told of your deeds!",minScore:80,maxScore:100,game:"Skyrim"},{text:"I'm your biggest fan! You're incredible!",minScore:80,maxScore:100,game:"Mario"},{text:"You are the stuff of legend, my friend!",minScore:80,maxScore:100,game:"Zelda"},{text:"The whole realm knows of your heroic deeds!",minScore:80,maxScore:100,game:"Oblivion"},{text:"You're practically a living legend!",minScore:80,maxScore:100,game:"Fallout"}],console.log("\uD83C\uDFC6 Player Score System initialized")}}class N{initializeGame(t){this.player=new b({position:{x:0,y:0},health:100,attackDamage:5}),this.gameState={player:{position:{x:0,y:0},inventory:[],health:100},world:{tiles:[],npcs:[],pois:[]},timestamp:Date.now()},this.camera=new P(this.canvas),this.world=new _(this.camera,new I(t)),this.movement=new w(this.world),this.animationSystem=new k,this.scoreSystem=new D,this.camera.uiManager.setInventory(this.player.inventory),this.world.setAnimationSystem(this.animationSystem),this.movement.setPlayer(this.player),this.movement.setDirectionChangeCallback((t,e)=>{e&&this.player.setPosition(this.gameState.player.position),this.player.setDirection(t),this.logFacingTile()}),this.gameLoop=new n(this.update.bind(this),this.render.bind(this))}start(){this.gameLoop.start()}stop(){this.gameLoop.stop()}update(t){this.controls.update(),this.handlePlayerActions(),this.handleMouseInput(),this.movement.update(this.gameState.player,this.controls),this.player.update(t),this.camera.update(this.gameState.player.position);let e=this.player.getInventoryItems().filter(t=>null!==t);this.world.update(t,this.gameState.player.position,e),this.initializeNearbyVillages(),this.animationSystem.update(t),this.checkCactusDamage(),this.controls.clearJustPressed()}render(){let t=this.canvas.getContext("2d");t&&(t.fillStyle="#000000",t.fillRect(0,0,this.canvas.width,this.canvas.height),this.world.render(t,this.camera),this.renderPlayer(t),this.animationSystem.render(t,this.camera),this.camera.renderUI())}renderPlayer(t){let e=this.canvas.width/2-8,i=this.canvas.height/2-8;this.player.render(t,e,i)}handlePlayerActions(){if(this.camera.uiManager.isTextBoxVisible()&&this.controls.wasAnyKeyPressed())return void this.camera.uiManager.hideTextBox();for(let t=1;t<=9;t++)this.controls.wasKeyJustPressed("slot".concat(t))&&this.player.selectInventorySlot(t-1);this.controls.wasKeyJustPressed("inventory")&&this.player.openInventory(),this.controls.isKeyPressed("up")?this.player.setDirection("up"):this.controls.isKeyPressed("down")?this.player.setDirection("down"):this.controls.isKeyPressed("left")?this.player.setDirection("left"):this.controls.isKeyPressed("right")&&this.player.setDirection("right"),this.controls.wasKeyJustPressed("attack")&&(console.log("Attack key detected - executing attack"),this.player.startAttack(),this.logFacingTile(),this.handleAttack()),this.controls.wasKeyJustPressed("interact")&&(console.log("Interact key detected - executing interact with attack animation"),this.player.startAttack(),this.logFacingTile(),this.handleInteract())}handleMouseInput(){}handleAttack(){let t=this.player.getFacingPosition(I.TILE_SIZE),e=Math.floor(t.x/I.TILE_SIZE),i=Math.floor(t.y/I.TILE_SIZE),a=this.world.getTile(e,i);if(console.log("Player attack damage: ".concat(this.player.attackDamage)),console.log("Attacking tile at (".concat(e,", ").concat(i,"): ").concat(null==a?void 0:a.value)),(null==a?void 0:a.trees)&&a.trees.length>0){let t=a.trees[0];if(t){console.log("Tree health before attack: ".concat(t.getHealth(),"/").concat(t.getMaxHealth()));let a=t.takeDamage(this.player.attackDamage);a.destroyed?(console.log("\uD83C\uDF33 Tree destroyed! Dropped ".concat(a.dropValue," ").concat(a.dropType)),this.player.addToInventory(a.dropType,a.dropValue)&&console.log("✅ Added ".concat(a.dropValue," ").concat(a.dropType," to inventory")),console.log("Tree cut down - now showing broken tree stump at (".concat(e,", ").concat(i,")"))):console.log("Tree took ".concat(this.player.attackDamage," damage. Health: ").concat(t.getHealth(),"/").concat(t.getMaxHealth()))}}else if((null==a?void 0:a.cactus)&&a.cactus.length>0){let t=a.cactus[0];if(t){console.log("Cactus health before attack: ".concat(t.getHealth(),"/").concat(t.getMaxHealth()));let r=t.takeDamage(this.player.attackDamage);if(r.destroyed){console.log("\uD83C\uDF35 Cactus destroyed! Dropped ".concat(r.dropValue," ").concat(r.dropType)),this.player.addToInventory(r.dropType,r.dropValue)&&console.log("✅ Added ".concat(r.dropValue," ").concat(r.dropType," to inventory"));let s="".concat(e,",").concat(i);this.animationSystem.removeCactus(s,t),a.cactus=a.cactus.filter(e=>e!==t),0===a.cactus.length&&(delete a.cactus,a.value="SAND",this.world.invalidateCache(),console.log("Cactus completely removed - tile converted to SAND at (".concat(e,", ").concat(i,")")))}else console.log("Cactus took ".concat(this.player.attackDamage," damage. Health: ").concat(t.getHealth(),"/").concat(t.getMaxHealth()))}}else{let t=this.world.getNPCAt(e,i);if(t){let a=this.scoreSystem.findNearestVillage(this.gameState.player.position);if(a&&this.scoreSystem.isInVillageArea(this.gameState.player.position,a)&&("monster"===t.category?this.scoreSystem.onMonsterKilled(a):"animal"===t.category?this.scoreSystem.onAnimalAttacked(a):"friendly"===t.category&&this.scoreSystem.onTraderAttacked(a)),t.takeDamage(this.player.attackDamage),t.isDead())for(let t of this.world.removeDeadNPCAt(e,i))this.player.addToInventory(t.type,t.quantity)?console.log("✅ Added ".concat(t.quantity," ").concat(t.type," to inventory")):console.log("❌ Inventory full! Could not add ".concat(t.quantity," ").concat(t.type))}else console.log("Nothing to attack in that direction")}}handleInteract(){let t=this.player.getFacingPosition(I.TILE_SIZE),e=Math.floor(t.x/I.TILE_SIZE),i=Math.floor(t.y/I.TILE_SIZE),a=this.world.getTile(e,i);console.log("Interacting with tile at (".concat(e,", ").concat(i,"):"),null==a?void 0:a.value);let r=this.world.getPOIAt(e,i);if((null==r?void 0:r.type)==="notice_board"){var s,n,o,l,c,h;console.log("Interacting with notice board");let t=null!=(l=null==(s=r.customData)?void 0:s.villageName)?l:"Unknown Village",e=null!=(c=null==(n=r.customData)?void 0:n.noticeTitle)?c:"".concat(t," Notice Board"),i=null!=(h=null==(o=r.customData)?void 0:o.noticeText)?h:"Welcome to ".concat(t,"!\n\nPress any key to continue...");this.camera.uiManager.showTextBox({text:i,title:e,villageName:t});return}let u=this.world.getNPCAt(e,i);if(u&&"friendly"===u.category){console.log("Interacting with trader: ".concat(u.type));let t=this.scoreSystem.findNearestVillage(this.gameState.player.position),e="Hello there, traveler.",i="Unknown Village";if(t){let a=this.scoreSystem.getVillageScore(t);a&&(e=this.scoreSystem.getTraderComment(t),i=a.villageName)}this.camera.uiManager.showTextBox({text:e,title:"Trader in ".concat(i),villageName:i});return}(null==a?void 0:a.trees)&&a.trees.length>0?console.log("Interacting with tree - could harvest fruit, check growth, etc."):(null==a?void 0:a.cactus)&&a.cactus.length>0?console.log("Interacting with cactus - could harvest water, check growth, etc."):console.log("Nothing to interact with in that direction")}logFacingTile(){let t=this.player.getFacingPosition(I.TILE_SIZE),e=Math.floor(t.x/I.TILE_SIZE),i=Math.floor(t.y/I.TILE_SIZE),a=this.world.getTile(e,i),r=(null==a?void 0:a.value)||"UNKNOWN";if((null==a?void 0:a.trees)&&a.trees.length>0){let t=a.trees[0];r+=" (Tree: ".concat(null==t?void 0:t.getHealth(),"/").concat(null==t?void 0:t.getMaxHealth()," HP)")}if((null==a?void 0:a.cactus)&&a.cactus.length>0){let t=a.cactus[0];r+=" (Cactus: ".concat(null==t?void 0:t.getHealth(),"/").concat(null==t?void 0:t.getMaxHealth()," HP, Variant: ").concat(null==t?void 0:t.getVariant(),")")}let s=this.world.getNPCAt(e,i);s&&(r+=" (".concat(s.type,": ").concat(s.health,"/").concat(s.maxHealth," HP)")),console.log("Facing tile: ".concat(r))}saveGame(){let t=JSON.stringify(this.gameState);localStorage.setItem("gameState",t)}loadGame(){let t=localStorage.getItem("gameState");t&&(this.gameState=JSON.parse(t))}initializeNearbyVillages(){let t=Math.floor(this.gameState.player.position.x/I.TILE_SIZE),e=Math.floor(this.gameState.player.position.y/I.TILE_SIZE);for(let r=-5;r<=5;r++)for(let s=-5;s<=5;s++){let n=t+r,o=e+s,l=this.world.getPOIAt(n,o);if((null==l?void 0:l.type)==="water_well"){var i,a;let t=null!=(a=null==(i=l.customData)?void 0:i.villageName)?a:"Unknown Village",e=Math.floor(n/50),r=Math.floor(o/50),s="village_".concat(e,"_").concat(r);this.scoreSystem.initializeVillage(s,t)}}}checkCactusDamage(){let t=Math.floor(this.gameState.player.position.x/I.TILE_SIZE),e=Math.floor(this.gameState.player.position.y/I.TILE_SIZE),i=this.world.getTile(t,e);(null==i?void 0:i.cactus)&&i.cactus.length>0&&i.cactus.filter(t=>t.getHealth()>0).length>0&&(console.log("\uD83C\uDF35 Player taking cactus damage! Standing on cactus at (".concat(t,", ").concat(e,")")),this.player.takeDamage(5),this.player.health<=0&&console.log("\uD83D\uDC80 Player died from cactus damage!"));let a=Math.floor(this.gameState.player.position.x/I.TILE_SIZE),r=Math.floor(this.gameState.player.position.y/I.TILE_SIZE);for(let t=-20;t<=20;t++)for(let e=-20;e<=20;e++){let i=a+t,s=r+e,n=this.world.getNPCAt(i,s);if(n&&!n.isDead()){let t=this.world.getTile(i,s);(null==t?void 0:t.cactus)&&t.cactus.length>0&&t.cactus.filter(t=>t.getHealth()>0).length>0&&(console.log("\uD83C\uDF35 ".concat(n.type," taking cactus damage at (").concat(i,", ").concat(s,")")),n.takeDamage(5),n.isDead()&&console.log("\uD83D\uDC80 ".concat(n.type," died from cactus damage!")))}}}constructor(t,e){this.lastPlayerPos={x:0,y:0},this.lastNPCs="",this.lastPOIs="",this.canvas=t,this.controls=new o(t),this.initializeGame(e)}}function F(){let t=(0,r.useRef)(null),e=(0,r.useRef)(null),i=(0,s.useSearchParams)();return(0,r.useEffect)(()=>{let a=()=>{t.current&&(t.current.width=window.innerWidth,t.current.height=window.innerHeight)};if(a(),window.addEventListener("resize",a),t.current){var r;let a=null!=(r=null==i?void 0:i.get("seed"))?r:void 0;e.current=new N(t.current,a),e.current.start()}return()=>{window.removeEventListener("resize",a),e.current&&e.current.stop()}},[i]),(0,a.jsx)("div",{className:"fixed inset-0 bg-gray-900",children:(0,a.jsx)("canvas",{ref:t,className:"w-full h-full block border-2 border-gray-700",style:{display:"block"}})})}function L(){return(0,a.jsx)(r.Suspense,{fallback:(0,a.jsx)("div",{className:"fixed inset-0 bg-gray-900 flex items-center justify-center",children:(0,a.jsx)("div",{className:"text-white text-xl",children:"Loading World Simulator..."})}),children:(0,a.jsx)(F,{})})}},6311:(t,e,i)=>{"use strict";i.d(e,{N:()=>r});var a=i(7013);class r{async loadSprites(){for(let t of r.SPRITE_FILES)try{let e=new Image;e.src=(0,a.O)(t),await new Promise((i,a)=>{e.onload=()=>i(),e.onerror=()=>{let e=Error("Failed to load sprite: ".concat(t));console.error(e.message),a(e)}}),this.spriteImages.set(t,e),this.processSprite(t,e)}catch(e){console.error("Failed to load sprite: ".concat(t),e)}}processSprite(t,e){let i=Math.floor(e.width/r.TILE_SIZE),a=Math.floor(e.height/r.TILE_SIZE);for(let s=0;s<a;s++)for(let a=0;a<i;a++){let i="".concat(t,"#").concat(a,",").concat(s),n={image:e,x:a*r.TILE_SIZE,y:s*r.TILE_SIZE,width:r.TILE_SIZE,height:r.TILE_SIZE};this.sprites.set(i,{id:i,path:t,frames:[n],category:this.getCategoryFromPath(t),tags:this.getTagsFromPath(t)})}}getCategoryFromPath(t){var e;let i=t.split("/");if(i.length<3)return"Unknown";let a=null!=(e=i[1])?e:"";return a.charAt(0).toUpperCase()+a.slice(1)}getTagsFromPath(t){let e=t.split("/"),i=[];if(e[1]&&i.push(e[1].toLowerCase()),e[2]){var a;let t=null!=(a=e[2].split(".")[0])?a:"";t&&i.push(t.toLowerCase())}return i}getSprite(t){return this.sprites.get(t)}getAllSprites(){return Array.from(this.sprites.values())}getSpritesByCategory(t){return this.getAllSprites().filter(e=>e.category===t)}getSpritesByTag(t){return this.getAllSprites().filter(e=>{var i;return null==(i=e.tags)?void 0:i.includes(t)})}renderSprite(t,e,i,a){let r=this.getSprite(e);if(!(null==r?void 0:r.frames[0]))return;let s=r.frames[0];t.drawImage(s.image,s.x,s.y,s.width,s.height,i,a,s.width,s.height)}constructor(){this.sprites=new Map,this.spriteImages=new Map,this.loadSprites()}}r.TILE_SIZE=16,r.SPRITE_FILES=["/sprites/Objects/SwordShort.png","/sprites/Objects/Spear.png","/sprites/Objects/ShortBig.png","/sprites/Objects/FireballProjectile.png","/sprites/Objects/Bullet.png","/sprites/Objects/BallistaBolt.png","/sprites/Objects/Axe.png","/sprites/Objects/ArrowShort.png","/sprites/Objects/ArrowLong.png","/sprites/Animals/Sheep.png","/sprites/Animals/Pig.png","/sprites/Animals/MarineAnimals.png","/sprites/Animals/Horse(32x32).png","/sprites/Animals/HornedSheep.png","/sprites/Animals/Chicken.png","/sprites/Animals/Chick.png","/sprites/Animals/Boar.png","/sprites/Buildings/Wood/Market.png","/sprites/Buildings/Wood/Resources.png","/sprites/Miscellaneous/Well.png","/sprites/Ground/TexturedGrass.png","/sprites/Ground/Shore.png","/sprites/Ground/Grass.png","/sprites/Ground/Cliff.png","/sprites/Ground/Winter.png","/sprites/Miscellaneous/Boat.png","/sprites/Miscellaneous/Chests.png","/sprites/Miscellaneous/Tombstones.png","/sprites/Miscellaneous/StreetSigns.png","/sprites/Miscellaneous/Signs.png","/sprites/Miscellaneous/QuestBoard.png","/sprites/Miscellaneous/Portal.png","/sprites/Miscellaneous/PirateShip.png","/sprites/Miscellaneous/Bridge.png","/sprites/Nature/Cactus.png","/sprites/Nature/Rocks.png","/sprites/Nature/Wheatfield.png","/sprites/Nature/WinterTrees.png","/sprites/Nature/Tumbleweed.png","/sprites/Nature/Trees.png","/sprites/Nature/PineTrees.png","/sprites/Characters/Soldiers/Melee/AxemanTemplate.png","/sprites/Characters/Soldiers/Melee/SwordsmanTemplate.png","/sprites/Characters/Soldiers/Melee/SpearmanTemplate.png","/sprites/Characters/Workers/FarmerTemplate.png","/sprites/Characters/Monsters/Orcs/ArcherGoblin.png","/sprites/Characters/Monsters/Orcs/ClubGoblin.png","/sprites/Characters/Monsters/Orcs/FarmerGoblin.png","/sprites/Characters/Monsters/Orcs/Orc.png","/sprites/Characters/Monsters/Orcs/OrcShaman.png","/sprites/Characters/Monsters/Orcs/SpearGoblin.png","/sprites/Characters/Monsters/Slimes/MegaSlimeBlue.png","/sprites/Characters/Monsters/Slimes/Slime.png"]},7013:(t,e,i)=>{"use strict";function a(t){let e=t.startsWith("/")?t.slice(1):t;return"".concat("/world-sim","/").concat(e)}i.d(e,{O:()=>a})}},t=>{var e=e=>t(t.s=e);t.O(0,[966,309,951,358],()=>e(3779)),_N_E=t.O()}]);