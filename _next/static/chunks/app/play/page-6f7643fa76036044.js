(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[833],{3779:(t,e,i)=>{Promise.resolve().then(i.bind(i,9121))},6311:(t,e,i)=>{"use strict";i.d(e,{N:()=>a});var s=i(7013);class a{async loadSprites(){for(let t of a.SPRITE_FILES)try{let e=new Image;e.src=(0,s.O)(t),await new Promise((i,s)=>{e.onload=()=>i(),e.onerror=()=>{let e=Error("Failed to load sprite: ".concat(t));console.error(e.message),s(e)}}),this.spriteImages.set(t,e),this.processSprite(t,e)}catch(e){console.error("Failed to load sprite: ".concat(t),e)}console.log("Loaded sprites:",Array.from(this.sprites.keys()))}processSprite(t,e){let i=Math.floor(e.width/a.TILE_SIZE),s=Math.floor(e.height/a.TILE_SIZE);for(let r=0;r<s;r++)for(let s=0;s<i;s++){let i="".concat(t,"#").concat(s,",").concat(r),n={image:e,x:s*a.TILE_SIZE,y:r*a.TILE_SIZE,width:a.TILE_SIZE,height:a.TILE_SIZE};this.sprites.set(i,{id:i,path:t,frames:[n],category:this.getCategoryFromPath(t),tags:this.getTagsFromPath(t)})}}getCategoryFromPath(t){var e;let i=t.split("/");if(i.length<3)return"Unknown";let s=null!=(e=i[1])?e:"";return s.charAt(0).toUpperCase()+s.slice(1)}getTagsFromPath(t){let e=t.split("/"),i=[];if(e[1]&&i.push(e[1].toLowerCase()),e[2]){var s;let t=null!=(s=e[2].split(".")[0])?s:"";t&&i.push(t.toLowerCase())}return i}getSprite(t){return this.sprites.get(t)}getAllSprites(){return Array.from(this.sprites.values())}getSpritesByCategory(t){return this.getAllSprites().filter(e=>e.category===t)}getSpritesByTag(t){return this.getAllSprites().filter(e=>{var i;return null==(i=e.tags)?void 0:i.includes(t)})}renderSprite(t,e,i,s){let a=this.getSprite(e);if(!(null==a?void 0:a.frames[0]))return;let r=a.frames[0];t.drawImage(r.image,r.x,r.y,r.width,r.height,i,s,r.width,r.height)}constructor(){this.sprites=new Map,this.spriteImages=new Map,this.loadSprites()}}a.TILE_SIZE=16,a.SPRITE_FILES=["/sprites/Characters/champions/Okomo.png","/sprites/Objects/SwordShort.png","/sprites/Objects/Spear.png","/sprites/Objects/ShortBig.png","/sprites/Objects/FireballProjectile.png","/sprites/Objects/Bullet.png","/sprites/Objects/BallistaBolt.png","/sprites/Objects/Axe.png","/sprites/Objects/ArrowShort.png","/sprites/Objects/ArrowLong.png","/sprites/Animals/Sheep.png","/sprites/Animals/Pig.png","/sprites/Animals/MarineAnimals.png","/sprites/Animals/Horse(32x32).png","/sprites/Animals/HornedSheep.png","/sprites/Animals/Chicken.png","/sprites/Animals/Chick.png","/sprites/Animals/Boar.png","/sprites/Buildings/wood/Barracks.png","/sprites/Buildings/wood/CaveV2.png","/sprites/Buildings/wood/Docks.png","/sprites/Buildings/wood/Houses.png","/sprites/Ground/TexturedGrass.png","/sprites/Ground/Shore.png","/sprites/Ground/Grass.png","/sprites/Ground/Cliff.png","/sprites/Ground/Winter.png","/sprites/Miscellaneous/Boat.png","/sprites/Miscellaneous/Chests.png","/sprites/Miscellaneous/Tombstones.png","/sprites/Miscellaneous/StreetSigns.png","/sprites/Miscellaneous/Signs.png","/sprites/Miscellaneous/QuestBoard.png","/sprites/Miscellaneous/Portal.png","/sprites/Miscellaneous/PirateShip.png","/sprites/Miscellaneous/Bridge.png","/sprites/Nature/Cactus.png","/sprites/Nature/Rocks.png","/sprites/Nature/Wheatfield.png","/sprites/Nature/WinterTrees.png","/sprites/Nature/Tumbleweed.png","/sprites/Nature/Trees.png","/sprites/Nature/PineTrees.png"]},7013:(t,e,i)=>{"use strict";function s(t){let e=t.startsWith("/")?t.slice(1):t;return"".concat("/world-sim","/").concat(e)}i.d(e,{O:()=>s})},9121:(t,e,i)=>{"use strict";i.r(e),i.d(e,{default:()=>L});var s=i(6384),a=i(6636),r=i(4582);class n{start(){this.isRunning||(this.isRunning=!0,this.lastTimestamp=performance.now(),this.accumulator=0,this.gameLoop())}stop(){this.isRunning=!1,null!==this.animationFrameId&&(cancelAnimationFrame(this.animationFrameId),this.animationFrameId=null)}gameLoop(){if(!this.isRunning)return;let t=performance.now(),e=t-this.lastTimestamp;for(this.lastTimestamp=t,this.accumulator+=e,this.frameCount++,this.fpsTimer+=e,this.fpsTimer>=1e3&&(this.currentFPS=this.frameCount,this.frameCount=0,this.fpsTimer=0);this.accumulator>=this.FRAME_DURATION;){let e=t-this.lastUpdateTime>=this.UPDATE_INTERVAL;this.updateCallback(this.FRAME_DURATION/1e3,e),this.accumulator-=this.FRAME_DURATION,e&&(this.lastUpdateTime=t)}this.renderCallback(),this.animationFrameId=requestAnimationFrame(()=>this.gameLoop())}getCurrentFPS(){return this.currentFPS}getTargetFPS(){return this.TARGET_FPS}getGameTime(){return performance.now()}constructor(t,e){this.isRunning=!1,this.lastTimestamp=0,this.animationFrameId=null,this.TARGET_FPS=60,this.FRAME_DURATION=1e3/this.TARGET_FPS,this.accumulator=0,this.frameCount=0,this.fpsTimer=0,this.currentFPS=0,this.lastUpdateTime=0,this.UPDATE_INTERVAL=16.67,this.updateCallback=t,this.renderCallback=e}}class o{setCanvas(t){this.canvas=t,this.setupMouseListeners(t)}setupEventListeners(){window.addEventListener("keydown",t=>{var e;let i=null!=(e=o.keyMap[t.key])?e:t.key.toLowerCase();!this.keyState[i]&&(this.justPressed[i]=!0,(i in o.keyMap||["attack","interact","inventory"].includes(i)||i.startsWith("slot"))&&console.log("Key pressed: ".concat(t.key," → ").concat(i))),this.keyState[i]=!0,this.keys.add(i)}),window.addEventListener("keyup",t=>{var e;let i=null!=(e=o.keyMap[t.key])?e:t.key.toLowerCase();this.keyState[i]=!1,this.keys.delete(i),this.justPressed[i]=!1})}setupMouseListeners(t){t.addEventListener("mousedown",t=>{this.isDragging=!0,this.dragStart={x:t.clientX,y:t.clientY},this.lastMouse={x:t.clientX,y:t.clientY},this.dragDelta={x:0,y:0}}),t.addEventListener("mousemove",t=>{if(this.isDragging&&this.lastMouse){let e=t.clientX-this.lastMouse.x,i=t.clientY-this.lastMouse.y;this.dragDelta.x+=e,this.dragDelta.y+=i,this.lastMouse={x:t.clientX,y:t.clientY}}}),t.addEventListener("mouseup",t=>{this.dragStart&&5>Math.sqrt(Math.pow(t.clientX-this.dragStart.x,2)+Math.pow(t.clientY-this.dragStart.y,2))&&(this.mouseClick={x:t.clientX,y:t.clientY}),this.isDragging=!1,this.dragStart=null,this.lastMouse=null}),t.addEventListener("mouseleave",t=>{this.isDragging=!1,this.dragStart=null,this.lastMouse=null})}update(){this.justPressed={}}getMouseClick(){let t=this.mouseClick;return this.mouseClick=null,t}isKeyPressed(t){var e;return null!=(e=this.keyState[t])&&e}wasKeyJustPressed(t){var e;return null!=(e=this.justPressed[t])&&e}getMovementDirection(){let t=0,e=0;return this.isKeyPressed("up")&&(e-=1),this.isKeyPressed("down")&&(e+=1),this.isKeyPressed("left")&&(t-=1),this.isKeyPressed("right")&&(t+=1),{x:t,y:e}}constructor(t){this.canvas=t,this.isDragging=!1,this.dragStart=null,this.lastMouse=null,this.dragDelta={x:0,y:0},this.mouseClick=null,this.keys=new Set,this.keyState={},this.justPressed={},this.setupEventListeners(),t&&this.setupMouseListeners(t)}}o.keyMap={w:"up",ArrowUp:"up",s:"down",ArrowDown:"down",a:"left",ArrowLeft:"left",d:"right",ArrowRight:"right",q:"attack",f:"interact",e:"inventory",1:"slot1",2:"slot2",3:"slot3",4:"slot4",5:"slot5",6:"slot6",7:"slot7",8:"slot8",9:"slot9"};var l=i(5955),c=i(1623),h=i.n(c),u=i(7013);class p{async loadImage(){try{this.image=new Image,this.image.src=(0,u.O)(this.config.imagePath),await new Promise((t,e)=>{if(!this.image)return void e(Error("Image is null"));this.image.onload=()=>{this.processFrames(),this.isLoaded=!0,t()},this.image.onerror=()=>{e(Error("Failed to load sprite: ".concat(this.config.imagePath)))}})}catch(t){console.error("Failed to load sprite: ".concat(this.config.imagePath),t)}}processFrames(){if(this.image){this.frames=[];for(let t=0;t<this.totalFrames;t++){let e=Math.floor(t/this.framesPerRow),i=t%this.framesPerRow;this.frames.push({image:this.image,x:i*this.frameWidth,y:e*this.frameHeight,width:this.frameWidth,height:this.frameHeight})}}}update(t){if(!this.isLoaded||this.frames.length<=1)return;this.lastFrameTime+=1e3*t;let e=this.animationDuration/this.totalFrames;this.lastFrameTime>=e&&(this.lastFrameTime=0,this.loop?this.currentFrame=(this.currentFrame+1)%this.totalFrames:this.currentFrame<this.totalFrames-1&&this.currentFrame++)}render(t,e,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if(!this.isLoaded||!this.frames[this.currentFrame])return;let a=this.frames[this.currentFrame];a&&t.drawImage(a.image,a.x,a.y,a.width,a.height,e,i,a.width*s,a.height*s)}setFrame(t){t>=0&&t<this.totalFrames&&(this.currentFrame=t)}getCurrentFrame(){return this.currentFrame}getFrameCount(){return this.totalFrames}isAnimationComplete(){return!this.loop&&this.currentFrame===this.totalFrames-1}reset(){this.currentFrame=0,this.lastFrameTime=0}isImageLoaded(){return this.isLoaded}canAdvanceFrame(){return!!this.loop||this.currentFrame<this.totalFrames-1}getNextFrame(){return this.loop?(this.currentFrame+1)%this.totalFrames:Math.min(this.currentFrame+1,this.totalFrames-1)}constructor(t){var e,i;this.config=t,this.image=null,this.frames=[],this.currentFrame=0,this.lastFrameTime=0,this.isLoaded=!1,this.animationDuration=null!=(e=t.animationDuration)?e:1e3,this.loop=!1!==t.loop,this.totalFrames=t.totalFrames,this.frameWidth=t.frameWidth,this.frameHeight=t.frameHeight,this.framesPerRow=null!=(i=t.framesPerRow)?i:this.totalFrames,this.loadImage()}}class d{render(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.isDestroyed||this.sprite.render(t,this.x,this.y,e)}renderAtScreenPosition(t,e,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.isDestroyed||this.sprite.render(t,e,i,s)}takeDamage(t){return this.isDestroyed?{destroyed:!1,dropValue:0,dropType:""}:(this.health-=t,this.health<=0)?(this.isDestroyed=!0,{destroyed:!0,dropValue:this.dropValue,dropType:this.dropType}):{destroyed:!1,dropValue:0,dropType:""}}getHealth(){return this.health}getMaxHealth(){return this.maxHealth}getHealthPercentage(){return this.health/this.maxHealth}isStructureDestroyed(){return this.isDestroyed}getDropInfo(){return{dropValue:this.dropValue,dropType:this.dropType}}constructor(t){this.isDestroyed=!1,this.x=t.x,this.y=t.y,this.health=t.health,this.maxHealth=t.health,this.dropValue=t.dropValue,this.dropType=t.dropType,this.sprite=this.createSprite()}}var g=function(t){return t[t.CUT_DOWN=0]="CUT_DOWN",t[t.YOUNG=1]="YOUNG",t[t.TALL=2]="TALL",t[t.FULL=3]="FULL",t}({});class m extends d{createSprite(){var t;return new p({imagePath:"/sprites/Nature/Trees.png",frameWidth:16,frameHeight:16,totalFrames:4,framesPerRow:4,animationDuration:4*(null!=(t=this.growthTimePerStage)?t:36e5),loop:!1})}update(t){this.isGrowthComplete||(this.timeSinceLastGrowth+=1e3*t,this.timeSinceLastGrowth>=this.growthTimePerStage&&this.canGrow()&&(this.grow(),this.timeSinceLastGrowth=0),this.sprite.update(t))}render(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.sprite.render(t,this.x,this.y,e)}renderAtScreenPosition(t,e,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.sprite.render(t,e,i,s)}grow(){this.currentStage<3&&(this.currentStage++,this.sprite.setFrame(this.currentStage),3===this.currentStage&&(this.isGrowthComplete=!0))}canGrow(){return this.currentStage<3}cutDown(){this.currentStage=0,this.sprite.setFrame(this.currentStage),this.isGrowthComplete=!1,this.timeSinceLastGrowth=0}plant(){0===this.currentStage&&(this.currentStage=1,this.sprite.setFrame(this.currentStage),this.isGrowthComplete=!1,this.timeSinceLastGrowth=0)}getCurrentStage(){return this.currentStage}getGrowthProgress(){return this.isGrowthComplete?1:this.timeSinceLastGrowth/this.growthTimePerStage}isFullyGrown(){return 3===this.currentStage}isCutDown(){return 0===this.currentStage}forceGrowthStage(t){this.currentStage=t,this.sprite.setFrame(t),this.isGrowthComplete=3===t,this.timeSinceLastGrowth=0}takeDamage(t){let e=super.takeDamage(t);return e.destroyed&&this.cutDown(),e}constructor(t){var e,i;super({...t,health:50,dropValue:5,dropType:"wood"}),this.timeSinceLastGrowth=0,this.isGrowthComplete=!1,this.currentStage=null!=(e=t.initialStage)?e:1,this.growthTimePerStage=null!=(i=t.growthTimePerStage)?i:36e5,this.sprite=this.createSprite(),this.sprite.setFrame(this.currentStage)}}var y=function(t){return t[t.VARIANT_1=1]="VARIANT_1",t[t.VARIANT_2=2]="VARIANT_2",t[t.VARIANT_3=3]="VARIANT_3",t}({});class f extends d{createSprite(){var t,e,i;let s=null!=(e=null==(t=this.frameSequence)?void 0:t.length)?e:2;return new p({imagePath:"/sprites/Nature/Cactus.png",frameWidth:16,frameHeight:16,totalFrames:8,framesPerRow:8,animationDuration:(null!=(i=this.growthTimePerStage)?i:6e5)*s,loop:!1})}getRandomVariant(){var t;let e=[1,2,3];return null!=(t=e[Math.floor(Math.random()*e.length)])?t:1}getFrameSequence(t){switch(t){case 1:default:return[4,3];case 2:return[5,6,7];case 3:return[1,0]}}update(t){this.isGrowthComplete||(this.timeSinceLastGrowth+=1e3*t,this.timeSinceLastGrowth>=this.growthTimePerStage&&this.canGrow()&&(this.grow(),this.timeSinceLastGrowth=0),this.sprite.update(t))}render(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;this.sprite.render(t,this.x,this.y,e)}renderAtScreenPosition(t,e,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;this.sprite.render(t,e,i,s)}grow(){if(this.currentStage<this.frameSequence.length-1){var t;this.currentStage++,this.sprite.setFrame(null!=(t=this.frameSequence[this.currentStage])?t:0),this.currentStage===this.frameSequence.length-1&&(this.isGrowthComplete=!0)}}canGrow(){return this.currentStage<this.frameSequence.length-1}getCurrentStage(){return this.currentStage}getVariant(){return this.variant}getGrowthProgress(){return this.isGrowthComplete?1:this.timeSinceLastGrowth/this.growthTimePerStage}isFullyGrown(){return this.currentStage===this.frameSequence.length-1}forceGrowthStage(t){if(t>=0&&t<this.frameSequence.length){var e;this.currentStage=t,this.sprite.setFrame(null!=(e=this.frameSequence[t])?e:0),this.isGrowthComplete=t===this.frameSequence.length-1,this.timeSinceLastGrowth=0}}constructor(t){var e,i,s,a;super({...t,health:15,dropValue:1,dropType:"cactus"}),this.timeSinceLastGrowth=0,this.isGrowthComplete=!1,this.variant=null!=(e=t.variant)?e:this.getRandomVariant(),this.currentStage=null!=(i=t.initialStage)?i:0,this.growthTimePerStage=null!=(s=t.growthTimePerStage)?s:6e5,this.frameSequence=this.getFrameSequence(this.variant),this.sprite=this.createSprite(),this.sprite.setFrame(null!=(a=this.frameSequence[this.currentStage])?a:0)}}let S={health_potion:{name:"Health Potion",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:4,category:"inventory",properties:{maxStack:16}},poison_potion:{name:"Poison Potion",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:5,category:"inventory",properties:{maxStack:16}},magic_potion:{name:"Magic Potion",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:6,category:"inventory",properties:{maxStack:16}},stamina_potion:{name:"Stamina Potion",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:7,category:"inventory",properties:{maxStack:16}},wheat:{name:"Wheat",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:8,category:"inventory",properties:{maxStack:64}},health_heart:{name:"Health Heart",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:9,category:"inventory",properties:{maxStack:1}},wood:{name:"Wood",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:10,category:"inventory",properties:{maxStack:64}},cactus:{name:"Cactus",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:11,category:"inventory",properties:{maxStack:64}},hammer:{name:"Hammer",spritePath:"/sprites/User Interface/UiIcons.png",index:0,category:"inventory",properties:{maxStack:1,damage:15}},sword:{name:"Sword",spritePath:"/sprites/User Interface/UiIcons.png",index:1,category:"inventory",properties:{maxStack:1,damage:20}},shield:{name:"Shield",spritePath:"/sprites/User Interface/UiIcons.png",index:2,category:"inventory",properties:{maxStack:1}},dagger:{name:"Dagger",spritePath:"/sprites/User Interface/UiIcons.png",index:44,category:"inventory",properties:{maxStack:1,damage:10}},arrow_horizontal:{name:"Arrow (Horizontal)",spritePath:"/sprites/User Interface/UiIcons.png",index:45,category:"projectile",properties:{damage:15}},arrow_vertical:{name:"Arrow (Vertical)",spritePath:"/sprites/User Interface/UiIcons.png",index:3,category:"projectile",properties:{damage:15}},settings_icon:{name:"Settings",spritePath:"/sprites/User Interface/UiIcons.png",index:42,category:"ui"},chat_icon:{name:"Chat",spritePath:"/sprites/User Interface/UiIcons.png",index:41,category:"ui"},notification_icon:{name:"Notification",spritePath:"/sprites/User Interface/UiIcons.png",index:40,category:"ui"},warning_icon:{name:"Warning",spritePath:"/sprites/User Interface/UiIcons.png",index:31,category:"ui"},confirm_icon:{name:"Confirm",spritePath:"/sprites/User Interface/UiIcons.png",index:30,category:"ui"},question_icon:{name:"Question",spritePath:"/sprites/User Interface/UiIcons.png",index:29,category:"ui"},reject_icon:{name:"Reject",spritePath:"/sprites/User Interface/UiIcons.png",index:28,category:"ui"},default_item_box:{name:"Default Item Box",spritePath:"/sprites/User Interface/Highlighted-Boxes.png",index:0,category:"ui"},broken_item_box:{name:"Broken Item Box",spritePath:"/sprites/User Interface/Highlighted-Boxes.png",index:3,category:"ui"},highlighted_item_box:{name:"Highlighted Item Box",spritePath:"/sprites/User Interface/Highlighted-Boxes.png",index:4,category:"ui"},box_selector:{name:"Box Selector",spritePath:"/sprites/User Interface/BoxSelector.png",index:0,category:"ui"},pressed_box_selector:{name:"Pressed Box Selector",spritePath:"/sprites/User Interface/BoxSelector.png",index:1,category:"ui"},rock:{name:"Rock",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:12,category:"inventory",properties:{maxStack:64,interactable:!0,passable:!1}},gold_ore:{name:"Gold Ore",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:13,category:"inventory",properties:{maxStack:64,rarity:"very_rare",dropItems:[{type:"gold_ingot",quantity:1}]}},iron_ore:{name:"Iron Ore",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:14,category:"inventory",properties:{maxStack:64,rarity:"rare",dropItems:[{type:"iron_ingot",quantity:1}]}},copper_ore:{name:"Copper Ore",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:15,category:"inventory",properties:{maxStack:64,rarity:"common",dropItems:[{type:"copper_ingot",quantity:1}]}},gold_ingot:{name:"Gold Ingot",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:0,category:"inventory",properties:{maxStack:64}},iron_ingot:{name:"Iron Ingot",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:1,category:"inventory",properties:{maxStack:64}},copper_ingot:{name:"Copper Ingot",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:2,category:"inventory",properties:{maxStack:64}},fireball_frame_0:{name:"Fireball",spritePath:"/sprites/Objects/FireballProjectile.png",index:0,category:"poi",properties:{damage:25,animated:!0,animationFrames:[0,1]}},magic_fire_frame_0:{name:"Magic Fire",spritePath:"/sprites/Objects/FireballProjectile.png",index:3,category:"poi",properties:{damage:35,animated:!0,animationFrames:[3,2]}},wheat_field_0:{name:"Wheat Field (Young)",spritePath:"/sprites/Nature/Wheatfield.png",index:0,category:"poi",properties:{animated:!0,animationFrames:[0,1,2,3],interactable:!0,dropItems:[{type:"wheat",quantity:3}]}},boat_vertical:{name:"Boat (Vertical)",spritePath:"/sprites/Miscellaneous/Boat.png",index:0,category:"poi",properties:{interactable:!0,passable:!0,tileTypeRequired:["SHALLOW_WATER","DEEP_WATER"]}},boat_horizontal:{name:"Boat (Horizontal)",spritePath:"/sprites/Miscellaneous/Boat.png",index:2,category:"poi",properties:{interactable:!0,passable:!0,tileTypeRequired:["SHALLOW_WATER","DEEP_WATER"]}},normal_chest:{name:"Normal Chest",spritePath:"/sprites/Miscellaneous/Chests.png",index:0,category:"poi",properties:{interactable:!0,passable:!1}},rare_chest:{name:"Rare Chest",spritePath:"/sprites/Miscellaneous/Chests.png",index:1,category:"poi",properties:{interactable:!0,passable:!1,rarity:"rare"}},portal:{name:"Portal",spritePath:"/sprites/Miscellaneous/Portal.png",index:3,category:"poi",properties:{interactable:!0,passable:!0}},empty_notice_board:{name:"Empty Notice Board",spritePath:"/sprites/Miscellaneous/QuestBoard.png",index:0,category:"poi",properties:{interactable:!0,passable:!1}},notice_board:{name:"Notice Board",spritePath:"/sprites/Miscellaneous/QuestBoard.png",index:1,category:"poi",properties:{interactable:!0,passable:!1}},tombstone:{name:"Tombstone",spritePath:"/sprites/Miscellaneous/Tombstones.png",index:6,category:"poi",properties:{interactable:!0,passable:!1}},water_well:{name:"Water Well",spritePath:"/sprites/Miscellaneous/Well.png",index:3,category:"poi",properties:{interactable:!0,passable:!1}},sand_tile:{name:"Sand Tile",spritePath:"/sprites/Ground/Shore.png",index:0,category:"background"},shallow_water_tile:{name:"Shallow Water Tile",spritePath:"/sprites/Ground/Shore.png",index:2,category:"background"},deep_water_tile:{name:"Deep Water Tile",spritePath:"/sprites/Ground/Shore.png",index:4,category:"background"},grass_tile_0:{name:"Grass Tile (Variant 0)",spritePath:"/sprites/Ground/TexturedGrass.png",index:0,category:"background"},grass_tile_1:{name:"Grass Tile (Variant 1)",spritePath:"/sprites/Ground/TexturedGrass.png",index:1,category:"background"},grass_tile_2:{name:"Grass Tile (Variant 2)",spritePath:"/sprites/Ground/TexturedGrass.png",index:2,category:"background"},grass_tile_3:{name:"Grass Tile (Variant 3)",spritePath:"/sprites/Ground/TexturedGrass.png",index:3,category:"background"},grass_tile_4:{name:"Grass Tile (Variant 4)",spritePath:"/sprites/Ground/TexturedGrass.png",index:4,category:"background"},grass_tile_5:{name:"Grass Tile (Variant 5)",spritePath:"/sprites/Ground/TexturedGrass.png",index:5,category:"background"},mine_entrance:{name:"Mine Entrance",spritePath:"/sprites/Buildings/Wood/Resources.png",index:10,category:"structure",properties:{interactable:!0,passable:!0,tileTypeRequired:["STONE"],spawning:{chance:.001,biomes:["STONE"]}}},windmill_frame_0:{name:"Windmill",spritePath:"/sprites/Buildings/Wood/Resources.png",index:3,category:"structure",properties:{animated:!0,animationFrames:[3,4,5],passable:!1,tileTypeRequired:["GRASS"],spawning:{chance:1e-4,biomes:["GRASS"]}}},food_market:{name:"Food Market",spritePath:"/sprites/Buildings/Wood/Market.png",index:4,category:"structure",properties:{interactable:!0,passable:!1,tileTypeRequired:["GRASS"],spawning:{chance:1e-4,biomes:["GRASS"]}}},butcher_market:{name:"Butcher Market",spritePath:"/sprites/Buildings/Wood/Market.png",index:11,category:"structure",properties:{interactable:!0,passable:!1,tileTypeRequired:["GRASS"],spawning:{chance:1e-4,biomes:["GRASS"]}}},armory_market:{name:"Armory Market",spritePath:"/sprites/Buildings/Wood/Market.png",index:5,category:"structure",properties:{interactable:!0,passable:!1,tileTypeRequired:["GRASS"],spawning:{chance:1e-4,biomes:["GRASS"]}}},cloth_market:{name:"Cloth Market",spritePath:"/sprites/Buildings/Wood/Market.png",index:7,category:"structure",properties:{interactable:!0,passable:!1,tileTypeRequired:["GRASS"],spawning:{chance:1e-4,biomes:["GRASS"]}}},dungeon_entrance:{name:"Dungeon Entrance",spritePath:"/sprites/Buildings/Wood/Resources.png",index:9,category:"structure",properties:{interactable:!0,passable:!0,tileTypeRequired:["STONE"],spawning:{chance:5e-4,biomes:["STONE"]}}},chicken_meat:{name:"Chicken Meat",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:16,category:"inventory",properties:{maxStack:64}},pork:{name:"Pork",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:17,category:"inventory",properties:{maxStack:64}},wool:{name:"Wool",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:18,category:"inventory",properties:{maxStack:64}},mutton:{name:"Mutton",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:19,category:"inventory",properties:{maxStack:64}},chicken:{name:"Chicken",spritePath:"/sprites/Animals/Chicken.png",index:0,category:"animal",properties:{health:20,animated:!0,animationFrames:[0,1,2,3],spawning:{chance:.001,biomes:["GRASS"]},dropItems:[{type:"chicken_meat",quantity:1}]}},pig:{name:"Pig",spritePath:"/sprites/Animals/Pig.png",index:0,category:"animal",properties:{health:35,animated:!0,animationFrames:[0,1,2,3],spawning:{chance:8e-4,biomes:["GRASS"]},dropItems:[{type:"pork",quantity:2}]}},sheep:{name:"Sheep",spritePath:"/sprites/Animals/Sheep.png",index:0,category:"animal",properties:{health:25,animated:!0,animationFrames:[0,1,2,3],spawning:{chance:.0012,biomes:["GRASS"]},dropItems:[{type:"wool",quantity:1},{type:"mutton",quantity:1}]}},monster:{name:"Monster",spritePath:"/sprites/Characters/champions/Okomo.png",index:0,category:"animal",properties:{health:80,animated:!0,animationFrames:[0,1,2,3],spawning:{chance:1e-4,biomes:["FOREST","STONE","GRAVEL"]},dropItems:[{type:"monster_drop",quantity:1}]}},trader:{name:"Trader",spritePath:"/sprites/Characters/champions/Okomo.png",index:4,category:"animal",properties:{health:50,animated:!0,animationFrames:[4,5,6,7],spawning:{chance:5e-4,biomes:["GRASS"]},dropItems:[{type:"gold_ingot",quantity:1}]}},monster_drop:{name:"Monster Essence",spritePath:"/sprites/User Interface/Icons-Essentials.png",index:20,category:"inventory",properties:{maxStack:64}}};class v{loadAsset(){let t=Object.values(S).find(t=>{if(!t||"string"!=typeof t.name)return!1;let e=t.name.toLowerCase().replace(/\s+/g,"_");return e===this.type||this.type.includes(e)});t&&"string"==typeof t.spritePath?(this.asset=t,this.loadSprite(t.spritePath)):console.warn("No asset found for POI type: ".concat(this.type))}async loadSprite(t){try{this.sprite=new Image,this.sprite.src=(0,u.O)(t),await new Promise((e,i)=>{if(!this.sprite)return void i(Error("Sprite is null"));this.sprite.onload=()=>{this.isLoaded=!0,e()},this.sprite.onerror=()=>{i(Error("Failed to load POI sprite: ".concat(t)))}})}catch(t){console.error("Failed to load POI sprite for ".concat(this.type,":"),t)}}update(t){if(this.animated&&this.animationFrames.length>1){this.lastFrameTime+=1e3*t;let e=this.animationDuration/this.animationFrames.length;this.lastFrameTime>=e&&(this.lastFrameTime=0,this.currentFrame=(this.currentFrame+1)%this.animationFrames.length)}this.damage>0&&(this.type.includes("fire")||this.type.includes("flame"))}interact(t){if(!this.interactable)return{success:!1,message:"Cannot interact with ".concat(this.type)};switch(this.type){case"normal_chest":case"rare_chest":return this.handleChestInteraction();case"water_well":return this.handleWellInteraction();case"portal":return this.handlePortalInteraction();case"empty_notice_board":case"notice_board":return this.handleNoticeBoardInteraction();case"tombstone":return this.handleTombstoneInteraction();case"wheat_field_0":return this.handleWheatFieldInteraction();case"boat_vertical":case"boat_horizontal":return this.handleBoatInteraction();case"food_market":case"butcher_market":case"armory_market":case"cloth_market":return this.handleMarketInteraction();case"mine_entrance":case"dungeon_entrance":return this.handleEntranceInteraction();default:return{success:!1,message:"Unknown interaction type: ".concat(this.type)}}}handleChestInteraction(){let t="rare_chest"===this.type,e=[];return t?e.push({id:"item_".concat(Date.now(),"_1"),type:"gold_ingot",quantity:3},{id:"item_".concat(Date.now(),"_2"),type:"magic_potion",quantity:1},{id:"item_".concat(Date.now(),"_3"),type:"sword",quantity:1}):e.push({id:"item_".concat(Date.now(),"_1"),type:"copper_ingot",quantity:2},{id:"item_".concat(Date.now(),"_2"),type:"health_potion",quantity:2}),{success:!0,message:"Opened ".concat(t?"rare":"normal"," chest!"),items:e,openUI:"chest"}}handleWellInteraction(){return{success:!0,message:"You drink fresh water from the well. Health restored!",healthChange:25}}handlePortalInteraction(){return{success:!0,message:"You step through the portal...",teleportTo:{x:16*Math.floor(1e3*Math.random()),y:16*Math.floor(1e3*Math.random())}}}handleNoticeBoardInteraction(){return"empty_notice_board"===this.type?{success:!0,message:"The notice board is empty. You could post a message here.",openUI:"notice_board"}:{success:!0,message:"Reading the notices on the board...",openUI:"notice_board"}}handleTombstoneInteraction(){var t;return{success:!0,message:"You retrieve items from the grave...",items:null!=(t=this.customData.deathInventory)?t:[]}}handleWheatFieldInteraction(){return this.currentFrame>=3||!this.animated?{success:!0,message:"You harvest the wheat field!",items:[{id:"item_".concat(Date.now(),"_wheat"),type:"wheat",quantity:3}]}:{success:!1,message:"The wheat is not ready for harvest yet."}}handleBoatInteraction(){return{success:!0,message:"You board the boat. You can now travel on water!"}}handleMarketInteraction(){let t="Welcome to the market!";switch(this.type){case"food_market":t="Welcome to the food market!";break;case"butcher_market":t="Welcome to the butcher!";break;case"armory_market":t="Welcome to the armory!";break;case"cloth_market":t="Welcome to the cloth market!"}return{success:!0,message:t,openUI:"market"}}handleEntranceInteraction(){let t="mine_entrance"===this.type;return{success:!0,message:"You enter the ".concat(t?"mine":"dungeon","..."),teleportTo:{x:this.position.x,y:this.position.y+100}}}takeDamage(t){return this.health-=t,this.health<=0}getDropItems(){return this.dropItems.map(t=>({id:"item_".concat(Date.now(),"_").concat(Math.random().toString(36).substring(2,9)),type:t.type,quantity:t.quantity}))}render(t,e,i){var s;let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if(!this.isLoaded||!this.sprite||!this.asset)return;let r=this.animated?null!=(s=this.animationFrames[this.currentFrame])?s:0:"number"==typeof this.asset.index?this.asset.index:0,n=Math.floor(this.sprite.width/16),o=16*Math.floor(r/n);t.drawImage(this.sprite,r%n*16,o,16,16,e,i,16*a,16*a)}isAt(t){return this.position.x===t.x&&this.position.y===t.y}isDangerous(){return this.damage>0}constructor(t){var e,i,s,a,r,n;this.currentFrame=0,this.lastFrameTime=0,this.animationDuration=2e3,this.sprite=null,this.asset=null,this.isLoaded=!1,this.type=t.type,this.position=t.position,this.health=null!=(e=t.health)?e:100,this.interactable=t.interactable,this.passable=t.passable,this.damage=null!=(i=t.damage)?i:0,this.animated=null!=(s=t.animated)&&s,this.animationFrames=null!=(a=t.animationFrames)?a:[0],this.dropItems=null!=(r=t.dropItems)?r:[],this.customData=null!=(n=t.customData)?n:{},this.loadAsset()}}class I{async loadAsset(){let t=S[this.type];if(t){this.asset=t;let e=new Image;e.src=(0,u.O)(t.spritePath);try{await new Promise((i,s)=>{e.onload=()=>i(),e.onerror=()=>s(Error("Failed to load ".concat(t.spritePath)))}),this.sprite=e,this.isLoaded=!0}catch(t){console.warn("Failed to load NPC sprite for ".concat(this.type,":"),t)}}}setTileCollisionCallback(t){this.tileCollisionCallback=t}setSpeculativeMovementCallback(t){this.speculativeMovementCallback=t}update(t,e,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[];arguments.length>4&&void 0!==arguments[4]&&arguments[4],"dead"!==this.state&&(this.updateAnimation(t),this.updateTileBasedMovement(t,e,i,s))}updateTileBasedMovement(t,e,i,s){var a;if(this.moveCooldown>0){this.moveCooldown-=1e3*t;return}let r=this.getDistanceToPosition(e),n=i.some(t=>(null==t?void 0:t.type)==="wheat");if(this.handlePlayerInteraction(r,n,e),"monster"===this.category&&this.handleMonsterAttacks(t,s),"animal"===this.category&&this.canBreed()){let t=this.findBreedingPartner(s);if(t)return void this.attemptBreeding(t)}let o=null!=(a=this.calculateMovementDecision(e,i,s).targetPosition)?a:null;if(o&&this.canMoveTo(o)){let t=Math.floor(this.position.x/16),e=Math.floor(this.position.y/16),i=Math.floor(o.x/16),s=Math.floor(o.y/16);(t!==i||e!==s)&&(this.updateDirectionFromMovement(i-t,s-e),this.position={x:16*i,y:16*s},this.lastMovementTime=Date.now(),.1>Math.random()&&console.log("[NPC ".concat(this.type,"] Moved from (").concat(t,",").concat(e,") to (").concat(i,",").concat(s,")"))),this.moveCooldown=this.moveDelay}else{this.moveCooldown=.25*this.moveDelay;let t=Date.now();if(t-this.lastMovementTime>this.maxIdleTime){let e=this.getBasicAdjacentTile(s);if(e&&this.canMoveTo(e)){let i=Math.floor(e.x/16),s=Math.floor(e.y/16);this.position={x:16*i,y:16*s},this.lastMovementTime=t,console.log("[NPC ".concat(this.type,"] Force moved after being idle for too long"))}}}}updateDirectionFromMovement(t,e){Math.abs(t)>Math.abs(e)?this.direction=t>0?"right":"left":this.direction=e>0?"down":"up"}getAdjacentTileTowards(t){let e=Math.floor(this.position.x/16),i=Math.floor(this.position.y/16),s=Math.floor(t.x/16),a=Math.floor(t.y/16),r=s-e,n=a-i,o=0,l=0;return Math.abs(r)>Math.abs(n)?o=r>0?1:-1:0!==n&&(l=n>0?1:-1),{x:(e+o)*16,y:(i+l)*16}}getAdjacentTileAway(t){let e=Math.floor(this.position.x/16),i=Math.floor(this.position.y/16),s=Math.floor(t.x/16),a=Math.floor(t.y/16),r=e-s,n=i-a,o=0,l=0;return Math.abs(r)>Math.abs(n)?o=r>0?1:-1:0!==n?l=n>0?1:-1:o=Math.random()>.5?1:-1,{x:(e+o)*16,y:(i+l)*16}}getRandomAdjacentTileWithSpacing(t){let e=Math.floor(this.position.x/16),i=Math.floor(this.position.y/16);if(this.getDistanceToPosition(this.originalPosition)>5)return this.getAdjacentTileTowards(this.originalPosition);let s=[{x:(e+1)*16,y:16*i},{x:(e-1)*16,y:16*i},{x:16*e,y:(i+1)*16},{x:16*e,y:(i-1)*16}].filter(e=>{let i=Math.floor(e.x/16),s=Math.floor(e.y/16);for(let e of t){if(e===this)continue;let a=Math.abs(Math.floor(e.position.x/16)-i)+Math.abs(Math.floor(e.position.y/16)-s);if(("animal"===this.category||"friendly"===this.category)&&("animal"===e.category||"friendly"===e.category)){if(0===a||1===a&&t.filter(t=>t!==this&&"animal"===t.category&&1===Math.abs(Math.floor(t.position.x/16)-i)+Math.abs(Math.floor(t.position.y/16)-s)).length>=2&&.3>Math.random())return!1}else if(0===a)return!1}return!0});return 0===s.length?this.getBasicAdjacentTile(t):s[Math.floor(Math.random()*s.length)]}getBasicAdjacentTile(t){let e=Math.floor(this.position.x/16),i=Math.floor(this.position.y/16),s=[{x:(e+1)*16,y:16*i},{x:(e-1)*16,y:16*i},{x:16*e,y:(i+1)*16},{x:16*e,y:(i-1)*16}].filter(e=>{let i=Math.floor(e.x/16),s=Math.floor(e.y/16);for(let e of t){if(e===this)continue;let t=Math.floor(e.position.x/16),a=Math.floor(e.position.y/16);if(t===i&&a===s)return!1}return!0});return s.length>0?s[Math.floor(Math.random()*s.length)]:null}handlePlayerInteraction(t,e,i){if("dead"!==this.state){if("animal"===this.category&&e&&t<=5){this.state="following";return}if(this.health<this.maxHealth&&"monster"!==this.category){this.state="fleeing";return}if("monster"===this.category&&t<=3){this.state="attacking";return}"following"===this.state&&(!e||t>5)&&(this.state="idle"),"fleeing"===this.state&&t>8&&(this.state="idle"),"attacking"===this.state&&t>5&&(this.state="idle")}}handleMonsterAttacks(t,e){if("monster"!==this.category)return;let i=Date.now();if(!(i-this.lastAttackTime<this.attackCooldown)){for(let t of e)if("monster"!==t.category&&!t.isDead()&&1>=this.getDistanceToNPC(t)){t.takeDamage(10),this.lastAttackTime=i,console.log("".concat(this.type," attacked ").concat(t.type," for 10 damage"));break}}}updateAnimation(t){this.isLoaded&&this.asset&&(this.lastFrameTime+=1e3*t,this.lastFrameTime>=this.animationDuration/4&&(this.currentFrame=(this.currentFrame+1)%4,this.lastFrameTime=0))}getDistanceToNPC(t){let e=t.position.x-this.position.x,i=t.position.y-this.position.y;return Math.sqrt(e*e+i*i)/16}getDistanceToPosition(t){let e=t.x-this.position.x,i=t.y-this.position.y;return Math.sqrt(e*e+i*i)/16}canMoveTo(t){if(Math.sqrt(Math.pow(t.x-this.originalPosition.x,2)+Math.pow(t.y-this.originalPosition.y,2))>160)return!1;if(this.tileCollisionCallback){let e=this.tileCollisionCallback(t);return!!(e&&this.speculativeMovementCallback&&this.speculativeMovementCallback(t,this))||!e}return!0}render(t,e,i){if(!this.isLoaded||!this.sprite||!this.asset)return;let s=0;s=this.getDirectionOffset()+this.currentFrame;let a=this.sprite.width/16,r=s%a*16,n=16*Math.floor(s/a);t.drawImage(this.sprite,r,n,16,16,e,i,16,16),this.health<this.maxHealth&&!this.isDead()&&this.renderHealthBar(t,e,i)}getDirectionOffset(){switch(this.direction){case"down":default:return 0;case"left":return 4;case"right":return 8;case"up":return 12}}renderHealthBar(t,e,i){let s=this.health/this.maxHealth;t.fillStyle="red",t.fillRect(e+1,i-4,14,2),t.fillStyle="green",t.fillRect(e+1,i-4,14*s,2)}takeDamage(t){"dead"!==this.state&&(this.health-=t,this.health<=0?(this.health=0,this.state="dead"):"monster"!==this.category&&(this.state="fleeing"))}isDead(){return"dead"===this.state||this.health<=0}getDropItems(){return this.dropItems}getDefaultHealth(){switch(this.type){case"chicken":return 20;case"pig":return 35;case"sheep":default:return 25;case"trader":return 50;case"orc":case"skeleton":case"goblin":return 40}}getDefaultAggressive(){return"monster"===this.category}getDefaultDropItems(){switch(this.type){case"chicken":return[{type:"chicken_meat",quantity:1}];case"pig":return[{type:"pork",quantity:2}];case"sheep":return[{type:"wool",quantity:1},{type:"mutton",quantity:1}];case"trader":default:return[];case"orc":case"skeleton":case"goblin":return[{type:"copper_ore",quantity:1}]}}getNPCCategory(){switch(this.type){case"chicken":case"pig":case"sheep":default:return"animal";case"trader":return"friendly";case"orc":case"skeleton":case"goblin":return"monster"}}canBreed(){return Date.now()-this.lastBreedTime>=this.breedCooldown}findBreedingPartner(t){for(let e of t)if("animal"===e.category&&e!==this&&this.canBreedWith(e))return e;return null}canBreedWith(t){return t.type===this.type&&1===this.getDistanceToNPC(t)&&!!this.areFacingEachOther(t)&&!!t.canBreed()}areFacingEachOther(t){let e=Math.floor(this.position.x/16),i=Math.floor(this.position.y/16),s=Math.floor(t.position.x/16),a=Math.floor(t.position.y/16),r=s-e,n=a-i,o=!1;1===r&&0===n&&"right"===this.direction&&(o=!0),-1===r&&0===n&&"left"===this.direction&&(o=!0),0===r&&1===n&&"down"===this.direction&&(o=!0),0===r&&-1===n&&"up"===this.direction&&(o=!0);let l=!1;return 1===r&&0===n&&"left"===t.direction&&(l=!0),-1===r&&0===n&&"right"===t.direction&&(l=!0),0===r&&1===n&&"up"===t.direction&&(l=!0),0===r&&-1===n&&"down"===t.direction&&(l=!0),o&&l}attemptBreeding(t){this.lastBreedTime=Date.now(),t.lastBreedTime=Date.now();let e=this.findOffspringPosition(t);e&&(console.log("\uD83D\uDC23 [BREEDING] ".concat(this.type," at (").concat(Math.floor(this.position.x/16),",").concat(Math.floor(this.position.y/16),") and ").concat(t.type," at (").concat(Math.floor(t.position.x/16),",").concat(Math.floor(t.position.y/16),") are attempting to breed!")),this.breedingRequest={partner:t,offspringType:this.type,offspringPosition:e,timestamp:Date.now()})}findOffspringPosition(t){let e=Math.floor(this.position.x/16),i=Math.floor(this.position.y/16),s=Math.floor(t.position.x/16),a=Math.floor(t.position.y/16);for(let t of[{x:(e+1)*16,y:16*i},{x:(e-1)*16,y:16*i},{x:16*e,y:(i+1)*16},{x:16*e,y:(i-1)*16},{x:(s+1)*16,y:16*a},{x:(s-1)*16,y:16*a},{x:16*s,y:(a+1)*16},{x:16*s,y:(a-1)*16}])if(this.canMoveTo(t))return t;return null}findSameTypeAttraction(t){let e=null,i=1/0;for(let s of t)if("animal"===s.category&&s!==this&&s.type===this.type){let t=this.getDistanceToNPC(s);t>=2&&t<=4&&t<i&&(e=s,i=t)}return e?e.position:null}checkCrowdedRepulsion(t){let e=t.filter(t=>"animal"===t.category&&t!==this&&t.type===this.type);if(e.filter(t=>2>=this.getDistanceToNPC(t)).length>=3){let t=0,i=0,s=0;for(let a of e)2>=this.getDistanceToNPC(a)&&(t+=a.position.x,i+=a.position.y,s++);if(s>0)return{x:t/s,y:i/s}}return null}calculateAttractionChance(t){let e=.2,i=t.filter(t=>"animal"===t.category&&t!==this&&t.type===this.type&&3>=this.getDistanceToNPC(t)).length;return i>=2?e*=.5:1===i&&(e*=.8),t.some(t=>"animal"===t.category&&t!==this&&t.type===this.type&&4>=this.getDistanceToNPC(t))||(e*=1.5),Math.min(e,.4)}findNearestAnimal(t){let e=null,i=1/0;for(let s of t)if("animal"===s.category&&s!==this){let t=this.getDistanceToNPC(s);t<=2&&t<i&&(e=s,i=t)}return e}calculateMovementDecision(t,e,i){var s,a,r;let n=Date.now();if(this.currentMovementDecision&&n-this.currentMovementDecision.timestamp<100)return this.currentMovementDecision;let o=this.getDistanceToPosition(t),l=e.some(t=>(null==t?void 0:t.type)==="wheat");if("following"===this.state&&"animal"===this.category&&l&&o<=5){let e={shouldMove:!0,behaviorType:"basic_wander",targetPosition:null!=(s=this.getAdjacentTileTowards(t))?s:void 0};return this.currentMovementDecision={timestamp:n,...e},e}if("fleeing"===this.state){let e={shouldMove:!0,behaviorType:"basic_wander",targetPosition:null!=(a=this.getAdjacentTileAway(t))?a:void 0};return this.currentMovementDecision={timestamp:n,...e},e}if("monster"===this.category&&o<=3){let e={shouldMove:!0,behaviorType:"basic_wander",targetPosition:null!=(r=this.getAdjacentTileTowards(t))?r:void 0};return this.currentMovementDecision={timestamp:n,...e},e}let c=i.filter(t=>"animal"===t.category&&t!==this&&2>=this.getDistanceToNPC(t)).length,h=n-this.lastMovementTime,u=Math.min(.95,(c>0?.9:.8)+(h>3e3?Math.min(.3,(h-3e3)/5e3):0)),p=31*Math.floor(this.originalPosition.x)+37*Math.floor(this.originalPosition.y),d=Math.floor(n/100)+Math.floor(this.position.x)+Math.floor(this.position.y)+p;if(h>8e3&&(d+=Math.floor(n/50)),Math.abs(Math.sin(d))%1<u){let t,e=Math.abs(Math.sin(d+1))%1,s=Math.abs(Math.sin(d+2))%1,a=Math.abs(Math.sin(d+3))%1,r=null,o=this.checkCrowdedRepulsion(i);if(o&&e<.4)r=this.getAdjacentTileAway(o),t="crowded_escape";else if(s<(c>0?.3:.2)){let e=this.findNearestAnimal(i);r=e?this.getAdjacentTileAway(e.position):this.getRandomAdjacentTileWithSpacing(i),t="random_avoidance"}else if(a<(c>0?.35:.25))r=this.getRandomAdjacentTileWithSpacing(i),t="exploration";else{let s=this.findSameTypeAttraction(i),a=this.calculateAttractionChance(i);s&&e<a?(r=this.getAdjacentTileTowards(s),t="attraction"):(r=this.getRandomAdjacentTileWithSpacing(i),t="basic_wander")}let l={shouldMove:!0,behaviorType:t,targetPosition:null!=r?r:void 0};return this.currentMovementDecision={timestamp:n,...l},l}let g={shouldMove:!1,behaviorType:"basic_wander"};return this.currentMovementDecision={timestamp:n,...g},g}getMovementIntention(t,e,i){var s;return null!=(s=this.calculateMovementDecision(t,e,i).targetPosition)?s:null}constructor(t){var e,i,s,a,r;this.state="idle",this.direction="down",this.lastMoveTime=0,this.target=null,this.moveCooldown=0,this.moveDelay=600,this.currentFrame=0,this.lastFrameTime=0,this.animationDuration=1e3,this.sprite=null,this.asset=null,this.isLoaded=!1,this.moveTimer=0,this.moveInterval=2e3,this.lastAttackTime=0,this.attackCooldown=1e3,this.lastBreedTime=0,this.breedCooldown=3e4,this.lastMovementTime=0,this.maxIdleTime=5e3,this.restlessnessBonus=0,this.currentMovementDecision=null,this.type=t.type,this.position={...t.position},this.originalPosition={...t.position},this.health=null!=(e=t.health)?e:this.getDefaultHealth(),this.maxHealth=this.health,this.aggressive=null!=(i=t.aggressive)?i:this.getDefaultAggressive(),this.movementSpeed=null!=(s=t.movementSpeed)?s:1,this.detectionRange=null!=(a=t.detectionRange)?a:5,this.dropItems=null!=(r=t.dropItems)?r:this.getDefaultDropItems(),this.category=this.getNPCCategory(),this.moveCooldown=Math.random()*this.moveDelay,this.lastMovementTime=Date.now(),this.loadAsset()}}class T{hashSeed(t){let e=0;for(let i=0;i<t.length;i++)e=(e<<5)-e+t.charCodeAt(i),e&=e;return Math.abs(e)}generateVillageStructures(t,e,i,s,a){let r=[],n="".concat(t,",").concat(e);if(s.has(n)||(null==a?void 0:a(t,e)))return[];let o=16*t,l=16*e,c=o/1e3,h=l/1e3,u=this.villageNoise(c,h);if(u>this.VILLAGE_THRESHOLD&&"GRASS"===i){let i=Math.floor(t/50),c=Math.floor(e/50),h="village_area_".concat(i,"_").concat(c);if(s.has(h))return[];let u=this.findBestVillageCenterInArea(50*i,50*c,50,s,a);if(u&&u.x===t&&u.y===e){console.log("\uD83C\uDFD8️ Generating village center windmill at designated tile (".concat(t,", ").concat(e,") in grid area (").concat(i,", ").concat(c,")"));let a=this.createStructurePOI("windmill_frame_0",{x:o,y:l});a&&(r.push(a),s.set(n,a),s.set(h,a),console.log("Generated windmill at village center tile (".concat(t,", ").concat(e,")")))}}if(this.checkForMarketPlacement(t,e,i,s,r),this.checkForVillageAnimalPlacement(t,e,i,s,r),"STONE"===i&&this.mineNoise(3*c,3*h)>.98){let i=this.generateMineOrDungeon(t,e,s);i&&r.push(i)}if("GRASS"===i&&u<this.VILLAGE_THRESHOLD-.2){let i=this.generateAnimal(t,e,s);i&&r.push(i)}if(("FOREST"===i||"STONE"===i||"GRAVEL"===i)&&u<this.VILLAGE_THRESHOLD-.2){let i=this.generateMonster(t,e,s);i&&r.push(i)}return r}findBestVillageCenterInArea(t,e,i,s,a){let r=null,n=Math.min(i,20),o=t+Math.floor(i/2)-Math.floor(n/2),l=e+Math.floor(i/2)-Math.floor(n/2);for(let t=l;t<l+n;t++)for(let e=o;e<o+n;e++){let i="".concat(e,",").concat(t);if(s.has(i)||(null==a?void 0:a(e,t))||"GRASS"!==this.getTileTypeForCoords(e,t))continue;let n=16*e/1e3,o=16*t/1e3,l=this.villageNoise(n,o);l>this.VILLAGE_THRESHOLD&&(!r||l>r.value)&&(r={x:e,y:t,value:l})}return r}checkForMarketPlacement(t,e,i,s,a){for(let r of[{dx:8,dy:0,type:"food_market"},{dx:-8,dy:0,type:"butcher_market"},{dx:0,dy:8,type:"armory_market"},{dx:0,dy:-8,type:"cloth_market"}]){let n=t-r.dx,o=e-r.dy,l="".concat(n,",").concat(o),c=s.get(l);if(c&&"windmill_frame_0"===c.type){if(this.isValidPOITerrain(i)){let i={x:16*t,y:16*e},l=this.createStructurePOI(r.type,i);l&&(a.push(l),s.set("".concat(t,",").concat(e),l),console.log("Generated ".concat(r.type," at tile (").concat(t,", ").concat(e,") for village at (").concat(n,", ").concat(o,")")))}break}}}getTileTypeForCoords(t,e){return 100>Math.abs(16*t%1e3)||100>Math.abs(16*e%1e3)?"STONE":"GRASS"}generateVillage(t,e,i){let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:()=>"GRASS",a=arguments.length>4?arguments[4]:void 0,r=[],n="village_".concat(Math.floor(t/20),"_").concat(Math.floor(e/20));if(i.has(n))return[];let o="".concat(t,",").concat(e);if(!i.has(o)&&!(null==a?void 0:a(t,e))){let a=s(t,e);if(this.isValidPOITerrain(a)){let s=this.createStructurePOI("windmill_frame_0",{x:16*t,y:16*e});s&&(r.push(s),i.set(o,s),console.log("Generated windmill at tile (".concat(t,", ").concat(e,")")))}}let l=[{type:"food_market",x:t+8,y:e},{type:"butcher_market",x:t-8,y:e},{type:"armory_market",x:t,y:e+8},{type:"cloth_market",x:t,y:e-8}];for(let t of l){let e="".concat(t.x,",").concat(t.y);if(!i.has(e)&&!(null==a?void 0:a(t.x,t.y))){let a=s(t.x,t.y);if(this.isValidPOITerrain(a)){let s={x:16*t.x,y:16*t.y},a=this.createStructurePOI(t.type,s);a&&(r.push(a),i.set(e,a),console.log("Generated ".concat(t.type," at tile (").concat(t.x,", ").concat(t.y,")")))}}}let c=["chicken","pig","sheep"];for(let n of[{x:t+5,y:e+5},{x:t-5,y:e+5},{x:t+5,y:e-5},{x:t-5,y:e-5},{x:t+7,y:e},{x:t-7,y:e},{x:t,y:e+7},{x:t,y:e-7},{x:t+3,y:e+7},{x:t-3,y:e+7},{x:t+7,y:e+3},{x:t-7,y:e-3}]){let t="".concat(n.x,",").concat(n.y);if(!i.has(t)&&!(null==a?void 0:a(n.x,n.y))){let e=s(n.x,n.y);if(this.isValidNPCTerrain(e))if(this.hasAdjacentPassableSpace(n.x,n.y,i,a)){let e=c[Math.floor(Math.random()*c.length)];if(e){let s={x:16*n.x,y:16*n.y},a=this.createAnimalNPC(e,s);a&&(r.push(a),i.set(t,a),console.log("Generated ".concat(e," at tile (").concat(n.x,", ").concat(n.y,") with adequate movement space")))}}else console.log("Skipped animal spawn at (".concat(n.x,", ").concat(n.y,") - insufficient adjacent passable space"))}}if(.8>Math.random()){let t=l[Math.floor(Math.random()*l.length)];if(t){let e={x:t.x+1,y:t.y+1},n="".concat(e.x,",").concat(e.y);if(!i.has(n)&&!(null==a?void 0:a(e.x,e.y))){let t=s(e.x,e.y);if(this.isValidNPCTerrain(t)){let t={x:16*e.x,y:16*e.y},s=this.createTraderNPC("trader",t);s&&(r.push(s),i.set(n,s),console.log("Generated trader at tile (".concat(e.x,", ").concat(e.y,")")))}}}}return i.set(n,{type:"village_marker",position:{x:16*t,y:16*e}}),r}generateMineOrDungeon(t,e,i){let s="".concat(t,",").concat(e);if(i.has(s))return null;for(let s=-15;s<=15;s++)for(let a=-15;a<=15;a++){if(0===s&&0===a)continue;let r="".concat(t+s,",").concat(e+a),n=i.get(r);if(n&&("mine_entrance"===n.type||"dungeon_entrance"===n.type))return null}if(Math.random()>.3)return null;let a=.7>Math.random()?"mine_entrance":"dungeon_entrance",r=this.createStructurePOI(a,{x:16*t,y:16*e});return r&&i.set(s,r),r}generateAnimal(t,e,i){let s="".concat(t,",").concat(e);if(i.has(s))return null;let a=16*t,r=16*e;if(.85>this.animalNoise(a/500,r/500)||!this.hasAdjacentPassableSpace(t,e,i))return null;let n=this.selectAnimalTypeWithGrouping(t,e,i);if(!n)return null;let o=this.createAnimalNPC(n,{x:a,y:r});return o&&(i.set(s,o),console.log("Generated wild ".concat(n," at tile (").concat(t,", ").concat(e,") with species grouping"))),o}generateMonster(t,e,i){let s="".concat(t,",").concat(e);if(i.has(s))return null;let a=16*t,r=16*e;if(.98>this.animalNoise(a/800,r/800)||Math.random()>.2)return null;let n=this.createMonsterNPC("orc",{x:a,y:r});return n&&i.set(s,n),n}createStructurePOI(t,e){try{let i=new v({type:t,position:e,interactable:!0,passable:t.includes("entrance"),animated:"windmill_frame_0"===t});return{type:t,position:e,poi:i}}catch(e){return console.warn("Failed to create POI structure ".concat(t,":"),e),null}}createAnimalNPC(t,e){try{let i=new I({type:t,position:e,aggressive:!1});return{type:t,position:e,npc:i}}catch(e){return console.warn("Failed to create animal NPC ".concat(t,":"),e),null}}createMonsterNPC(t,e){try{let i=new I({type:t,position:e,aggressive:!0});return{type:t,position:e,npc:i}}catch(e){return console.warn("Failed to create monster NPC ".concat(t,":"),e),null}}createTraderNPC(t,e){try{let i=new I({type:t,position:e,aggressive:!1});return{type:t,position:e,npc:i}}catch(e){return console.warn("Failed to create trader NPC ".concat(t,":"),e),null}}getVillageCenter(t,e){return this.villageNoise(t/1e3,e/1e3)>this.VILLAGE_THRESHOLD?{x:20*Math.floor(Math.floor(t/16)/20)*16,y:20*Math.floor(Math.floor(e/16)/20)*16}:null}isValidPOITerrain(t){return"DEEP_WATER"!==t&&"SHALLOW_WATER"!==t&&"STONE"!==t}isValidNPCTerrain(t){return"DEEP_WATER"!==t&&"STONE"!==t}checkForVillageAnimalPlacement(t,e,i,s,a){for(let r of[{dx:5,dy:5},{dx:-5,dy:5},{dx:5,dy:-5},{dx:-5,dy:-5},{dx:7,dy:0},{dx:-7,dy:0},{dx:0,dy:7},{dx:0,dy:-7},{dx:3,dy:7},{dx:-3,dy:7},{dx:7,dy:3},{dx:-7,dy:-3}]){let n=t-r.dx,o=e-r.dy,l="".concat(n,",").concat(o),c=s.get(l);if(c&&"windmill_frame_0"===c.type){if(this.isValidNPCTerrain(i))if(this.hasAdjacentPassableSpace(t,e,s)){let i=this.selectAnimalTypeWithGrouping(t,e,s);if(i){let r={x:16*t,y:16*e},l=this.createAnimalNPC(i,r);l&&(a.push(l),s.set("".concat(t,",").concat(e),l),console.log("Generated village ".concat(i," at tile (").concat(t,", ").concat(e,") for village at (").concat(n,", ").concat(o,") with species grouping")))}}else console.log("Skipped village animal at (".concat(t,", ").concat(e,") - insufficient movement space"));break}}}hasAdequateAnimalSpacing(t,e,i,s){for(let a=-2;a<=2;a++)for(let r=-2;r<=2;r++){if(0===a&&0===r)continue;let n=t+a,o=e+r,l="".concat(n,",").concat(o),c=i.get(l);if(null==c?void 0:c.npc)return console.log("Spacing violation: Animal already exists at (".concat(n,",").concat(o,"), too close to proposed spawn at (").concat(t,",").concat(e,")")),!1;if((null==s?void 0:s(n,o))&&Math.abs(a)+Math.abs(r)<=1)return console.log("Spacing violation: Adjacent tile (".concat(n,",").concat(o,") is occupied, blocking spawn at (").concat(t,",").concat(e,")")),!1}let a=0;for(let r of[{x:t+1,y:e},{x:t-1,y:e},{x:t,y:e+1},{x:t,y:e-1}]){let t="".concat(r.x,",").concat(r.y);if(!i.has(t)&&!(null==s?void 0:s(r.x,r.y))){let t=this.getTileTypeForCoords(r.x,r.y);this.isValidNPCTerrain(t)&&"DEEP_WATER"!==t&&"STONE"!==t&&a++}}return!(a<3)||(console.log("Movement violation: Only ".concat(a," passable adjacent tiles at (").concat(t,",").concat(e,"), need at least 3")),!1)}hasAdjacentPassableSpace(t,e,i,s){return this.hasAdequateAnimalSpacing(t,e,i,s)}selectAnimalTypeWithGrouping(t,e,i){var s,a;let r=["chicken","pig","sheep"],n={chicken:0,pig:0,sheep:0};for(let a=-4;a<=4;a++)for(let o=-4;o<=4;o++){if(0===a&&0===o)continue;let l=t+a,c=e+o,h="".concat(l,",").concat(c),u=i.get(h);(null==u?void 0:u.npc)&&u.type&&r.includes(u.type)&&(n[u.type]=(null!=(s=n[u.type])?s:0)+1)}let o=[];for(let t of r){let e=null!=(a=n[t])?a:0;if(e>0){for(let e=0;e<3;e++)o.push(t);console.log("Found ".concat(e," nearby ").concat(t,"(s), applying grouping bonus"))}else o.push(t)}let l=o[Math.floor(Math.random()*o.length)];return null!=l?l:r[0]}constructor(t){this.VILLAGE_THRESHOLD=.85;let e=this.hashSeed(null!=t?t:"default");this.villageNoise=(0,l.fu)(()=>1.1*e),this.structureNoise=(0,l.fu)(()=>2.3*e),this.animalNoise=(0,l.fu)(()=>3.7*e),this.mineNoise=(0,l.fu)(()=>4.9*e)}}class E{generateChunk(t,e,i){let s=[],a=[],r=(a,r)=>{var n,o,l,c,h,u,p;let d=a-t*i,g=r-e*i;if(d<0||d>=i||g<0||g>=i)return!0;let m=null==(n=s[g])?void 0:n[d];if(!m)return!1;let y=(null!=(h=null==(o=m.villageStructures)?void 0:o.length)?h:0)>0,f=null!=(u=null==(l=m.trees)?void 0:l.some(t=>t.getHealth()>0))&&u,S=null!=(p=null==(c=m.cactus)?void 0:c.some(t=>t.getHealth()>0))&&p;return"DEEP_WATER"===m.value||"STONE"===m.value||f||S||y},n=(t,e)=>{if(r(t,e))return!0;let i="".concat(t,",").concat(e);if(this.villageStructures.has(i)){let t=this.villageStructures.get(i);if(null==t?void 0:t.npc)return!0}for(let i of a)if(i.npc){let s=Math.floor(i.position.x/16),a=Math.floor(i.position.y/16);if(s===t&&a===e)return!0}return!1};for(let a=0;a<i;a++){let r=[];for(let s=0;s<i;s++){let n=t*i+s,o=e*i+a,l=this.generateHeight(n,o),c=this.generateTemperature(n,o),h=this.generateHumidity(n,o),{value:u,flowDirection:p}=this.generateRiver(n,o,l),d=this.getTileTypeFromClimate(l,c,h,u,p),g={x:n,y:o,value:d,height:l,temperature:c,humidity:h,riverValue:u,flowDirection:p};"FOREST"===d?g.trees=this.generateTrees(n,o,1):"GRASS"===d&&(g.trees=this.generateTrees(n,o,.05)),"SAND"===d&&(g.cactus=this.generateCactus(n,o,.05));let m=this.getSpriteIdForTile(d,n,o);m&&(g.spriteId=m),r.push(g)}s.push(r)}for(let r=0;r<i;r++)for(let o=0;o<i;o++){let l=t*i+o,c=e*i+r,h=s[r][o],u=this.villageGenerator.generateVillageStructures(l,c,h.value,this.villageStructures,n);u.length>0&&(h.villageStructures=u,a.push(...u),console.log("Added ".concat(u.length," structures to tile (").concat(l,", ").concat(c,")")))}return s}generateHeight(t,e){let i=.02*t,s=.02*e,a=.5*this.heightNoise(i,s);return a+=.25*this.heightNoise(2*i,2*s),a+=.125*this.heightNoise(4*i,4*s),a+=.0625*this.heightNoise(8*i,8*s),a=Math.pow(a=(a+1)/2,1.2)}generateTemperature(t,e){let i=.01*t,s=.01*e,a=.5*this.temperatureNoise(i,s);return a+=.25*this.temperatureNoise(2*i,2*s)+.125*this.temperatureNoise(4*i,4*s),a=(a+1)/2}generateHumidity(t,e){let i=.015*t,s=.015*e,a=.5*this.humidityNoise(i,s);return a+=.25*this.humidityNoise(2*i,2*s)+.125*this.humidityNoise(4*i,4*s),a=(a+1)/2}generateRiver(t,e,i){let s=.03*t,a=.03*e,r=.5*this.riverNoise(s,a);r+=.25*this.riverNoise(2*s,2*a)+.125*this.riverNoise(4*s,4*a);let n=.5*this.riverPathNoise(.05*t,.05*e);n+=.25*this.riverPathNoise(.05*t*2,.05*e*2)+.125*this.riverPathNoise(.05*t*4,.05*e*4),n=(n+1)/2;let o=this.calculateFlowDirection(t,e,i);return r*=Math.pow(1-Math.abs(i-.3),2)*(.5+.5*n),{value:r+=(Math.random()-.5)*.05,flowDirection:o}}calculateFlowDirection(t,e,i){let s=i,a=0;return[{dx:1,dy:0},{dx:1,dy:1},{dx:0,dy:1},{dx:-1,dy:1},{dx:-1,dy:0},{dx:-1,dy:-1},{dx:0,dy:-1},{dx:1,dy:-1}].forEach((i,r)=>{let n=this.generateHeight(t+i.dx,e+i.dy);n<s&&(s=n,a=Math.PI/4*r)}),a}getTileTypeFromClimate(t,e,i,s,a){if(s>.75&&t>.2&&t<.8){let t=.1*Math.sin(2*a);if(Math.abs(s-.75)<.1+t)return"RIVER";if(Math.abs(s-.75)<.1+t+.05)return"SAND"}return t<.35?t<.3?"DEEP_WATER":"SHALLOW_WATER":e<.2?t>.8?"SNOW":t>.7?"STONE":t>.65?"COBBLESTONE":i>.6?"FOREST":i>.3?"GRASS":"STONE":e<.4?t>.7?"SNOW":t>.65?"STONE":t>.6?"COBBLESTONE":i>.7?"FOREST":i>.4?"GRASS":i>.2?"SAND":"STONE":e<.7?t>.6?"STONE":t>.55?"COBBLESTONE":i>.7?"FOREST":i>.4?"GRASS":t<.25&&i>.3?.7>Math.random()?"CLAY":"MUD":t<.25||i<.3?"SAND":"GRASS":t>.5?"STONE":t>.45?"COBBLESTONE":i>.6?"GRASS":t<.25?i>.3?.8>Math.random()?"CLAY":"MUD":"SAND":i<.5||.7>Math.random()?"SAND":"GRASS"}generateTile(t,e){let i=this.generateHeight(t,e),s=this.generateTemperature(t,e),a=this.generateHumidity(t,e),{value:r,flowDirection:n}=this.generateRiver(t,e,i),o=this.getTileTypeFromClimate(i,s,a,r,n),l={x:t,y:e,value:o,height:i,temperature:s,humidity:a,riverValue:r,flowDirection:n};"FOREST"===o?l.trees=this.generateTrees(t,e,1):"GRASS"===o&&(l.trees=this.generateTrees(t,e,.05)),"SAND"===o&&(l.cactus=this.generateCactus(t,e,.05));let c=this.getSpriteIdForTile(o,t,e);return c&&(l.spriteId=c),l}generateTrees(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=[];if(Math.random()>i)return s;let a=t*E.TILE_SIZE+E.TILE_SIZE/2,r=e*E.TILE_SIZE+E.TILE_SIZE/2,n=Math.random(),o=g.YOUNG;return n<.1?o=g.FULL:n<.3&&(o=g.TALL),s.push(new m({x:a,y:r,initialStage:o,growthTimePerStage:36e5})),s}generateCactus(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,s=[];if(Math.random()>i)return s;let a=t*E.TILE_SIZE+E.TILE_SIZE/2,r=e*E.TILE_SIZE+E.TILE_SIZE/2,n=[y.VARIANT_1,y.VARIANT_2,y.VARIANT_3],o=n[Math.floor(Math.random()*n.length)],l=Math.random(),c=0;return l<.2&&(c=1,o===y.VARIANT_2&&l<.1&&(c=2)),s.push(new f({x:a,y:r,variant:o,initialStage:c,growthTimePerStage:6e5})),s}getSpriteIdForTile(t,e,i){switch(t){case"GRASS":if(void 0!==e&&void 0!==i){let t=Math.abs(31*e+17*i)%6,s=Math.floor(t/3);return"/sprites/Ground/TexturedGrass.png#".concat(t%3,",").concat(s)}return"/sprites/Ground/TexturedGrass.png#0,0";case"SAND":return"/sprites/Ground/Shore.png#0,0";case"SHALLOW_WATER":return"/sprites/Ground/Shore.png#2,0";case"DEEP_WATER":return"/sprites/Ground/Shore.png#4,0";default:return}}constructor(t){this.villageStructures=new Map,this.seed=null!=t?t:Math.random().toString(36).substring(2);let e=h()(this.seed);this.heightNoise=(0,l.fu)(e),this.temperatureNoise=(0,l.fu)(e),this.humidityNoise=(0,l.fu)(e),this.riverNoise=(0,l.fu)(e),this.riverPathNoise=(0,l.fu)(e),this.villageGenerator=new T(this.seed)}}E.TILE_SIZE=16;class x{setMoveCallback(t){this.onMoveCallback=t}setDirectionChangeCallback(t){this.onDirectionChangeCallback=t}canMoveToTile(t){if(!t||"DEEP_WATER"===t.value||"STONE"===t.value||t.trees&&t.trees.length>0&&t.trees.some(t=>t.getHealth()>0)||t.cactus&&t.cactus.length>0&&t.cactus.some(t=>t.getHealth()>0))return!1;if(t.villageStructures&&t.villageStructures.length>0){for(let e of t.villageStructures)if(e.poi&&!e.poi.passable||e.npc&&!e.npc.isDead())return!1}return!0}canMoveFromMud(){return Math.random()<1/3}canMoveFromSnow(){return Math.random()<1/4}canMoveFromShallowWater(){return Math.random()<1/3}update(t,e){var i,s,a,r;if(this.moveCooldown>0&&(this.moveCooldown-=16,this.moveCooldown>0))return;let n=this.world.getTile(t.position.x/this.TILE_SIZE,t.position.y/this.TILE_SIZE);if((null==n?void 0:n.value)==="MUD"&&!this.canMoveFromMud()||(null==n?void 0:n.value)==="SNOW"&&!this.canMoveFromSnow()||(null==n?void 0:n.value)==="SHALLOW_WATER"&&!this.canMoveFromShallowWater())return;let o=!1,l=!1,c=null,h={...t.position};if(e.wasKeyJustPressed("up")||e.isKeyPressed("up")?(h.y-=this.TILE_SIZE,o=!0,c="up"):e.wasKeyJustPressed("down")||e.isKeyPressed("down")?(h.y+=this.TILE_SIZE,o=!0,c="down"):e.wasKeyJustPressed("left")||e.isKeyPressed("left")?(h.x-=this.TILE_SIZE,o=!0,c="left"):(e.wasKeyJustPressed("right")||e.isKeyPressed("right"))&&(h.x+=this.TILE_SIZE,o=!0,c="right"),o){let e=this.world.getTile(h.x/this.TILE_SIZE,h.y/this.TILE_SIZE);if(this.canMoveToTile(e))t.position=h,l=!0;else{let t="".concat(null!=(a=null==e?void 0:e.value)?a:"UNKNOWN"," tile");if(null==e||null==(i=e.trees)?void 0:i.some(t=>t.getHealth()>0))t+=" (blocked by tree)";else if(null==e||null==(s=e.cactus)?void 0:s.some(t=>t.getHealth()>0))t+=" (blocked by cactus)";else if(null==e?void 0:e.villageStructures){let i=e.villageStructures.filter(t=>t.poi&&!t.poi.passable||t.npc&&!t.npc.isDead());if(i.length>0){let e=i.map(t=>t.poi?t.poi.type:t.npc?t.npc.type:"unknown").join(", ");t+=" (blocked by ".concat(e,")")}}console.log("Movement blocked - cannot move to ".concat(t))}c&&this.onDirectionChangeCallback&&this.onDirectionChangeCallback(c,l)}if(l){t.position.x=Math.round(t.position.x/this.TILE_SIZE)*this.TILE_SIZE,t.position.y=Math.round(t.position.y/this.TILE_SIZE)*this.TILE_SIZE,this.moveCooldown=this.moveDelay;let e=this.world.getTile(t.position.x/this.TILE_SIZE,t.position.y/this.TILE_SIZE),i=null!=(r=null==e?void 0:e.value)?r:"UNKNOWN";if((null==e?void 0:e.trees)&&e.trees.length>0){let t=e.trees[0];i+=" (Tree: ".concat(null==t?void 0:t.getHealth(),"/").concat(null==t?void 0:t.getMaxHealth()," HP)")}if((null==e?void 0:e.cactus)&&e.cactus.length>0){let t=e.cactus[0];i+=" (Cactus: ".concat(null==t?void 0:t.getHealth(),"/").concat(null==t?void 0:t.getMaxHealth()," HP)")}if((null==e?void 0:e.villageStructures)&&e.villageStructures.length>0){let t=e.villageStructures.map(t=>t.poi?t.poi.type:t.npc?"".concat(t.npc.type," NPC"):"unknown").join(", ");i+=" (Structures: ".concat(t,")")}console.log("Current tile:",i),this.onMoveCallback&&c&&this.onMoveCallback(c)}}constructor(t){this.TILE_SIZE=E.TILE_SIZE,this.moveCooldown=0,this.moveDelay=120,this.world=t}}class w{getTile(t,e){var i,s;if(!(t<0)&&!(e<0)&&!(t>=this.size)&&!(e>=this.size)){if(null!=(i=this.tiles)[e]||(i[e]=[]),!this.tiles[e][t]){let i=this.chunkX*this.size+t,s=this.chunkY*this.size+e;this.tiles[e][t]=this.generator.generateTile(i,s)}return this.tiles[e][t]}}setTile(t,e,i){var s,a;if(t<0||e<0||t>=this.size||e>=this.size)return;null!=(s=this.tiles)[e]||(s[e]=[]),this.tiles[e][t]=i;let r="".concat(t,",").concat(e);this.entityData.modifiedTiles.set(r,i)}addTree(t,e,i){let s="".concat(t,",").concat(e);this.entityData.trees.set(s,i)}removeTree(t,e){let i="".concat(t,",").concat(e);this.entityData.trees.delete(i)}getTree(t,e){let i="".concat(t,",").concat(e);return this.entityData.trees.get(i)}addCactus(t,e,i){let s="".concat(t,",").concat(e);this.entityData.cactus.set(s,i)}removeCactus(t,e){let i="".concat(t,",").concat(e);this.entityData.cactus.delete(i)}getCactus(t,e){let i="".concat(t,",").concat(e);return this.entityData.cactus.get(i)}getAllTrees(){return this.entityData.trees}getAllCactus(){return this.entityData.cactus}getModifiedTiles(){return this.entityData.modifiedTiles}addNPC(t,e,i){var s;if(t<0||e<0||t>=this.size||e>=this.size)return!1;let a="".concat(t,",").concat(e),r=this.getTile(t,e);return!(!r||this.isTileOccupied(t,e))&&(i.npc&&!this.hasAdequateNPCSpacing(t,e)?(console.log("NPC spacing check failed at chunk tile (".concat(t,",").concat(e,")")),!1):(this.entityData.npcStructures.set(a,i),r.villageStructures=null!=(s=r.villageStructures)?s:[],r.villageStructures.push(i),!0))}hasAdequateNPCSpacing(t,e){for(let i=-2;i<=2;i++)for(let s=-2;s<=2;s++){if(0===i&&0===s)continue;let a=t+i,r=e+s;if(a<0||a>=this.size||r<0||r>=this.size)continue;let n="".concat(a,",").concat(r),o=this.entityData.npcStructures.get(n);if(null==o?void 0:o.npc)return!1;let l=this.getTile(a,r);if(null==l?void 0:l.villageStructures){for(let t of l.villageStructures)if(t.npc)return!1}}return!0}removeNPC(t,e){if(t<0||e<0||t>=this.size||e>=this.size)return!1;let i="".concat(t,",").concat(e),s=this.getTile(t,e);if(!s)return!1;let a=this.entityData.npcStructures.get(i);return!!a&&(this.entityData.npcStructures.delete(i),s.villageStructures&&(s.villageStructures=s.villageStructures.filter(t=>t!==a),0===s.villageStructures.length&&delete s.villageStructures),!0)}moveNPC(t,e,i,s){var a,r,n,o,l;let c="".concat(t,",").concat(e),h="".concat(i,",").concat(s),u=this.entityData.npcStructures.get(c);if(!(null==u?void 0:u.npc))return!1;if(t===i&&e===s)return!0;if(i<0||i>=this.size||s<0||s>=this.size)return!1;let p=this.getTile(i,s);if(!p)return!1;let d="DEEP_WATER"===p.value||"STONE"===p.value,g=null!=(n=null==(a=p.trees)?void 0:a.some(t=>t.getHealth()>0))&&n,m=null!=(o=null==(r=p.cactus)?void 0:r.some(t=>t.getHealth()>0))&&o;if(d||g||m||this.isTileOccupied(i,s,u.npc))return!1;this.removeNPC(t,e),this.entityData.npcStructures.set(h,u),p.villageStructures=null!=(l=p.villageStructures)?l:[],p.villageStructures.push(u);let y=this.chunkX*this.size+i,f=this.chunkY*this.size+s;return u.position={x:16*y,y:16*f},u.npc.position={x:16*y,y:16*f},!0}isTileOccupied(t,e,i){var s,a;let r=this.getTile(t,e);if(!r||"DEEP_WATER"===r.value||"STONE"===r.value||(null==(s=r.trees)?void 0:s.some(t=>t.getHealth()>0))||(null==(a=r.cactus)?void 0:a.some(t=>t.getHealth()>0)))return!0;if(r.villageStructures){for(let t of r.villageStructures)if(t.poi&&!t.poi.passable||t.npc&&!t.npc.isDead()&&t.npc!==i)return!0}return!1}getNPC(t,e){let i="".concat(t,",").concat(e);return this.entityData.npcStructures.get(i)}getAllNPCs(){return this.entityData.npcStructures}hasModifications(){return this.entityData.modifiedTiles.size>0||this.entityData.trees.size>0||this.entityData.cactus.size>0||this.entityData.npcStructures.size>0}constructor(t,e,i,s,a){this.chunkX=t,this.chunkY=e,this.size=i,this.tiles=s,this.generator=a,this.entityData={trees:new Map,cactus:new Map,modifiedTiles:new Map,npcStructures:new Map}}}var M=i(6311);class _{setAnimationSystem(t){this.animationSystem=t}invalidateCache(){this.cacheValid=!1}moveNPCBetweenTiles(t,e,i,s,a){let r=this.getOrCreateChunk(Math.floor(e/_.CHUNK_SIZE),Math.floor(i/_.CHUNK_SIZE)),n=this.getOrCreateChunk(Math.floor(s/_.CHUNK_SIZE),Math.floor(a/_.CHUNK_SIZE)),o=(e%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,l=(i%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,c=(s%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,h=(a%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE;if(n.isTileOccupied(c,h,t.npc)){t.npc&&(t.npc.position={x:e*this.TILE_SIZE,y:i*this.TILE_SIZE},t.position={x:e*this.TILE_SIZE,y:i*this.TILE_SIZE});return}r!==n?(r.removeNPC(o,l),n.addNPC(c,h,t)||(t.npc&&(t.npc.position={x:e*this.TILE_SIZE,y:i*this.TILE_SIZE},t.position={x:e*this.TILE_SIZE,y:i*this.TILE_SIZE}),r.addNPC(o,l,t))):!r.moveNPC(o,l,c,h)&&t.npc&&(t.npc.position={x:e*this.TILE_SIZE,y:i*this.TILE_SIZE},t.position={x:e*this.TILE_SIZE,y:i*this.TILE_SIZE}),this.invalidateCache()}update(t,e,i){this.updateDirtRegeneration(t),this.updateVillageStructures(t,e,i)}updateDirtRegeneration(t){for(let[i,s]of this.visibleTileCache)if("DIRT"===s.value){var e;null!=s.dirtTimer||(s.dirtTimer=0),s.dirtTimer+=1e3*t,s.dirtTimer>=3e4&&(s.value="GRASS",s.dirtTimer=void 0,this.invalidateCache(),console.log("DIRT tile regenerated to GRASS at (".concat(s.x,", ").concat(s.y,")")))}}updateVillageStructures(t,e,i){if(!e)return;this.currentPlayerPosition=e,this.movementIntentions.clear();let s=this.camera,a=E.TILE_SIZE,r=Math.max(Math.ceil(s.viewWidth/a)+5,Math.ceil(s.viewHeight/a)+5)/2,n=[],o=[],l=[];for(let t of this.chunks.values())for(let[i,s]of t.getAllNPCs())if(s.npc&&!s.npc.isDead()&&(n.push(s.npc),Math.sqrt(Math.pow(s.npc.position.x-e.x,2)+Math.pow(s.npc.position.y-e.y,2))/this.TILE_SIZE<=r)){let e=i.split(",").map(Number);2===e.length&&l.push({npc:s.npc,structure:s,tileX:t.chunkX*_.CHUNK_SIZE+e[0],tileY:t.chunkY*_.CHUNK_SIZE+e[1]})}for(let[t,i]of(n.length>0&&.01>Math.random()&&console.log("[DEBUG] Found ".concat(n.length," total NPCs, ").concat(l.length," NPCs to update within ").concat(r," tiles of player at (").concat(Math.round(e.x/16),",").concat(Math.round(e.y/16),")")),this.visibleTileCache))if(i.villageStructures)for(let t of i.villageStructures)t.poi&&(t.type.includes("market")||t.type.includes("windmill"))&&o.push(t.position);for(let[e,i]of this.visibleTileCache)if(i.villageStructures)for(let e of i.villageStructures)e.poi&&e.poi.update(t);for(let t of l){let{npc:s}=t,a=null!=e?e:{x:0,y:0},r=null!=i?i:[],o=n.filter(t=>t!==s&&Math.sqrt(Math.pow(t.position.x-s.position.x,2)+Math.pow(t.position.y-s.position.y,2))/16<=10),l=s.getMovementIntention(a,r,o);if(l){let t=Math.floor(l.x/this.TILE_SIZE),e=Math.floor(l.y/this.TILE_SIZE),i="".concat(t,",").concat(e);this.movementIntentions.set(i,s)}}for(let s of(this.movementIntentions.size>0&&.02>Math.random()&&console.log("[MOVEMENT INTENTIONS] Collected ".concat(this.movementIntentions.size," intentions:"),Array.from(this.movementIntentions.entries()).map(t=>{let[e,i]=t;return"".concat(i.type,"@(").concat(Math.floor(i.position.x/16),",").concat(Math.floor(i.position.y/16),") → ").concat(e)}).join(", ")),l)){let{npc:a,structure:r,tileX:l,tileY:c}=s,h=null!=e?e:{x:0,y:0},u=null!=i?i:[],p=n.filter(t=>t!==a&&Math.sqrt(Math.pow(t.position.x-a.position.x,2)+Math.pow(t.position.y-a.position.y,2))/16<=10),d=o.filter(t=>Math.sqrt(Math.pow(t.x-a.position.x,2)+Math.pow(t.y-a.position.y,2))/16<=15),g=Math.floor(a.position.x/this.TILE_SIZE),m=Math.floor(a.position.y/this.TILE_SIZE);a.update(t,h,u,p,d);let y=Math.floor(a.position.x/this.TILE_SIZE),f=Math.floor(a.position.y/this.TILE_SIZE);(g!==y||m!==f)&&(console.log("NPC ".concat(a.type," moving from tile (").concat(g,",").concat(m,") to (").concat(y,",").concat(f,")")),this.moveNPCBetweenTiles(r,g,m,y,f)),a.breedingRequest&&this.handleBreedingRequest(a)}}render(t,e){for(let[i,s]of(this.lastCameraX===e.position.x&&this.lastCameraY===e.position.y&&this.lastViewWidth===e.viewWidth&&this.lastViewHeight===e.viewHeight&&this.cacheValid||(this.updateVisibleTileCache(e,t),this.lastCameraX=e.position.x,this.lastCameraY=e.position.y,this.lastViewWidth=e.viewWidth,this.lastViewHeight=e.viewHeight,this.cacheValid=!0),this.visibleTileCache)){let a=i.split(",").map(Number);if(2!==a.length||void 0===a[0]||void 0===a[1])continue;let r=a[0],n=a[1],o=e.worldToScreen(r*this.TILE_SIZE,n*this.TILE_SIZE);this.renderTile(t,s,o.x,o.y)}}updateVisibleTileCache(t,e){this.visibleTileCache.clear();let i=Math.floor(t.position.x/this.TILE_SIZE)-2,s=Math.floor(t.position.y/this.TILE_SIZE)-2,a=Math.ceil(e.canvas.width/this.TILE_SIZE)+4,r=Math.ceil(e.canvas.height/this.TILE_SIZE)+4;for(let t=0;t<=r;t++)for(let e=0;e<=a;e++){let a=i+e,r=s+t,n=this.getTile(a,r),o="".concat(a,",").concat(r);this.visibleTileCache.set(o,n)}}renderTile(t,e,i,s){let a=i-this.TILE_SIZE/2,r=s-this.TILE_SIZE/2;if(t.fillStyle=this.getTileColor(e.value),t.fillRect(a+1,r+1,this.TILE_SIZE-2,this.TILE_SIZE-2),e.spriteId&&this.spriteGenerator.renderSprite(t,e.spriteId,a+1,r+1),e.villageStructures){for(let i of e.villageStructures)i.poi&&i.poi.render(t,a+1,r+1);for(let i of e.villageStructures)i.npc&&!i.npc.isDead()&&i.npc.render(t,a+1,r+1)}}getTileColor(t){switch(t){case"DEEP_WATER":return"#00008B";case"SHALLOW_WATER":return"#4169E1";case"RIVER":return"#1E90FF";case"SAND":return"#F4A460";case"GRASS":return"#90EE90";case"MUD":return"#8B4513";case"DIRT":return"#CD853F";case"CLAY":return"#CD7F32";case"FOREST":return"#006400";case"GRAVEL":return"#B8B8B8";case"COBBLESTONE":return"#A9A9A9";case"STONE":return"#808080";case"SNOW":return"#FFFFFF";case"PLAYER":return"red";default:return"#000000"}}chunkKey(t,e){return"".concat(t,",").concat(e)}getOrCreateChunk(t,e){let i=this.chunkKey(t,e),s=this.chunks.get(i);if(!s){let a=this.generator.generateChunk(t,e,_.CHUNK_SIZE);s=new w(t,e,_.CHUNK_SIZE,a,this.generator),this.chunks.set(i,s),this.animationSystem&&(this.registerChunkTrees(s,a),this.registerChunkCactus(s,a),this.registerChunkVillageStructures(s,a))}return s}registerChunkTrees(t,e){if(this.animationSystem){for(let t of e)for(let e of t)if(e.trees)for(let t of e.trees){let i="".concat(e.x,",").concat(e.y);this.animationSystem.addTree(i,t)}}}registerChunkCactus(t,e){if(this.animationSystem){for(let t of e)for(let e of t)if(e.cactus)for(let t of e.cactus){let i="".concat(e.x,",").concat(e.y);this.animationSystem.addCactus(i,t)}}}registerChunkVillageStructures(t,e){for(let i of e)for(let e of i)if(e.villageStructures){let i=0,s=0;for(let t of e.villageStructures)t.npc&&i++,t.poi&&s++;for(let a of(i+s>1&&(console.error("[ERROR] Tile (".concat(e.x,",").concat(e.y,") has ").concat(i," NPCs and ").concat(s," POIs - violates one-entity-per-tile rule!")),console.error("[ERROR] Structures:",e.villageStructures.map(t=>t.type))),e.villageStructures)){if(a.npc){a.npc.setTileCollisionCallback(t=>{let e=Math.floor(t.x/this.TILE_SIZE),i=Math.floor(t.y/this.TILE_SIZE);return this.isTileOccupiedByOthers(e,i,a.npc)}),a.npc.setSpeculativeMovementCallback((t,e)=>{let i=Math.floor(t.x/this.TILE_SIZE),s=Math.floor(t.y/this.TILE_SIZE);return this.checkSpeculativeMovement(i,s,e)});let i=(e.x%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,s=(e.y%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE;t.getAllNPCs().set("".concat(i,",").concat(s),a)}a.poi&&console.log("Village POI ".concat(a.type," registered at ").concat(e.x,",").concat(e.y))}}}getTile(t,e){let i=Math.floor(t/_.CHUNK_SIZE),s=Math.floor(e/_.CHUNK_SIZE),a=(t%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,r=(e%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,n=this.getOrCreateChunk(i,s),o=n.getTile(a,r);return o||(o=this.generator.generateTile(t,e),n.setTile(a,r,o)),o}setTile(t,e,i){let s=Math.floor(t/_.CHUNK_SIZE),a=Math.floor(e/_.CHUNK_SIZE),r=(t%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,n=(e%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,o=this.getOrCreateChunk(s,a),l=o.getTile(r,n);l&&(l.prevValue=l.value,l.value=i,l.interacted=!0,o.setTile(r,n,l),this.invalidateCache())}setPlayerPosition(t,e,i,s){let a=this.getTile(t,e);if(a){var r;a.value=null!=(r=a.prevValue)?r:this.generator.generateTile(t,e).value,a.interacted=!1}let n=this.getTile(i,s);n&&(n.prevValue=n.value,n.value="PLAYER",n.interacted=!0),this.invalidateCache()}getVisibleChunks(t,e,i,s){let a=E.TILE_SIZE,r=Math.floor(t/a),n=Math.floor(e/a),o=Math.ceil((t+i)/a),l=Math.ceil((e+s)/a),c=[];for(let t=Math.floor(n/_.CHUNK_SIZE);t<=Math.floor(l/_.CHUNK_SIZE);t++)for(let e=Math.floor(r/_.CHUNK_SIZE);e<=Math.floor(o/_.CHUNK_SIZE);e++)c.push(this.getOrCreateChunk(e,t));return c}isTileOccupiedByOthers(t,e,i){var s,a;let r=Math.floor(t/_.CHUNK_SIZE),n=Math.floor(e/_.CHUNK_SIZE),o=(t%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,l=(e%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,c=this.chunks.get(this.chunkKey(r,n));if(!c)return!1;let h=c.getTile(o,l);if(!h||"DEEP_WATER"===h.value||"STONE"===h.value||(null==(s=h.trees)?void 0:s.some(t=>t.getHealth()>0))||(null==(a=h.cactus)?void 0:a.some(t=>t.getHealth()>0)))return!0;if(h.villageStructures){for(let t of h.villageStructures)if(t.poi&&!t.poi.passable||t.npc&&!t.npc.isDead()&&t.npc!==i)return!0}if(this.currentPlayerPosition){let i=Math.floor(this.currentPlayerPosition.x/this.TILE_SIZE),s=Math.floor(this.currentPlayerPosition.y/this.TILE_SIZE);if(i===t&&s===e)return!0}return!1}checkSpeculativeMovement(t,e,i){let s=Math.floor(t/_.CHUNK_SIZE),a=Math.floor(e/_.CHUNK_SIZE),r=(t%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,n=(e%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,o=this.chunks.get(this.chunkKey(s,a));if(!o)return!1;let l=o.getTile(r,n);if(!(null==l?void 0:l.villageStructures))return!1;let c=null;for(let t of l.villageStructures)if(t.npc&&!t.npc.isDead()&&t.npc!==i){c=t.npc;break}if(!c)return!1;let h=Math.floor(i.position.x/this.TILE_SIZE),u=Math.floor(i.position.y/this.TILE_SIZE),p="".concat(h,",").concat(u),d=Math.floor(c.position.x/this.TILE_SIZE),g=Math.floor(c.position.y/this.TILE_SIZE),m="".concat(d,",").concat(g),y=this.movementIntentions.get(p),f=this.movementIntentions.get("".concat(t,",").concat(e));if(y===c&&f===i)return console.log("[SPECULATIVE] Allowing bidirectional swap between ".concat(i.type," at (").concat(h,",").concat(u,") and ").concat(c.type," at (").concat(t,",").concat(e,")")),!0;let S=!1;for(let[s,a]of this.movementIntentions)if(a===c&&s!==m){S=!0,console.log("[SPECULATIVE] ".concat(c.type," at (").concat(t,",").concat(e,") wants to move to ").concat(s,", allowing ").concat(i.type," to take their place"));break}return!!S||(.01>Math.random()&&(console.log("[SPECULATIVE] Cannot resolve: ".concat(i.type," wants (").concat(t,",").concat(e,") occupied by ").concat(c.type,", no movement intention found")),console.log("[DEBUG] Movement intentions:",Array.from(this.movementIntentions.entries()).map(t=>{let[e,i]=t;return"".concat(e,":").concat(i.type)}))),!1)}handleBreedingRequest(t){let e=t.breedingRequest;if(e){try{let s=new I({type:e.offspringType,position:e.offspringPosition,aggressive:!1}),a=Math.floor(e.offspringPosition.x/this.TILE_SIZE),r=Math.floor(e.offspringPosition.y/this.TILE_SIZE),n=Math.floor(a/_.CHUNK_SIZE),o=Math.floor(r/_.CHUNK_SIZE),l=(a%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,c=(r%_.CHUNK_SIZE+_.CHUNK_SIZE)%_.CHUNK_SIZE,h=this.getOrCreateChunk(n,o),u=h.getTile(l,c);if(u&&!this.isTileOccupiedByOthers(a,r)){var i;let n={type:e.offspringType,position:e.offspringPosition,npc:s};s.setTileCollisionCallback(t=>{let e=Math.floor(t.x/this.TILE_SIZE),i=Math.floor(t.y/this.TILE_SIZE);return this.isTileOccupiedByOthers(e,i,s)}),s.setSpeculativeMovementCallback((t,e)=>{let i=Math.floor(t.x/this.TILE_SIZE),s=Math.floor(t.y/this.TILE_SIZE);return this.checkSpeculativeMovement(i,s,e)}),u.villageStructures=null!=(i=u.villageStructures)?i:[],u.villageStructures.push(n),h.getAllNPCs().set("".concat(l,",").concat(c),n),console.log("\uD83D\uDC23 [BREEDING SUCCESS] New ".concat(e.offspringType," born at tile (").concat(a,",").concat(r,")! Parents: ").concat(t.type," and ").concat(e.partner.type))}else console.log("\uD83D\uDEAB [BREEDING FAILED] No space available for offspring at tile (".concat(a,",").concat(r,")"))}catch(t){console.error("❌ [BREEDING ERROR] Failed to create offspring:",t)}t.breedingRequest=void 0}}constructor(t,e){this.TILE_SIZE=E.TILE_SIZE,this.chunks=new Map,this.visibleTileCache=new Map,this.lastCameraX=0,this.lastCameraY=0,this.lastViewWidth=0,this.lastViewHeight=0,this.cacheValid=!1,this.movementIntentions=new Map,this.generator=null!=e?e:new E,this.spriteGenerator=new M.N,this.camera=t}}_.CHUNK_SIZE=16;class C{update(t){let e=E.TILE_SIZE,i=Math.round(t.x/e)*e,s=Math.round(t.y/e)*e;this.playerPosition={x:i,y:s},this.position={x:i-this.canvas.width/2,y:s-this.canvas.height/2},this.viewWidth=this.canvas.width,this.viewHeight=this.canvas.height}worldToScreen(t,e){return{x:t-this.position.x,y:e-this.position.y}}screenToWorld(t,e){return{x:t+this.position.x,y:e+this.position.y}}constructor(t){this.playerPosition={x:0,y:0},this.TILE_SIZE=E.TILE_SIZE,this.canvas=t,this.position={x:0,y:0},this.viewWidth=t.width,this.viewHeight=t.height}}class P{addTree(t,e){this.trees.set("".concat(t,"_").concat(e.x,"_").concat(e.y),e),this.animatedEntities.add(e)}removeTree(t,e){let i="".concat(t,"_").concat(e.x,"_").concat(e.y);this.trees.delete(i),this.animatedEntities.delete(e)}addCactus(t,e){this.cactus.set("".concat(t,"_").concat(e.x,"_").concat(e.y),e),this.animatedEntities.add(e)}removeCactus(t,e){let i="".concat(t,"_").concat(e.x,"_").concat(e.y);this.cactus.delete(i),this.animatedEntities.delete(e)}addAnimatedEntity(t){this.animatedEntities.add(t)}removeAnimatedEntity(t){this.animatedEntities.delete(t)}update(t){for(let e of this.animatedEntities)e.update(t)}render(t,e){let i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;for(let s of this.getVisibleTrees(e)){let a=Math.floor(s.x/16),r=Math.floor(s.y/16),n=16*a,o=16*r,l=e.worldToScreen(n,o),c=l.x-8+1,h=l.y-8+1;c>=-16&&c<=t.canvas.width+16&&h>=-16&&h<=t.canvas.height+16&&s.renderAtScreenPosition(t,c,h,i)}for(let s of this.getVisibleCactus(e)){let a=Math.floor(s.x/16),r=Math.floor(s.y/16),n=16*a,o=16*r,l=e.worldToScreen(n,o),c=l.x-8+1,h=l.y-8+1;c>=-16&&c<=t.canvas.width+16&&h>=-16&&h<=t.canvas.height+16&&s.renderAtScreenPosition(t,c,h,i)}}getVisibleTrees(t){let e=t.position.x-32,i=t.position.y-32,s=t.position.x+t.viewWidth+32,a=t.position.y+t.viewHeight+32;return this.getTreesInArea(e,i,s,a)}getVisibleCactus(t){let e=t.position.x-32,i=t.position.y-32,s=t.position.x+t.viewWidth+32,a=t.position.y+t.viewHeight+32;return this.getCactusInArea(e,i,s,a)}getTreesInArea(t,e,i,s){let a=[];for(let r of this.trees.values())r.x>=t&&r.x<=i&&r.y>=e&&r.y<=s&&a.push(r);return a}getCactusInArea(t,e,i,s){let a=[];for(let r of this.cactus.values())r.x>=t&&r.x<=i&&r.y>=e&&r.y<=s&&a.push(r);return a}getAllTrees(){return Array.from(this.trees.values())}getAllCactus(){return Array.from(this.cactus.values())}getTreeCount(){return this.trees.size}getCactusCount(){return this.cactus.size}getAnimatedEntityCount(){return this.animatedEntities.size}clear(){this.trees.clear(),this.cactus.clear(),this.animatedEntities.clear()}constructor(){this.trees=new Map,this.cactus=new Map,this.animatedEntities=new Set}}class N{addItem(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;for(let s=0;s<this.maxSlots;s++){let a=this.items[s];if(a&&a.type===t){var i;let r=(null!=(i=a.maxStack)?i:64)-a.quantity;if(r>0){let i=Math.min(e,r);if(a.quantity+=i,e-=i,console.log("Added ".concat(i," ").concat(t," to slot ").concat(s+1,". New quantity: ").concat(a.quantity)),e<=0)return this.logInventoryState(),!0}}}for(;e>0;){let i=this.items.findIndex(t=>null===t);if(-1===i)return console.log("Inventory full! Could not add ".concat(e," ").concat(t)),!1;let s=this.getMaxStackSize(t),a=Math.min(e,s);this.items[i]={id:this.generateItemId(),type:t,quantity:a,maxStack:s},e-=a,console.log("Added ".concat(a," ").concat(t," to slot ").concat(i+1))}return this.logInventoryState(),!0}removeItem(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=e;for(let s=0;s<this.maxSlots;s++){let a=this.items[s];if(a&&a.type===t){let r=Math.min(i,a.quantity);if(a.quantity-=r,i-=r,a.quantity<=0&&(this.items[s]=null),i<=0)return console.log("Removed ".concat(e," ").concat(t," from inventory")),this.logInventoryState(),!0}}return console.log("Could not remove ".concat(e," ").concat(t,". Only removed ").concat(e-i)),this.logInventoryState(),!1}selectSlot(t){if(t>=0&&t<this.maxSlots){this.selectedSlot=t;let e=this.items[t];e?console.log("Selected slot ".concat(t+1,": ").concat(e.quantity,"x ").concat(e.type)):console.log("Selected slot ".concat(t+1,": Empty"))}}getSelectedItem(){var t;return null!=(t=this.items[this.selectedSlot])?t:null}getSelectedSlot(){return this.selectedSlot}getItem(t){if(t>=0&&t<this.maxSlots){var e;return null!=(e=this.items[t])?e:null}return null}isEmpty(){return this.items.every(t=>null===t)}getItemCount(t){return this.items.filter(e=>(null==e?void 0:e.type)===t).reduce((t,e)=>{var i;return t+(null!=(i=null==e?void 0:e.quantity)?i:0)},0)}logInventoryState(){console.log("=== INVENTORY STATE ==="),this.items.forEach((t,e)=>{let i=e===this.selectedSlot?"→":" ";t?console.log("".concat(i," Slot ").concat(e+1,": ").concat(t.quantity,"x ").concat(t.type)):console.log("".concat(i," Slot ").concat(e+1,": Empty"))}),console.log("=====================")}generateItemId(){return"item_".concat(Date.now(),"_").concat(Math.random().toString(36).substring(2,9))}getMaxStackSize(t){var e;return null!=(e=({wood:64,cactus:64,stone:64})[t])?e:64}constructor(){this.selectedSlot=0,this.maxSlots=9,this.items=Array(9).fill(null)}}class k{setPosition(t){this.position={...t}}setDirection(t){this.lastDirection=t}getFacingPosition(t){switch(this.lastDirection){case"up":return{x:this.position.x,y:this.position.y-t};case"down":default:return{x:this.position.x,y:this.position.y+t};case"left":return{x:this.position.x-t,y:this.position.y};case"right":return{x:this.position.x+t,y:this.position.y}}}takeDamage(t){this.health=Math.max(0,this.health-t),console.log("Player took ".concat(t," damage. Health: ").concat(this.health,"/").concat(this.maxHealth))}heal(t){this.health=Math.min(this.maxHealth,this.health+t),console.log("Player healed ".concat(t,". Health: ").concat(this.health,"/").concat(this.maxHealth))}addToInventory(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this.inventory.addItem(t,e)}removeFromInventory(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return this.inventory.removeItem(t,e)}selectInventorySlot(t){this.inventory.selectSlot(t)}getSelectedItem(){return this.inventory.getSelectedItem()}getSelectedSlot(){return this.inventory.getSelectedSlot()}getInventoryItems(){let t=[];for(let e=0;e<9;e++)t.push(this.inventory.getItem(e));return t}openInventory(){console.log("=== PLAYER INVENTORY ==="),this.inventory.logInventoryState()}getHealthPercentage(){return this.health/this.maxHealth}isDead(){return this.health<=0}constructor(t){var e,i;this.lastDirection="down",this.position={...t.position},this.health=null!=(e=t.health)?e:100,this.maxHealth=this.health,this.attackDamage=null!=(i=t.attackDamage)?i:5,this.inventory=new N}}class A{async loadSprites(){try{for(let t of["default_item_box","highlighted_item_box","box_selector"]){let e=S[t];if(e){let i=new Image;i.src=(0,u.O)(e.spritePath),await new Promise((t,s)=>{i.onload=()=>t(),i.onerror=()=>s(Error("Failed to load ".concat(e.spritePath)))}),this.sprites.set(t,i)}}for(let t of Object.values(S).filter(t=>"inventory"===t.category))if(!this.sprites.has(t.spritePath)){let e=new Image;e.src=(0,u.O)(t.spritePath),await new Promise((i,s)=>{e.onload=()=>i(),e.onerror=()=>s(Error("Failed to load ".concat(t.spritePath)))}),this.sprites.set(t.spritePath,e)}this.imagesLoaded=!0,console.log("Inventory UI sprites loaded successfully")}catch(t){console.error("Failed to load inventory UI sprites:",t)}}render(t,e,i,s){if(!this.imagesLoaded)return;let a=t.canvas.width-this.config.marginFromEdge-this.config.slotSize,r=this.config.marginFromTop;for(let e=0;e<this.config.slotsPerColumn;e++){var n;let o=r+e*(this.config.slotSize+this.config.slotSpacing),l=null!=(n=i[e])?n:null,c=e===s;this.renderSlot(t,a,o,l,c,e+1)}}renderSlot(t,e,i,s,a,r){if(this.renderSprite(t,a?"highlighted_item_box":"default_item_box",0,e,i,this.config.slotSize,this.config.slotSize),a&&this.renderSprite(t,"box_selector",0,e-2,i-2,this.config.slotSize+4,this.config.slotSize+4),s){let a=this.getItemAsset(s.type);if(a){let r=Math.floor(.7*this.config.slotSize),n=e+(this.config.slotSize-r)/2,o=i+(this.config.slotSize-r)/2;this.renderSprite(t,s.type,a.index,n,o,r,r),s.quantity>1&&this.renderQuantity(t,e,i,s.quantity)}}this.renderSlotNumber(t,e,i,r)}renderSprite(t,e,i,s,a,r,n){let o=S[e];if(!o)return;let l=this.sprites.get(o.spritePath);if(!l)return;let c=Math.floor(l.width/16),h=16*Math.floor(i/c);t.drawImage(l,i%c*16,h,16,16,s,a,r,n)}renderQuantity(t,e,i,s){t.save(),t.fillStyle="#FFFFFF",t.strokeStyle="#000000",t.lineWidth=2,t.font="bold 12px Arial",t.textAlign="right",t.textBaseline="bottom";let a=s.toString(),r=e+this.config.slotSize-4,n=i+this.config.slotSize-4;t.strokeText(a,r,n),t.fillText(a,r,n),t.restore()}renderSlotNumber(t,e,i,s){t.save(),t.fillStyle="#CCCCCC",t.strokeStyle="#000000",t.lineWidth=1,t.font="bold 10px Arial",t.textAlign="left",t.textBaseline="top";let a=s.toString(),r=e+2,n=i+2;t.strokeText(a,r,n),t.fillText(a,r,n),t.restore()}getItemAsset(t){let e=S[t];if(e&&"number"==typeof e.index)return{index:e.index,spritePath:e.spritePath}}getSlotAt(t,e,i){let s=i-this.config.marginFromEdge-this.config.slotSize,a=this.config.marginFromTop;for(let i=0;i<this.config.slotsPerColumn;i++){let r=a+i*(this.config.slotSize+this.config.slotSpacing);if(t>=s&&t<=s+this.config.slotSize&&e>=r&&e<=r+this.config.slotSize)return i}return null}isPointInInventoryArea(t,e,i,s){let a=i-this.config.marginFromEdge-this.config.slotSize,r=this.config.marginFromTop,n=r+(this.config.slotsPerColumn-1)*(this.config.slotSize+this.config.slotSpacing)+this.config.slotSize;return t>=a&&t<=i&&e>=r&&e<=n}constructor(t){this.sprites=new Map,this.imagesLoaded=!1,this.config={slotsPerColumn:9,slotSize:48,slotSpacing:4,marginFromEdge:20,marginFromTop:20,...t},this.loadSprites()}}class b{initializeGame(t){this.player=new k({position:{x:0,y:0},health:100,attackDamage:5}),this.gameState={player:{position:{x:0,y:0},inventory:[],health:100},world:{tiles:[],npcs:[],pois:[]},timestamp:Date.now()},this.camera=new C(this.canvas),this.world=new _(this.camera,new E(t)),this.movement=new x(this.world),this.animationSystem=new P,this.inventoryUI=new A,this.world.setAnimationSystem(this.animationSystem),this.movement.setDirectionChangeCallback((t,e)=>{e&&this.player.setPosition(this.gameState.player.position),this.player.setDirection(t),this.logFacingTile()}),this.gameLoop=new n(this.update.bind(this),this.render.bind(this))}start(){this.gameLoop.start()}stop(){this.gameLoop.stop()}update(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];this.handlePlayerActions(),this.handleMouseInput(),this.controls.update();let i=!1;(0!==this.controls.dragDelta.x||0!==this.controls.dragDelta.y)&&(this.camera.position.x-=this.controls.dragDelta.x,this.camera.position.y-=this.controls.dragDelta.y,this.controls.dragDelta={x:0,y:0},i=!0);let s=this.gameState.player;if((s.position.x!==this.lastPlayerPos.x||s.position.y!==this.lastPlayerPos.y)&&(this.lastPlayerPos={...s.position},i=!0),this.movement.update(s,this.controls),this.camera.update(s.position),this.player.setPosition(s.position),this.world.update(t,s.position,this.player.getInventoryItems().filter(t=>null!==t)),e||i){let t=JSON.stringify(this.gameState.world.npcs);t!==this.lastNPCs&&(this.lastNPCs=t,i=!0);let e=JSON.stringify(this.gameState.world.pois);e!==this.lastPOIs&&(this.lastPOIs=e,i=!0)}this.animationSystem.update(t)}render(){let t=this.canvas.getContext("2d");t&&(t.fillStyle="#000000",t.fillRect(0,0,this.canvas.width,this.canvas.height),this.world.render(t,this.camera),this.renderPlayer(t),this.animationSystem.render(t,this.camera),this.inventoryUI.render(t,this.camera,this.player.getInventoryItems(),this.player.getSelectedSlot()))}renderPlayer(t){let e=this.canvas.width/2,i=this.canvas.height/2;t.fillStyle="red",t.fillRect(e-5,i-5,10,10)}handlePlayerActions(){for(let t=1;t<=9;t++)this.controls.wasKeyJustPressed("slot".concat(t))&&this.player.selectInventorySlot(t-1);this.controls.wasKeyJustPressed("inventory")&&this.player.openInventory(),this.controls.wasKeyJustPressed("attack")&&(console.log("Attack key detected - executing attack"),this.logFacingTile(),this.handleAttack()),this.controls.wasKeyJustPressed("interact")&&(this.logFacingTile(),this.handleInteract())}handleMouseInput(){let t=this.controls.getMouseClick();if(t&&this.inventoryUI.isPointInInventoryArea(t.x,t.y,this.canvas.width,this.canvas.height)){let e=this.inventoryUI.getSlotAt(t.x,t.y,this.canvas.width);null!==e&&(this.player.selectInventorySlot(e),console.log("Mouse clicked inventory slot ".concat(e+1)))}}handleAttack(){let t=this.player.getFacingPosition(E.TILE_SIZE),e=Math.floor(t.x/E.TILE_SIZE),i=Math.floor(t.y/E.TILE_SIZE),s=this.world.getTile(e,i);if(console.log("Player attack damage: ".concat(this.player.attackDamage)),console.log("Attacking tile at (".concat(e,", ").concat(i,"): ").concat(null==s?void 0:s.value)),(null==s?void 0:s.trees)&&s.trees.length>0){let t=s.trees[0];if(t){console.log("Tree health before attack: ".concat(t.getHealth(),"/").concat(t.getMaxHealth()));let s=t.takeDamage(this.player.attackDamage);s.destroyed?(console.log("\uD83C\uDF33 Tree destroyed! Dropped ".concat(s.dropValue," ").concat(s.dropType)),this.player.addToInventory(s.dropType,s.dropValue)&&console.log("✅ Added ".concat(s.dropValue," ").concat(s.dropType," to inventory")),console.log("Tree cut down - now showing broken tree stump at (".concat(e,", ").concat(i,")"))):console.log("Tree took ".concat(this.player.attackDamage," damage. Health: ").concat(t.getHealth(),"/").concat(t.getMaxHealth()))}}else if((null==s?void 0:s.cactus)&&s.cactus.length>0){let t=s.cactus[0];if(t){console.log("Cactus health before attack: ".concat(t.getHealth(),"/").concat(t.getMaxHealth()));let a=t.takeDamage(this.player.attackDamage);if(a.destroyed){console.log("\uD83C\uDF35 Cactus destroyed! Dropped ".concat(a.dropValue," ").concat(a.dropType)),this.player.addToInventory(a.dropType,a.dropValue)&&console.log("✅ Added ".concat(a.dropValue," ").concat(a.dropType," to inventory"));let r="".concat(e,",").concat(i);this.animationSystem.removeCactus(r,t),s.cactus=s.cactus.filter(e=>e!==t),0===s.cactus.length&&(delete s.cactus,s.value="SAND",this.world.invalidateCache(),console.log("Cactus completely removed - tile converted to SAND at (".concat(e,", ").concat(i,")")))}else console.log("Cactus took ".concat(this.player.attackDamage," damage. Health: ").concat(t.getHealth(),"/").concat(t.getMaxHealth()))}}else console.log("Nothing to attack in that direction")}handleInteract(){let t=this.player.getFacingPosition(E.TILE_SIZE),e=Math.floor(t.x/E.TILE_SIZE),i=Math.floor(t.y/E.TILE_SIZE),s=this.world.getTile(e,i);console.log("Interacting with tile at (".concat(e,", ").concat(i,"):"),null==s?void 0:s.value),(null==s?void 0:s.trees)&&s.trees.length>0?console.log("Interacting with tree - could harvest fruit, check growth, etc."):(null==s?void 0:s.cactus)&&s.cactus.length>0?console.log("Interacting with cactus - could harvest water, check growth, etc."):console.log("Nothing to interact with in that direction")}logFacingTile(){let t=this.player.getFacingPosition(E.TILE_SIZE),e=Math.floor(t.x/E.TILE_SIZE),i=Math.floor(t.y/E.TILE_SIZE),s=this.world.getTile(e,i),a=(null==s?void 0:s.value)||"UNKNOWN";if((null==s?void 0:s.trees)&&s.trees.length>0){let t=s.trees[0];a+=" (Tree: ".concat(null==t?void 0:t.getHealth(),"/").concat(null==t?void 0:t.getMaxHealth()," HP)")}if((null==s?void 0:s.cactus)&&s.cactus.length>0){let t=s.cactus[0];a+=" (Cactus: ".concat(null==t?void 0:t.getHealth(),"/").concat(null==t?void 0:t.getMaxHealth()," HP)")}console.log("Facing tile: ".concat(a))}saveGame(){let t=JSON.stringify(this.gameState);localStorage.setItem("gameState",t)}loadGame(){let t=localStorage.getItem("gameState");t&&(this.gameState=JSON.parse(t))}constructor(t,e){this.lastPlayerPos={x:0,y:0},this.lastNPCs="",this.lastPOIs="",this.canvas=t,this.controls=new o(t),this.initializeGame(e)}}function D(){let t=(0,a.useRef)(null),e=(0,a.useRef)(null),i=(0,r.useSearchParams)();return(0,a.useEffect)(()=>{let s=()=>{t.current&&(t.current.width=window.innerWidth,t.current.height=window.innerHeight)};if(s(),window.addEventListener("resize",s),t.current){var a;let s=null!=(a=null==i?void 0:i.get("seed"))?a:void 0;e.current=new b(t.current,s),e.current.start()}return()=>{window.removeEventListener("resize",s),e.current&&e.current.stop()}},[i]),(0,s.jsx)("div",{className:"fixed inset-0 bg-gray-900",children:(0,s.jsx)("canvas",{ref:t,className:"w-full h-full block border-2 border-gray-700",style:{display:"block"}})})}function L(){return(0,s.jsx)(a.Suspense,{fallback:(0,s.jsx)("div",{className:"fixed inset-0 bg-gray-900 flex items-center justify-center",children:(0,s.jsx)("div",{className:"text-white text-xl",children:"Loading World Simulator..."})}),children:(0,s.jsx)(D,{})})}}},t=>{var e=e=>t(t.s=e);t.O(0,[966,309,951,358],()=>e(3779)),_N_E=t.O()}]);